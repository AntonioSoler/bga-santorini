import{BufferGeometry,FileLoader,Float32BufferAttribute,Group,LineBasicMaterial,LineSegments,Loader,Material,Mesh,MeshPhongMaterial,Points,PointsMaterial}from"./three.js";var OBJLoader=function(){var e=/^[og]\s*(.+)?/,t=/^mtllib /,r=/^usemtl /,i=/^usemap /;function s(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseNormalIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseUVIndex:function(e,t){var r=parseInt(e,10);return 2*(r>=0?r-1:r+t/2)},addVertex:function(e,t,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(e,t,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(e,t,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[e+0],i[e+1]),s.push(i[t+0],i[t+1]),s.push(i[r+0],i[r+1])},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,r,i,s,a,o,n,l){var h=this.vertices.length,u=this.parseVertexIndex(e,h),c=this.parseVertexIndex(t,h),p=this.parseVertexIndex(r,h);if(this.addVertex(u,c,p),this.colors.length>0&&this.addColor(u,c,p),void 0!==i&&""!==i){var m=this.uvs.length;u=this.parseUVIndex(i,m),c=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(u,c,p)}if(void 0!==o&&""!==o){var f=this.normals.length;u=this.parseNormalIndex(o,f),c=o===n?u:this.parseNormalIndex(n,f),p=o===l?u:this.parseNormalIndex(l,f),this.addNormal(u,c,p)}},addPointGeometry:function(e){this.object.geometry.type="Points";for(var t=this.vertices.length,r=0,i=e.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(e[r],t))},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=e.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(e[s],r));var o=0;for(a=t.length;o<a;o++)this.addUVLine(this.parseUVIndex(t[o],i))}};return e.startObject("",!1),e}function a(e){Loader.call(this,e),this.materials=null}return a.prototype=Object.assign(Object.create(Loader.prototype),{constructor:a,load:function(e,t){var r=this;return new Promise(function(i,s){var a=new FileLoader(r.manager);a.setPath(r.path),a.load(e,function(e){i(r.parse(e))},t,s)})},setMaterials:function(e){return this.materials=e,this},parse:function(a){var o=new s;-1!==a.indexOf("\r\n")&&(a=a.replace(/\r\n/g,"\n")),-1!==a.indexOf("\\\n")&&(a=a.replace(/\\\n/g,""));for(var n=a.split("\n"),l="",h="",u=[],c="function"==typeof"".trimLeft,p=0,m=n.length;p<m;p++)if(l=n[p],0!==(l=c?l.trimLeft():l.trim()).length&&"#"!==(h=l.charAt(0)))if("v"===h){var f=l.split(/\s+/);switch(f[0]){case"v":o.vertices.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3])),f.length>=7&&o.colors.push(parseFloat(f[4]),parseFloat(f[5]),parseFloat(f[6]));break;case"vn":o.normals.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3]));break;case"vt":o.uvs.push(parseFloat(f[1]),parseFloat(f[2]))}}else if("f"===h){for(var d=l.substr(1).trim().split(/\s+/),v=[],g=0,b=d.length;g<b;g++){var j=d[g];if(j.length>0){var x=j.split("/");v.push(x)}}var y=v[0];for(g=1,b=v.length-1;g<b;g++){var L=v[g],M=v[g+1];o.addFace(y[0],L[0],M[0],y[1],L[1],M[1],y[2],L[2],M[2])}}else if("l"===h){var w=l.substring(1).trim().split(" "),V=[],F=[];if(-1===l.indexOf("/"))V=w;else for(var I=0,P=w.length;I<P;I++){var B=w[I].split("/");""!==B[0]&&V.push(B[0]),""!==B[1]&&F.push(B[1])}o.addLineGeometry(V,F)}else if("p"===h){var A=l.substr(1).trim().split(" ");o.addPointGeometry(A)}else if(null!==(u=e.exec(l))){var z=(" "+u[0].substr(1).trim()).substr(1);o.startObject(z)}else if(r.test(l))o.object.startMaterial(l.substring(7).trim(),o.materialLibraries);else if(t.test(l))o.materialLibraries.push(l.substring(7).trim());else if(i.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if((u=l.split(" ")).length>1){var O=u[1].trim().toLowerCase();o.object.smooth="0"!==O&&"off"!==O}else o.object.smooth=!0;(q=o.object.currentMaterial())&&(q.smooth=o.object.smooth)}else{if("\0"===l)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+l+'"')}o.finalize();var C=new Group;C.materialLibraries=[].concat(o.materialLibraries);for(p=0,m=o.objects.length;p<m;p++){var E=o.objects[p],U=E.geometry,G=E.materials,S="Line"===U.type,_="Points"===U.type,N=!1;if(0!==U.vertices.length){var J=new BufferGeometry;J.setAttribute("position",new Float32BufferAttribute(U.vertices,3)),U.normals.length>0?J.setAttribute("normal",new Float32BufferAttribute(U.normals,3)):J.computeVertexNormals(),U.colors.length>0&&(N=!0,J.setAttribute("color",new Float32BufferAttribute(U.colors,3))),U.uvs.length>0&&J.setAttribute("uv",new Float32BufferAttribute(U.uvs,2));for(var T,D=[],R=0,k=G.length;R<k;R++){var H=(W=G[R]).name+"_"+W.smooth+"_"+N,q=o.materials[H];if(null!==this.materials)if(q=this.materials.create(W.name),!S||!q||q instanceof LineBasicMaterial){if(_&&q&&!(q instanceof PointsMaterial)){var K=new PointsMaterial({size:10,sizeAttenuation:!1});Material.prototype.copy.call(K,q),K.color.copy(q.color),K.map=q.map,q=K}}else{var Q=new LineBasicMaterial;Material.prototype.copy.call(Q,q),Q.color.copy(q.color),q=Q}void 0===q&&((q=S?new LineBasicMaterial:_?new PointsMaterial({size:1,sizeAttenuation:!1}):new MeshPhongMaterial).name=W.name,q.flatShading=!W.smooth,q.vertexColors=N,o.materials[H]=q),D.push(q)}if(D.length>1){for(R=0,k=G.length;R<k;R++){var W=G[R];J.addGroup(W.groupStart,W.groupCount,R)}T=S?new LineSegments(J,D):_?new Points(J,D):new Mesh(J,D)}else T=S?new LineSegments(J,D[0]):_?new Points(J,D[0]):new Mesh(J,D[0]);T.name=E.name,C.add(T)}}return C}}),a}();export{OBJLoader};
