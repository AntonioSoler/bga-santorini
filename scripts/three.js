Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52)),Number.isInteger===void 0&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),Math.sign===void 0&&(Math.sign=function(e){return 0>e?-1:0<e?1:+e}),!1=="name"in Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&(Object.assign=function(e){if(e===void 0||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),r=1,a;r<arguments.length;r++)if(a=arguments[r],void 0!==a&&null!==a)for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(t[i]=a[i]);return t});var REVISION="115",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,FrontFaceDirectionCW=0,FrontFaceDirectionCCW=1,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,Uncharted2ToneMapping=3,CineonToneMapping=4,ACESFilmicToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,SphericalReflectionMapping=305,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=RGBAFormat,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,SRGB8_ALPHA8_ASTC_4x4_Format=37840,SRGB8_ALPHA8_ASTC_5x4_Format=37841,SRGB8_ALPHA8_ASTC_5x5_Format=37842,SRGB8_ALPHA8_ASTC_6x5_Format=37843,SRGB8_ALPHA8_ASTC_6x6_Format=37844,SRGB8_ALPHA8_ASTC_8x5_Format=37845,SRGB8_ALPHA8_ASTC_8x6_Format=37846,SRGB8_ALPHA8_ASTC_8x8_Format=37847,SRGB8_ALPHA8_ASTC_10x5_Format=37848,SRGB8_ALPHA8_ASTC_10x6_Format=37849,SRGB8_ALPHA8_ASTC_10x8_Format=37850,SRGB8_ALPHA8_ASTC_10x10_Format=37851,SRGB8_ALPHA8_ASTC_12x10_Format=37852,SRGB8_ALPHA8_ASTC_12x12_Format=37853,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042;function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var r=this._listeners;r[e]===void 0&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var r=this._listeners;return r[e]!==void 0&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,a=r[e];if(void 0!==a){var i=a.indexOf(t);-1!==i&&a.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;for(var a=r.slice(0),n=0,o=a.length;n<o;n++)a[n].call(this,e)}}}});for(var _lut=[],i=0;256>i;i++)_lut[i]=(16>i?"0":"")+i.toString(16);var MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=0|4294967295*Math.random(),t=0|4294967295*Math.random(),r=0|4294967295*Math.random(),a=0|4294967295*Math.random(),i=_lut[255&e]+_lut[255&e>>8]+_lut[255&e>>16]+_lut[255&e>>24]+"-"+_lut[255&t]+_lut[255&t>>8]+"-"+_lut[64|15&t>>16]+_lut[255&t>>24]+"-"+_lut[128|63&r]+_lut[255&r>>8]+"-"+_lut[255&r>>16]+_lut[255&r>>24]+_lut[255&a]+_lut[255&a>>8]+_lut[255&a>>16]+_lut[255&a>>24];return i.toUpperCase()},clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,a,i){return a+(e-t)*(i-a)/(r-t)},lerp:function(e,r,a){return(1-a)*e+a*r},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*MathUtils.DEG2RAD},radToDeg:function(e){return e*MathUtils.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,r,a,i){var n=Math.cos,o=Math.sin,s=n(r/2),l=o(r/2),d=n((t+a)/2),p=o((t+a)/2),c=n((t-a)/2),u=o((t-a)/2),m=n((a-t)/2),g=o((a-t)/2);"XYX"===i?e.set(s*p,l*c,l*u,s*d):"YZY"===i?e.set(l*u,s*p,l*c,s*d):"ZXZ"===i?e.set(l*c,l*u,s*p,s*d):"XZX"===i?e.set(s*p,l*g,l*m,s*d):"YXY"===i?e.set(l*m,s*p,l*g,s*d):"ZYZ"===i?e.set(l*g,l*m,s*p,s*d):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};function Vector2(e,t){this.x=e||0,this.y=t||0}Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Vector2.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(t){var r=this.x,a=this.y,i=t.elements;return this.x=i[0]*r+i[3]*a+i[6],this.y=i[1]*r+i[4]*a+i[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var r=Math.cos(t),a=Math.sin(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*a+e.x,this.y=i*a+n*r+e.y,this}});function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(e,t,r,a,i,n,o,s,l){var d=this.elements;return d[0]=e,d[1]=a,d[2]=o,d[3]=t,d[4]=i,d[5]=s,d[6]=r,d[7]=n,d[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},extractBasis:function(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[3],s=r[6],l=r[1],d=r[4],p=r[7],c=r[2],u=r[5],m=r[8],g=a[0],f=a[3],h=a[6],y=a[1],x=a[4],v=a[7],_=a[2],b=a[5],M=a[8];return i[0]=n*g+o*y+s*_,i[3]=n*f+o*x+s*b,i[6]=n*h+o*v+s*M,i[1]=l*g+d*y+p*_,i[4]=l*f+d*x+p*b,i[7]=l*h+d*v+p*M,i[2]=c*g+u*y+m*_,i[5]=c*f+u*x+m*b,i[8]=c*h+u*v+m*M,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],l=t[6],d=t[7],p=t[8];return r*s*p-r*e*d-a*o*p+a*e*l+n*o*d-n*s*l},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var r=e.elements,a=this.elements,i=r[0],n=r[1],o=r[2],s=r[3],l=r[4],d=r[5],p=r[6],c=r[7],u=r[8],m=u*l-d*c,g=d*p-u*s,f=c*s-l*p,h=i*m+n*g+o*f;if(0==h)return this.set(0,0,0,0,0,0,0,0,0);var y=1/h;return a[0]=m*y,a[1]=(o*c-u*n)*y,a[2]=(d*n-o*l)*y,a[3]=g*y,a[4]=(u*i-o*p)*y,a[5]=(o*s-d*i)*y,a[6]=f*y,a[7]=(n*p-c*i)*y,a[8]=(l*i-n*s)*y,this},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,r,a,i,n,o){var l=Math.cos(i),d=Math.sin(i);this.set(r*l,r*d,-r*(l*n+d*o)+n+e,-a*d,a*l,-a*(-d*n+l*o)+o+t,0,0,1)},scale:function(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function(e){var t=Math.cos(e),r=Math.sin(e),a=this.elements,i=a[0],n=a[3],o=a[6],s=a[1],l=a[4],d=a[7];return a[0]=t*i+r*s,a[3]=t*n+r*l,a[6]=t*o+r*d,a[1]=-r*i+t*s,a[4]=-r*n+t*l,a[7]=-r*o+t*d,this},translate:function(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){for(var t=this.elements,r=e.elements,a=0;9>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var r=0;9>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});var ImageUtils={getDataURL:function(e){var t;if("undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===_canvas&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),_canvas.width=e.width,_canvas.height=e.height;var r=_canvas.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=_canvas}return 2048<t.width||2048<t.height?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}},textureId=0,_canvas;function Texture(e,t,r,a,i,n,o,s,l,d){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.image=e===void 0?Texture.DEFAULT_IMAGE:e,this.mipmaps=[],this.mapping=t===void 0?Texture.DEFAULT_MAPPING:t,this.wrapS=r===void 0?ClampToEdgeWrapping:r,this.wrapT=a===void 0?ClampToEdgeWrapping:a,this.magFilter=i===void 0?LinearFilter:i,this.minFilter=n===void 0?LinearMipmapLinearFilter:n,this.anisotropy=l===void 0?1:l,this.format=o===void 0?RGBAFormat:o,this.internalFormat=null,this.type=s===void 0?UnsignedByteType:s,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d===void 0?LinearEncoding:d,this.version=0,this.onUpdate=null}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=UVMapping,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var a=this.image;if(void 0===a.uuid&&(a.uuid=MathUtils.generateUUID()),!t&&void 0===e.images[a.uuid]){var n;if(Array.isArray(a)){n=[];for(var o=0,s=a.length;o<s;o++)n.push(ImageUtils.getDataURL(a[o]))}else n=ImageUtils.getDataURL(a);e.images[a.uuid]={uuid:a.uuid,url:n}}r.image=a.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==UVMapping)return e;if(e.applyMatrix3(this.matrix),0>e.x||1<e.x)switch(this.wrapS){case RepeatWrapping:e.x-=Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=0>e.x?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x-=Math.floor(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case RepeatWrapping:e.y-=Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=0>e.y?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y-=Math.floor(e.y);}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});function Vector4(e,t,r,a){this.x=e||0,this.y=t||0,this.z=r||0,this.w=a===void 0?1:a}Object.defineProperties(Vector4.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(Vector4.prototype,{isVector4:!0,set:function(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(t){var r=this.x,a=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*r+o[4]*a+o[8]*i+o[12]*n,this.y=o[1]*r+o[5]*a+o[9]*i+o[13]*n,this.z=o[2]*r+o[6]*a+o[10]*i+o[14]*n,this.w=o[3]*r+o[7]*a+o[11]*i+o[15]*n,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t=.01,r=.1,a=e.elements,i=a[0],n=a[4],o=a[8],l=a[1],d=a[5],p=a[9],c=a[2],u=a[6],m=a[10],g,f,h,v;if(Math.abs(n-l)<t&&Math.abs(o-c)<t&&Math.abs(p-u)<t){if(Math.abs(n+l)<r&&Math.abs(o+c)<r&&Math.abs(p+u)<r&&Math.abs(i+d+m-3)<r)return this.set(1,0,0,0),this;g=Math.PI;var _=(i+1)/2,b=(d+1)/2,M=(m+1)/2,S=(n+l)/4,E=(o+c)/4,T=(p+u)/4;return _>b&&_>M?_<t?(f=0,h=.707106781,v=.707106781):(f=Math.sqrt(_),h=S/f,v=E/f):b>M?b<t?(f=.707106781,h=0,v=.707106781):(h=Math.sqrt(b),f=S/h,v=T/h):M<t?(f=.707106781,h=.707106781,v=0):(v=Math.sqrt(M),f=E/v,h=T/v),this.set(f,h,v,g),this}var w=Math.sqrt((u-p)*(u-p)+(o-c)*(o-c)+(l-n)*(l-n));return .001>Math.abs(w)&&(w=1),this.x=(u-p)/w,this.y=(o-c)/w,this.z=(l-n)/w,this.w=Math.acos((i+d+m-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}});function WebGLRenderTarget(e,t,r){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),r=r||{},this.texture=new Texture(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=r.generateMipmaps!==void 0&&r.generateMipmaps,this.texture.minFilter=r.minFilter===void 0?LinearFilter:r.minFilter,this.depthBuffer=!(r.depthBuffer!==void 0)||r.depthBuffer,this.stencilBuffer=!(r.stencilBuffer!==void 0)||r.stencilBuffer,this.depthTexture=r.depthTexture===void 0?null:r.depthTexture}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function WebGLMultisampleRenderTarget(e,t,r){WebGLRenderTarget.call(this,e,t,r),this.samples=4}WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.samples=e.samples,this}});function Quaternion(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._w=a===void 0?1:a}Object.assign(Quaternion,{slerp:function(e,r,a,i){return a.copy(e).slerp(r,i)},slerpFlat:function(e,r,a,i,n,o,l){var d=a[i+0],p=a[i+1],c=a[i+2],u=a[i+3],m=n[o+0],g=n[o+1],h=n[o+2],y=n[o+3];if(u!==y||d!==m||p!==g||c!==h){var x=1-l,v=d*m+p*g+c*h+u*y,_=0<=v?1:-1,b=1-v*v;if(b>Number.EPSILON){var M=Math.sqrt(b),S=Math.atan2(M,v*_);x=Math.sin(x*S)/M,l=Math.sin(l*S)/M}var E=l*_;if(d=d*x+m*E,p=p*x+g*E,c=c*x+h*E,u=u*x+y*E,x==1-l){var T=1/Math.sqrt(d*d+p*p+c*c+u*u);d*=T,p*=T,c*=T,u*=T}}e[r]=d,e[r+1]=p,e[r+2]=c,e[r+3]=u}}),Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(Quaternion.prototype,{isQuaternion:!0,set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,a=e._y,i=e._z,n=e.order,o=Math.cos,s=Math.sin,l=o(r/2),d=o(a/2),p=o(i/2),c=s(r/2),u=s(a/2),m=s(i/2);return"XYZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"YXZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"ZXY"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"ZYX"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"YZX"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p-c*u*m):"XZY"===n&&(this._x=c*d*p-l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p+c*u*m),!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,a=Math.sin(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Math.cos(r),this._onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0],a=t[4],i=t[8],n=t[1],o=t[5],l=t[9],d=t[2],p=t[6],c=t[10],u=r+o+c,m;return 0<u?(m=.5/Math.sqrt(u+1),this._w=.25/m,this._x=(p-l)*m,this._y=(i-d)*m,this._z=(n-a)*m):r>o&&r>c?(m=2*Math.sqrt(1+r-o-c),this._w=(p-l)/m,this._x=.25*m,this._y=(a+n)/m,this._z=(i+d)/m):o>c?(m=2*Math.sqrt(1+o-r-c),this._w=(i-d)/m,this._x=(a+n)/m,this._y=.25*m,this._z=(l+p)/m):(m=2*Math.sqrt(1+c-r-o),this._w=(n-a)/m,this._x=(i+d)/m,this._y=(l+p)/m,this._z=.25*m),this._onChangeCallback(),this},setFromUnitVectors:function(e,t){var a=e.dot(t)+1;return a<1e-6?(a=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,r){var a=this.angleTo(e);if(0===a)return this;var i=Math.min(1,r/a);return this.slerp(e,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this._onChangeCallback(),this},multiply:function(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,a=e._y,i=e._z,n=e._w,o=t._x,s=t._y,l=t._z,d=t._w;return this._x=r*d+n*o+a*l-i*s,this._y=a*d+n*s+i*o-r*l,this._z=i*d+n*l+r*s-a*o,this._w=n*d-r*o-a*s-i*l,this._onChangeCallback(),this},slerp:function(e,r){if(0===r)return this;if(1===r)return this.copy(e);var t=this._x,a=this._y,i=this._z,n=this._w,o=n*e._w+t*e._x+a*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),1<=o)return this._w=n,this._x=t,this._y=a,this._z=i,this;var l=1-o*o;if(l<=Number.EPSILON){var d=1-r;return this._w=d*n+r*this._w,this._x=d*t+r*this._x,this._y=d*a+r*this._y,this._z=d*i+r*this._z,this.normalize(),this._onChangeCallback(),this}var s=Math.sqrt(l),p=Math.atan2(s,o),c=Math.sin((1-r)*p)/s,u=Math.sin(r*p)/s;return this._w=n*c+this._w*u,this._x=t*c+this._x*u,this._y=a*c+this._y*u,this._z=i*c+this._z*u,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});var _vector=new Vector3,_quaternion=new Quaternion;function Vector3(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}Object.assign(Vector3.prototype,{isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(_quaternion.setFromAxisAngle(e,t))},applyMatrix3:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[3]*a+n[6]*i,this.y=n[1]*r+n[4]*a+n[7]*i,this.z=n[2]*r+n[5]*a+n[8]*i,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements,e=1/(n[3]*r+n[7]*a+n[11]*i+n[15]);return this.x=(n[0]*r+n[4]*a+n[8]*i+n[12])*e,this.y=(n[1]*r+n[5]*a+n[9]*i+n[13])*e,this.z=(n[2]*r+n[6]*a+n[10]*i+n[14])*e,this},applyQuaternion:function(e){var t=this.x,r=this.y,a=this.z,i=e.x,n=e.y,o=e.z,s=e.w,l=s*t+n*a-o*r,d=s*r+o*t-i*a,p=s*a+i*r-n*t,c=-i*t-n*r-o*a;return this.x=l*s+c*-i+d*-o-p*-n,this.y=d*s+c*-n+p*-i-l*-o,this.z=p*s+c*-o+l*-n-d*-i,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[4]*a+n[8]*i,this.y=n[1]*r+n[5]*a+n[9]*i,this.z=n[2]*r+n[6]*a+n[10]*i,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function(e,t){return void 0===t?this.crossVectors(this,e):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t))},crossVectors:function(e,t){var r=e.x,a=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=a*s-i*o,this.y=i*n-r*s,this.z=r*o-a*n,this},projectOnVector:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)},projectOnPlane:function(e){return _vector.copy(this).projectOnVector(e),this.sub(_vector)},reflect:function(e){return this.sub(_vector.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var r=this.dot(e)/t;return Math.acos(MathUtils.clamp(r,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,a=this.z-e.z;return t*t+r*r+a*a},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,r){var a=Math.sin(t)*e;return this.x=a*Math.sin(r),this.y=Math.cos(t)*e,this.z=a*Math.cos(r),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(t){var r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=a,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}});var _v1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(e,t,r,a,i,n,o,s,l,d,p,c,u,m,g,f){var h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=a,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=l,h[6]=d,h[10]=p,h[14]=c,h[3]=u,h[7]=m,h[11]=g,h[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new Matrix4().fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(e){var t=this.elements,r=e.elements,a=1/_v1.setFromMatrixColumn(e,0).length(),i=1/_v1.setFromMatrixColumn(e,1).length(),n=1/_v1.setFromMatrixColumn(e,2).length();return t[0]=r[0]*a,t[1]=r[1]*a,t[2]=r[2]*a,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=this.elements,i=t.x,n=t.y,o=t.z,s=Math.cos(i),a=Math.sin(i),l=Math.cos(n),p=Math.sin(n),d=Math.cos(o),e=Math.sin(o);if("XYZ"===t.order){var c=s*d,u=s*e,m=a*d,g=a*e;r[0]=l*d,r[4]=-l*e,r[8]=p,r[1]=u+m*p,r[5]=c-g*p,r[9]=-a*l,r[2]=g-c*p,r[6]=m+u*p,r[10]=s*l}else if("YXZ"===t.order){var f=l*d,h=l*e,y=p*d,x=p*e;r[0]=f+x*a,r[4]=y*a-h,r[8]=s*p,r[1]=s*e,r[5]=s*d,r[9]=-a,r[2]=h*a-y,r[6]=x+f*a,r[10]=s*l}else if("ZXY"===t.order){var f=l*d,h=l*e,y=p*d,x=p*e;r[0]=f-x*a,r[4]=-s*e,r[8]=y+h*a,r[1]=h+y*a,r[5]=s*d,r[9]=x-f*a,r[2]=-s*p,r[6]=a,r[10]=s*l}else if("ZYX"===t.order){var c=s*d,u=s*e,m=a*d,g=a*e;r[0]=l*d,r[4]=m*p-u,r[8]=c*p+g,r[1]=l*e,r[5]=g*p+c,r[9]=u*p-m,r[2]=-p,r[6]=a*l,r[10]=s*l}else if("YZX"===t.order){var v=s*l,_=s*p,b=a*l,M=a*p;r[0]=l*d,r[4]=M-v*e,r[8]=b*e+_,r[1]=e,r[5]=s*d,r[9]=-a*d,r[2]=-p*d,r[6]=_*e+b,r[10]=v-M*e}else if("XZY"===t.order){var v=s*l,_=s*p,b=a*l,M=a*p;r[0]=l*d,r[4]=-e,r[8]=p*d,r[1]=v*e+M,r[5]=s*d,r[9]=_*e-b,r[2]=b*e-_,r[6]=a*d,r[10]=M*e+v}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(_zero,e,_one)},lookAt:function(e,t,r){var a=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(r,_z),0===_x.lengthSq()&&(1===Math.abs(r.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(r,_z)),_x.normalize(),_y.crossVectors(_z,_x),a[0]=_x.x,a[4]=_y.x,a[8]=_z.x,a[1]=_x.y,a[5]=_y.y,a[9]=_z.y,a[2]=_x.z,a[6]=_y.z,a[10]=_z.z,this},multiply:function(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[4],s=r[8],l=r[12],d=r[1],p=r[5],c=r[9],u=r[13],m=r[2],g=r[6],f=r[10],h=r[14],y=r[3],x=r[7],v=r[11],_=r[15],b=a[0],M=a[4],S=a[8],E=a[12],T=a[1],w=a[5],L=a[9],A=a[13],R=a[2],P=a[6],C=a[10],I=a[14],D=a[3],N=a[7],z=a[11],U=a[15];return i[0]=n*b+o*T+s*R+l*D,i[4]=n*M+o*w+s*P+l*N,i[8]=n*S+o*L+s*C+l*z,i[12]=n*E+o*A+s*I+l*U,i[1]=d*b+p*T+c*R+u*D,i[5]=d*M+p*w+c*P+u*N,i[9]=d*S+p*L+c*C+u*z,i[13]=d*E+p*A+c*I+u*U,i[2]=m*b+g*T+f*R+h*D,i[6]=m*M+g*w+f*P+h*N,i[10]=m*S+g*L+f*C+h*z,i[14]=m*E+g*A+f*I+h*U,i[3]=y*b+x*T+v*R+_*D,i[7]=y*M+x*w+v*P+_*N,i[11]=y*S+x*L+v*C+_*z,i[15]=y*E+x*A+v*I+_*U,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[4],a=e[8],i=e[12],n=e[1],o=e[5],s=e[9],l=e[13],d=e[2],p=e[6],c=e[10],u=e[14],m=e[3],g=e[7],f=e[11],h=e[15];return m*(+i*s*p-a*l*p-i*o*c+r*l*c+a*o*u-r*s*u)+g*(+t*s*u-t*l*c+i*n*c-a*n*u+a*l*d-i*s*d)+f*(+t*l*p-t*o*u-i*n*p+r*n*u+i*o*d-r*l*d)+h*(-a*o*d-t*s*p+t*o*c+a*n*p-r*n*c+r*s*d)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,r){var a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=r),this},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");var r=this.elements,a=e.elements,i=a[0],n=a[1],o=a[2],s=a[3],l=a[4],d=a[5],p=a[6],c=a[7],u=a[8],m=a[9],g=a[10],f=a[11],h=a[12],y=a[13],x=a[14],v=a[15],_=m*x*c-y*g*c+y*p*f-d*x*f-m*p*v+d*g*v,b=h*g*c-u*x*c-h*p*f+l*x*f+u*p*v-l*g*v,M=u*y*c-h*m*c+h*d*f-l*y*f-u*d*v+l*m*v,S=h*m*p-u*y*p-h*d*g+l*y*g+u*d*x-l*m*x,E=i*_+n*b+o*M+s*S;if(0===E)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var T=1/E;return r[0]=_*T,r[1]=(y*g*s-m*x*s-y*o*f+n*x*f+m*o*v-n*g*v)*T,r[2]=(d*x*s-y*p*s+y*o*c-n*x*c-d*o*v+n*p*v)*T,r[3]=(m*p*s-d*g*s-m*o*c+n*g*c+d*o*f-n*p*f)*T,r[4]=b*T,r[5]=(u*x*s-h*g*s+h*o*f-i*x*f-u*o*v+i*g*v)*T,r[6]=(h*p*s-l*x*s-h*o*c+i*x*c+l*o*v-i*p*v)*T,r[7]=(l*g*s-u*p*s+u*o*c-i*g*c-l*o*f+i*p*f)*T,r[8]=M*T,r[9]=(h*m*s-u*y*s-h*n*f+i*y*f+u*n*v-i*m*v)*T,r[10]=(l*y*s-h*d*s+h*n*c-i*y*c-l*n*v+i*d*v)*T,r[11]=(u*d*s-l*m*s-u*n*c+i*m*c+l*n*f-i*d*f)*T,r[12]=S*T,r[13]=(u*y*o-h*m*o+h*n*g-i*y*g-u*n*x+i*m*x)*T,r[14]=(h*d*o-l*y*o-h*n*p+i*y*p+l*n*x-i*d*x)*T,r[15]=(l*m*o-u*d*o+u*n*p-i*m*p-l*n*g+i*d*g)*T,this},scale:function(e){var t=this.elements,r=e.x,a=e.y,i=e.z;return t[0]*=r,t[4]*=a,t[8]*=i,t[1]*=r,t[5]*=a,t[9]*=i,t[2]*=r,t[6]*=a,t[10]*=i,t[3]*=r,t[7]*=a,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,a))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,r){var a=Math.cos(r),i=Math.sin(r),n=1-a,t=e.x,o=e.y,s=e.z,l=n*t,d=n*o;return this.set(l*t+a,l*o-i*s,l*s+i*o,0,l*o+i*s,d*o+a,d*s-i*t,0,l*s-i*o,d*s+i*t,n*s*s+a,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){var a=this.elements,i=t._x,n=t._y,o=t._z,s=t._w,l=i+i,d=n+n,p=o+o,c=i*l,u=i*d,m=i*p,g=n*d,f=n*p,h=o*p,y=s*l,x=s*d,v=s*p,_=r.x,b=r.y,M=r.z;return a[0]=(1-(g+h))*_,a[1]=(u+v)*_,a[2]=(m-x)*_,a[3]=0,a[4]=(u-v)*b,a[5]=(1-(c+h))*b,a[6]=(f+y)*b,a[7]=0,a[8]=(m+x)*M,a[9]=(f-y)*M,a[10]=(1-(c+g))*M,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this},decompose:function(e,t,r){var a=this.elements,i=_v1.set(a[0],a[1],a[2]).length(),n=_v1.set(a[4],a[5],a[6]).length(),o=_v1.set(a[8],a[9],a[10]).length(),s=this.determinant();0>s&&(i=-i),e.x=a[12],e.y=a[13],e.z=a[14],_m1.copy(this);var l=1/i,d=1/n,p=1/o;return _m1.elements[0]*=l,_m1.elements[1]*=l,_m1.elements[2]*=l,_m1.elements[4]*=d,_m1.elements[5]*=d,_m1.elements[6]*=d,_m1.elements[8]*=p,_m1.elements[9]*=p,_m1.elements[10]*=p,t.setFromRotationMatrix(_m1),r.x=i,r.y=n,r.z=o,this},makePerspective:function(e,t,r,a,i,n){void 0===n&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-a),o[9]=(r+a)/(r-a),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,r,a,i,n){var o=this.elements,s=1/(t-e),l=1/(r-a),d=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*l,o[9]=0,o[13]=-((r+a)*l),o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-((n+i)*d),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,a=0;16>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var r=0;16>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}});var _matrix=new Matrix4,_quaternion$1=new Quaternion;function Euler(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._order=a||Euler.DefaultOrder}Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Euler.DefaultOrder="XYZ",Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(Euler.prototype,{isEuler:!0,set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var a=MathUtils.clamp,i=e.elements,n=i[0],o=i[4],s=i[8],l=i[1],d=i[5],p=i[9],c=i[2],u=i[6],m=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(a(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-p,m),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,d),this._z=0)):"YXZ"===t?(this._x=Math.asin(-a(p,-1,1)),.9999999>Math.abs(p)?(this._y=Math.atan2(s,m),this._z=Math.atan2(l,d)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(a(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(-c,m),this._z=Math.atan2(-o,d)):(this._y=0,this._z=Math.atan2(l,n))):"ZYX"===t?(this._y=Math.asin(-a(c,-1,1)),.9999999>Math.abs(c)?(this._x=Math.atan2(u,m),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-o,d))):"YZX"===t?(this._z=Math.asin(a(l,-1,1)),.9999999>Math.abs(l)?(this._x=Math.atan2(-p,d),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(s,m))):"XZY"===t?(this._z=Math.asin(-a(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(u,d),this._y=Math.atan2(s,n)):(this._x=Math.atan2(-p,m),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==r&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,r){return _matrix.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix,t,r)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return _quaternion$1.setFromEuler(this),this.setFromQuaternion(_quaternion$1,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});function Layers(){this.mask=1}Object.assign(Layers.prototype,{set:function(e){this.mask=0|1<<e},enable:function(e){this.mask|=0|1<<e},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=0|1<<e},disable:function(e){this.mask&=~(0|1<<e)},disableAll:function(){this.mask=0},test:function(e){return 0!=(this.mask&e.mask)}});var _object3DId=0,_v1$1=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();var e=new Vector3,t=new Euler,r=new Quaternion,a=new Vector3(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this},rotateOnWorldAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this},rotateX:function(e){return this.rotateOnAxis(_xAxis,e)},rotateY:function(e){return this.rotateOnAxis(_yAxis,e)},rotateZ:function(e){return this.rotateOnAxis(_zAxis,e)},translateOnAxis:function(e,t){return _v1$1.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$1.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_xAxis,e)},translateY:function(e){return this.translateOnAxis(_yAxis,e)},translateZ:function(e){return this.translateOnAxis(_zAxis,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(_m1$1.getInverse(this.matrixWorld))},lookAt:function(e,t,r){e.isVector3?_target.copy(e):_target.set(e,t,r);var a=this.parent;this.updateWorldMatrix(!0,!1),_position.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up),this.quaternion.setFromRotationMatrix(_m1$1),a&&(_m1$1.extractRotation(a.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.inverse()))},add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var r=this.children.indexOf(e);return-1!==r&&(e.parent=null,this.children.splice(r,1),e.dispatchEvent(_removedEvent)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),_m1$1.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,a=this.children.length;r<a;r++){var n=this.children[r],o=n.getObjectByProperty(e,t);if(o!==void 0)return o}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Quaternion),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,e,_scale),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,_quaternion$2,e),e},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new Vector3),this.updateMatrixWorld(!0);var r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()},raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,a=t.length;r<void 0;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){var r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var a=this.children,n=0,o=a.length;n<o;n++)a[n].updateWorldMatrix(!1,!0)},toJSON:function(e){function t(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}function r(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var a=void 0===e||"string"==typeof e,n={};a&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var o={};if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),!1===this.frustumCulled&&(o.frustumCulled=!1),0!==this.renderOrder&&(o.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){o.geometry=t(e.geometries,this.geometry);var s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){var d=s.shapes;if(Array.isArray(d))for(var p=0,c=d.length,u;p<c;p++)u=d[p],t(e.shapes,u);else t(e.shapes,d)}}if(void 0!==this.material)if(Array.isArray(this.material)){for(var m=[],p=0,c=this.material.length;p<c;p++)m.push(t(e.materials,this.material[p]));o.material=m}else o.material=t(e.materials,this.material);if(0<this.children.length){o.children=[];for(var p=0;p<this.children.length;p++)o.children.push(this.children[p].toJSON(e).object)}if(a){var g=r(e.geometries),f=r(e.materials),h=r(e.textures),y=r(e.images),d=r(e.shapes);0<g.length&&(n.geometries=g),0<f.length&&(n.materials=f),0<h.length&&(n.textures=h),0<y.length&&(n.images=y),0<d.length&&(n.shapes=d)}return n.object=o,n},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0,a;r<e.children.length;r++)a=e.children[r],this.add(a.clone());return this}});function Scene(){Object3D.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});var _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1$2=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function Box3(e,t){this.min=e===void 0?new Vector3(+Infinity,+Infinity,+Infinity):e,this.max=t===void 0?new Vector3(-Infinity,-Infinity,-Infinity):t}Object.assign(Box3.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,p=e.length;d<p;d+=3){var l=e[d],c=e[d+1],u=e[d+2];l<t&&(t=l),c<r&&(r=c),u<a&&(a=u),l>n&&(n=l),c>o&&(o=c),u>s&&(s=u)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromBufferAttribute:function(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,p=e.count;d<p;d++){var l=e.getX(d),c=e.getY(d),u=e.getZ(d);l<t&&(t=l),c<r&&(r=c),u<a&&(a=u),l>n&&(n=l),c>o&&(o=c),u>s&&(s=u)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var r=_vector$1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;t!==void 0&&(null===t.boundingBox&&t.computeBoundingBox(),_box.copy(t.boundingBox),_box.applyMatrix4(e.matrixWorld),this.union(_box));for(var r=e.children,a=0,n=r.length;a<n;a++)this.expandByObject(r[a]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,_vector$1),_vector$1.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,r;return 0<e.normal.x?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0.subVectors(e.a,_center),_v1$2.subVectors(e.b,_center),_v2.subVectors(e.c,_center),_f0.subVectors(_v1$2,_v0),_f1.subVectors(_v2,_v1$2),_f2.subVectors(_v0,_v2);var t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(t,_v0,_v1$2,_v2,_extents)&&(t=[1,0,0,0,1,0,0,0,1],!!satForAxes(t,_v0,_v1$2,_v2,_extents))&&(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0,_v1$2,_v2,_extents))},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=_vector$1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(_vector$1).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()?this:(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points),this)},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});function satForAxes(e,t,a,n,o){var s,l;for(s=0,l=e.length-3;s<=l;s+=3){_testAxis.fromArray(e,s);var d=o.x*Math.abs(_testAxis.x)+o.y*Math.abs(_testAxis.y)+o.z*Math.abs(_testAxis.z),r=t.dot(_testAxis),p=a.dot(_testAxis),c=n.dot(_testAxis);if(Math.max(-Math.max(r,p,c),Math.min(r,p,c))>d)return!1}return!0}var _box$1=new Box3;function Sphere(e,t){this.center=e===void 0?new Vector3:e,this.radius=t===void 0?0:t}Object.assign(Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){var r=this.center;void 0===t?_box$1.setFromPoints(e).getCenter(r):r.copy(t);for(var a=0,n=0,o=e.length;n<o;n++)a=Math.max(a,r.distanceToSquared(e[n]));return this.radius=Math.sqrt(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Box3),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});var _vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;function Ray(e,t){this.origin=e===void 0?new Vector3:e,this.direction=t===void 0?new Vector3(0,0,-1):t}Object.assign(Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,_vector$2)),this},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);var r=t.dot(this.direction);return 0>r?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){var t=_vector$2.subVectors(e,this.origin).dot(this.direction);return 0>t?this.origin.distanceToSquared(e):(_vector$2.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$2.distanceToSquared(e))},distanceSqToSegment:function(e,t,r,a){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);var i=.5*e.distanceTo(t),n=-this.direction.dot(_segDir),o=_diff.dot(this.direction),s=-_diff.dot(_segDir),l=_diff.lengthSq(),d=Math.abs(1-n*n),p,c,u,m;if(!(0<d))c=0<n?-i:i,p=Math.max(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(p=n*s-o,c=n*o-s,m=i*d,!(0<=p))c<=-m?(p=Math.max(0,-(-n*i+o)),c=0<p?-i:Math.min(Math.max(-i,-s),i),u=-p*p+c*(c+2*s)+l):c<=m?(p=0,c=Math.min(Math.max(-i,-s),i),u=c*(c+2*s)+l):(p=Math.max(0,-(n*i+o)),c=0<p?i:Math.min(Math.max(-i,-s),i),u=-p*p+c*(c+2*s)+l);else if(!(c>=-m))c=-i,p=Math.max(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(c<=m){var g=1/d;p*=g,c*=g,u=p*(p+n*c+2*o)+c*(n*p+c+2*s)+l}else c=i,p=Math.max(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;return r&&r.copy(this.direction).multiplyScalar(p).add(this.origin),a&&a.copy(_segDir).multiplyScalar(c).add(_segCenter),u},intersectSphere:function(e,t){_vector$2.subVectors(e.center,this.origin);var r=_vector$2.dot(this.direction),a=_vector$2.dot(_vector$2)-r*r,i=e.radius*e.radius;if(a>i)return null;var n=Math.sqrt(i-a),o=r-n,s=r+n;return 0>o&&0>s?null:0>o?this.at(s,t):this.at(o,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var r=e.normal.dot(this.direction);if(0===r)return 0===e.distanceToPoint(this.origin)?0:null;var a=-(this.origin.dot(e.normal)+e.constant)/r;return 0<=a?a:null},intersectPlane:function(e,r){var a=this.distanceToPlane(e);return null===a?null:this.at(a,r)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return!!(0>r*t)},intersectBox:function(e,t){var r=1/this.direction.x,a=1/this.direction.y,i=1/this.direction.z,n=this.origin,o,s,l,d,p,c;return(0<=r?(o=(e.min.x-n.x)*r,s=(e.max.x-n.x)*r):(o=(e.max.x-n.x)*r,s=(e.min.x-n.x)*r),0<=a?(l=(e.min.y-n.y)*a,d=(e.max.y-n.y)*a):(l=(e.max.y-n.y)*a,d=(e.min.y-n.y)*a),o>d||l>s)?null:((l>o||o!==o)&&(o=l),(d<s||s!==s)&&(s=d),0<=i?(p=(e.min.z-n.z)*i,c=(e.max.z-n.z)*i):(p=(e.max.z-n.z)*i,c=(e.min.z-n.z)*i),o>c||p>s)?null:((p>o||o!==o)&&(o=p),(c<s||s!==s)&&(s=c),0>s?null:this.at(0<=o?o:s,t))},intersectsBox:function(e){return null!==this.intersectBox(e,_vector$2)},intersectTriangle:function(e,t,r,a,i){_edge1.subVectors(t,e),_edge2.subVectors(r,e),_normal.crossVectors(_edge1,_edge2);var n=this.direction.dot(_normal),o;if(0<n){if(a)return null;o=1}else if(0>n)o=-1,n=-n;else return null;_diff.subVectors(this.origin,e);var s=o*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(0>s)return null;var l=o*this.direction.dot(_edge1.cross(_diff));if(0>l)return null;if(s+l>n)return null;var d=-o*_diff.dot(_normal);return 0>d?null:this.at(d/n,i)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});var _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;function Plane(e,t){this.normal=e===void 0?new Vector3(1,0,0):e,this.constant=t===void 0?0:t}Object.assign(Plane.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,r){var a=_vector1.subVectors(r,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(a,e),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,r){r===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),r=new Vector3);var a=e.delta(_vector1),i=this.normal.dot(a);if(0===i)return 0===this.distanceToPoint(e.start)?r.copy(e.start):void 0;var n=-(e.start.dot(this.normal)+this.constant)/i;return 0>n||1<n?void 0:r.copy(a).multiplyScalar(n).add(e.start)},intersectsLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&0<r||0>r&&0<t},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){var r=t||_normalMatrix.getNormalMatrix(e),a=this.coplanarPoint(_vector1).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(i),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});var _v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;function Triangle(e,t,r){this.a=e===void 0?new Vector3:e,this.b=t===void 0?new Vector3:t,this.c=r===void 0?new Vector3:r}Object.assign(Triangle,{getNormal:function(e,t,r,a){a===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),a=new Vector3),a.subVectors(r,t),_v0$1.subVectors(e,t),a.cross(_v0$1);var i=a.lengthSq();return 0<i?a.multiplyScalar(1/Math.sqrt(i)):a.set(0,0,0)},getBarycoord:function(e,t,r,a,i){_v0$1.subVectors(a,t),_v1$3.subVectors(r,t),_v2$1.subVectors(e,t);var n=_v0$1.dot(_v0$1),o=_v0$1.dot(_v1$3),s=_v0$1.dot(_v2$1),l=_v1$3.dot(_v1$3),d=_v1$3.dot(_v2$1),p=n*l-o*o;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new Vector3),0===p)return i.set(-2,-1,-1);var c=1/p,m=(l*s-o*d)*c,u=(n*d-o*s)*c;return i.set(1-m-u,u,m)},containsPoint:function(e,t,r,a){return Triangle.getBarycoord(e,t,r,a,_v3),0<=_v3.x&&0<=_v3.y&&1>=_v3.x+_v3.y},getUV:function(e,t,r,a,i,n,o,s){return this.getBarycoord(e,t,r,a,_v3),s.set(0,0),s.addScaledVector(i,_v3.x),s.addScaledVector(n,_v3.y),s.addScaledVector(o,_v3.z),s},isFrontFacing:function(e,t,r,a){return _v0$1.subVectors(r,t),_v1$3.subVectors(e,t),!!(0>_v0$1.cross(_v1$3).dot(a))}}),Object.assign(Triangle.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()},getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Triangle.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Plane),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,r,a,i){return Triangle.getUV(e,this.a,this.b,this.c,t,r,a,i)},containsPoint:function(e){return Triangle.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Vector3);var r=this.a,a=this.b,i=this.c,n,o;_vab.subVectors(a,r),_vac.subVectors(i,r),_vap.subVectors(e,r);var s=_vab.dot(_vap),l=_vac.dot(_vap);if(0>=s&&0>=l)return t.copy(r);_vbp.subVectors(e,a);var d=_vab.dot(_vbp),p=_vac.dot(_vbp);if(0<=d&&p<=d)return t.copy(a);var c=s*p-d*l;if(0>=c&&0<=s&&0>=d)return n=s/(s-d),t.copy(r).addScaledVector(_vab,n);_vcp.subVectors(e,i);var u=_vab.dot(_vcp),m=_vac.dot(_vcp);if(0<=m&&u<=m)return t.copy(i);var g=u*l-s*m;if(0>=g&&0<=l&&0>=m)return o=l/(l-m),t.copy(r).addScaledVector(_vac,o);var f=d*m-u*p;if(0>=f&&0<=p-d&&0<=u-m)return _vbc.subVectors(i,a),o=(p-d)/(p-d+(u-m)),t.copy(a).addScaledVector(_vbc,o);var h=1/(f+g+c);return n=g*h,o=c*h,t.copy(r).addScaledVector(_vab,n).addScaledVector(_vac,o)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});var _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function Color(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function hue2rgb(e,r,a){return 0>a&&(a+=1),1<a&&(a-=1),a<1/6?e+6*(r-e)*a:a<1/2?r:a<2/3?e+6*(r-e)*(2/3-a):e}function SRGBToLinear(e){return .04045>e?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return .0031308>e?12.92*e:1.055*Math.pow(e,.41666)-.055}Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(e=MathUtils.euclideanModulo(e,1),t=MathUtils.clamp(t,0,1),r=MathUtils.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{var a=.5>=r?r*(1+t):r+t-r*t,i=2*r-a;this.r=hue2rgb(i,a,e+1/3),this.g=hue2rgb(i,a,e),this.b=hue2rgb(i,a,e-1/3)}return this},setStyle:function(e){function t(t){void 0===t||1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var a=r[1],i=r[2],n;switch(a){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var o=parseFloat(n[1])/360,d=parseInt(n[2],10)/100,s=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(o,d,s)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){var l=r[1],p=l.length;if(3===p)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===p)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}return e&&0<e.length?this.setColorName(e):this},setColorName:function(e){var t=_colorKeywords[e];return void 0===t?console.warn("THREE.Color: Unknown color "+e):this.setHex(t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=0<t?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this},copyLinearToSRGB:function(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,r=this.g,a=this.b,i=Math.max(t,r,a),n=Math.min(t,r,a),o=(n+i)/2,s,l;if(n===i)s=0,l=0;else{var d=i-n;l=.5>=o?d/(i+n):d/(2-i-n),i===t?s=(r-a)/d+(r<a?6:0):i===r?s=(a-t)/d+2:i===a?s=(t-r)/d+4:void 0,s/=6}return e.h=s,e.s=l,e.l=o,e},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},offsetHSL:function(e,t,r){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=r,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(_hslA),e.getHSL(_hslB);var r=MathUtils.lerp(_hslA.h,_hslB.h,t),a=MathUtils.lerp(_hslA.s,_hslB.s,t),i=MathUtils.lerp(_hslA.l,_hslB.l,t);return this.setHSL(r,a,i),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),Color.NAMES=_colorKeywords;function Face3(e,t,r,a,i,n){this.a=e,this.b=t,this.c=r,this.normal=a&&a.isVector3?a:new Vector3,this.vertexNormals=Array.isArray(a)?a:[],this.color=i&&i.isColor?i:new Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=n===void 0?0:n}Object.assign(Face3.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});var materialId=0;function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=NormalBlending,this.side=FrontSide,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"==t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===FlatShading;continue}var a=this[t];if(void 0===a){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}a&&a.isColor?a.set(r):a&&a.isVector3&&r&&r.isVector3?a.copy(r):this[t]=r}},toJSON:function(e){function t(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{}});var a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(a.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearcoat&&(a.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,void 0!==this.combine&&(a.combine=this.combine),void 0!==this.envMapIntensity&&(a.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(a.size=this.size),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(a.blending=this.blending),!0===this.flatShading&&(a.flatShading=this.flatShading),this.side!==FrontSide&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),1>this.opacity&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(a.rotation=this.rotation),!0===this.polygonOffset&&(a.polygonOffset=!0),0!==this.polygonOffsetFactor&&(a.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(a.linewidth=this.linewidth),void 0!==this.dashSize&&(a.dashSize=this.dashSize),void 0!==this.gapSize&&(a.gapSize=this.gapSize),void 0!==this.scale&&(a.scale=this.scale),!0===this.dithering&&(a.dithering=!0),0<this.alphaTest&&(a.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),1<this.wireframeLinewidth&&(a.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(a.morphTargets=!0),!0===this.morphNormals&&(a.morphNormals=!0),!0===this.skinning&&(a.skinning=!0),!1===this.visible&&(a.visible=!1),!1===this.toneMapped&&(a.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),r){var i=t(e.textures),n=t(e.images);0<i.length&&(a.textures=i),0<n.length&&(a.images=n)}return a},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,r=null;if(null!==t){var a=t.length;r=Array(a);for(var n=0;n!==a;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Material.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};var _vector$3=new Vector3;function BufferAttribute(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e===void 0?0:e.length/t,this.normalized=!0===r,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var a=0,n=this.itemSize;a<n;a++)this.array[e+a]=t.array[r+a];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),o=new Color),t[r++]=o.r,t[r++]=o.g,t[r++]=o.b;return this},copyVector2sArray:function(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),o=new Vector2),t[r++]=o.x,t[r++]=o.y;return this},copyVector3sArray:function(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",a),o=new Vector3),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z;return this},copyVector4sArray:function(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",a),o=new Vector4),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z,t[r++]=o.w;return this},applyMatrix3:function(e){for(var t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix3(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(e){for(var t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix4(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(e){for(var t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyNormalMatrix(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(e){for(var t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.transformDirection(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Int8BufferAttribute(e,t,r){BufferAttribute.call(this,new Int8Array(e),t,r)}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8Array(e),t,r)}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8ClampedArray(e),t,r)}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(e,t,r){BufferAttribute.call(this,new Int16Array(e),t,r)}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint16Array(e),t,r)}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(e,t,r){BufferAttribute.call(this,new Int32Array(e),t,r)}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint32Array(e),t,r)}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float32BufferAttribute(e,t,r){BufferAttribute.call(this,new Float32Array(e),t,r)}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(e,t,r){BufferAttribute.call(this,new Float64Array(e),t,r)}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;function DirectGeometry(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(DirectGeometry.prototype,{computeGroups:function(e){for(var t=[],r=void 0,a=e.faces,n=0,o,s;n<a.length;n++)s=a[n],s.materialIndex!==r&&(r=s.materialIndex,void 0!==o&&(o.count=3*n-o.start,t.push(o)),o={start:3*n,materialIndex:r});o!==void 0&&(o.count=3*n-o.start,t.push(o)),this.groups=t},fromGeometry:function(e){var t=e.faces,r=e.vertices,a=e.faceVertexUvs,n=a[0]&&0<a[0].length,o=a[1]&&0<a[1].length,s=e.morphTargets,l=s.length,d;if(0<l){d=[];for(var p=0;p<l;p++)d[p]={name:s[p].name,data:[]};this.morphTargets.position=d}var c=e.morphNormals,u=c.length,m;if(0<u){m=[];for(var p=0;p<u;p++)m[p]={name:c[p].name,data:[]};this.morphTargets.normal=m}var g=e.skinIndices,f=e.skinWeights,h=g.length===r.length,y=f.length===r.length;0<r.length&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var p=0,x;p<t.length;p++){x=t[p],this.vertices.push(r[x.a],r[x.b],r[x.c]);var v=x.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{var _=x.normal;this.normals.push(_,_,_)}var b=x.vertexColors;if(3===b.length)this.colors.push(b[0],b[1],b[2]);else{var M=x.color;this.colors.push(M,M,M)}if(!0===n){var S=a[0][p];void 0===S?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",p),this.uvs.push(new Vector2,new Vector2,new Vector2)):this.uvs.push(S[0],S[1],S[2])}if(!0===o){var S=a[1][p];void 0===S?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",p),this.uvs2.push(new Vector2,new Vector2,new Vector2)):this.uvs2.push(S[0],S[1],S[2])}for(var E=0,T;E<l;E++)T=s[E].vertices,d[E].data.push(T[x.a],T[x.b],T[x.c]);for(var E=0,w;E<u;E++)w=c[E].vertexNormals[p],m[E].data.push(w.a,w.b,w.c);h&&this.skinIndices.push(g[x.a],g[x.b],g[x.c]),y&&this.skinWeights.push(f[x.a],f[x.b],f[x.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});function arrayMax(e){if(0===e.length)return-Infinity;for(var t=e[0],r=1,a=e.length;r<a;++r)e[r]>t&&(t=e[r]);return t}var _bufferGeometryId=1,_m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){this.index=Array.isArray(e)?new(65535<arrayMax(e)?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:r===void 0?0:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var a=new Matrix3().getNormalMatrix(e);r.applyNormalMatrix(a),r.needsUpdate=!0}var i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return _m1$2.makeRotationX(e),this.applyMatrix4(_m1$2),this},rotateY:function(e){return _m1$2.makeRotationY(e),this.applyMatrix4(_m1$2),this},rotateZ:function(e){return _m1$2.makeRotationZ(e),this.applyMatrix4(_m1$2),this},translate:function(e,t,r){return _m1$2.makeTranslation(e,t,r),this.applyMatrix4(_m1$2),this},scale:function(e,t,r){return _m1$2.makeScale(e,t,r),this.applyMatrix4(_m1$2),this},lookAt:function(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var r=new Float32BufferAttribute(3*t.vertices.length,3),a=new Float32BufferAttribute(3*t.colors.length,3);if(this.setAttribute("position",r.copyVector3sArray(t.vertices)),this.setAttribute("color",a.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Float32BufferAttribute(t.lineDistances.length,1);this.setAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){for(var t=[],r=0,a=e.length,n;r<a;r++)n=e[r],t.push(n.x,n.y,n.z||0);return this.setAttribute("position",new Float32BufferAttribute(t,3)),this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var r=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}var a;return!0===t.verticesNeedUpdate&&(a=this.attributes.position,void 0!==a&&(a.copyVector3sArray(t.vertices),a.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(a=this.attributes.normal,void 0!==a&&(a.copyVector3sArray(t.normals),a.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(a=this.attributes.color,void 0!==a&&(a.copyColorsArray(t.colors),a.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(a=this.attributes.uv,void 0!==a&&(a.copyVector2sArray(t.uvs),a.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(a=this.attributes.lineDistance,void 0!==a&&(a.copyArray(t.lineDistances),a.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new DirectGeometry().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new BufferAttribute(t,3).copyVector3sArray(e.vertices)),0<e.normals.length){var r=new Float32Array(3*e.normals.length);this.setAttribute("normal",new BufferAttribute(r,3).copyVector3sArray(e.normals))}if(0<e.colors.length){var a=new Float32Array(3*e.colors.length);this.setAttribute("color",new BufferAttribute(a,3).copyColorsArray(e.colors))}if(0<e.uvs.length){var n=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new BufferAttribute(n,2).copyVector2sArray(e.uvs))}if(0<e.uvs2.length){var o=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new BufferAttribute(o,2).copyVector2sArray(e.uvs2))}for(var s in this.groups=e.groups,e.morphTargets){for(var d=[],p=e.morphTargets[s],c=0,u=p.length;c<u;c++){var l=p[c],m=new Float32BufferAttribute(3*l.data.length,3);m.name=l.name,d.push(m.copyVector3sArray(l.data))}this.morphAttributes[s]=d}if(0<e.skinIndices.length){var g=new Float32BufferAttribute(4*e.skinIndices.length,4);this.setAttribute("skinIndex",g.copyVector4sArray(e.skinIndices))}if(0<e.skinWeights.length){var f=new Float32BufferAttribute(4*e.skinWeights.length,4);this.setAttribute("skinWeight",f.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);var e=this.attributes.position,t=this.morphAttributes.position;if(void 0===e)this.boundingBox.makeEmpty();else if(this.boundingBox.setFromBufferAttribute(e),t)for(var r=0,a=t.length,n;r<a;r++)n=t[r],_box$2.setFromBufferAttribute(n),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max));(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var e=this.attributes.position,t=this.morphAttributes.position;if(e){var r=this.boundingSphere.center;if(_box$2.setFromBufferAttribute(e),t)for(var a=0,n=t.length,o;a<n;a++)o=t[a],_boxMorphTargets.setFromBufferAttribute(o),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max));_box$2.getCenter(r);for(var s=0,a=0,n=e.count;a<n;a++)_vector$4.fromBufferAttribute(e,a),s=Math.max(s,r.distanceToSquared(_vector$4));if(t)for(var a=0,n=t.length;a<n;a++)for(var o=t[a],l=this.morphTargetsRelative,d=0,p=o.count;d<p;d++)_vector$4.fromBufferAttribute(o,d),l&&(_offset.fromBufferAttribute(e,d),_vector$4.add(_offset)),s=Math.max(s,r.distanceToSquared(_vector$4));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes;if(t.position){var r=t.position.array;if(t.normal===void 0)this.setAttribute("normal",new BufferAttribute(new Float32Array(r.length),3));else for(var a=t.normal.array,n=0,o=a.length;n<o;n++)a[n]=0;var s=t.normal.array,l=new Vector3,d=new Vector3,p=new Vector3,c=new Vector3,u=new Vector3,m,g,f;if(e)for(var h=e.array,n=0,o=e.count;n<o;n+=3)m=3*h[n+0],g=3*h[n+1],f=3*h[n+2],l.fromArray(r,m),d.fromArray(r,g),p.fromArray(r,f),c.subVectors(p,d),u.subVectors(l,d),c.cross(u),s[m]+=c.x,s[m+1]+=c.y,s[m+2]+=c.z,s[g]+=c.x,s[g+1]+=c.y,s[g+2]+=c.z,s[f]+=c.x,s[f+1]+=c.y,s[f+2]+=c.z;else for(var n=0,o=r.length;n<o;n+=9)l.fromArray(r,n),d.fromArray(r,n+3),p.fromArray(r,n+6),c.subVectors(p,d),u.subVectors(l,d),c.cross(u),s[n]=c.x,s[n+1]=c.y,s[n+2]=c.z,s[n+3]=c.x,s[n+4]=c.y,s[n+5]=c.z,s[n+6]=c.x,s[n+7]=c.y,s[n+8]=c.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry))return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var a in r)if(e.attributes[a]!==void 0)for(var n=r[a],o=n.array,s=e.attributes[a],l=s.array,d=s.itemSize*t,p=Math.min(l.length,o.length-d),c=0,u=d;c<p;c++,u++)o[u]=l[c];return this},normalizeNormals:function(){for(var e=this.attributes.normal,t=0,r=e.count;t<r;t++)_vector$4.x=e.getX(t),_vector$4.y=e.getY(t),_vector$4.z=e.getZ(t),_vector$4.normalize(),e.setXYZ(t,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function e(e,t){for(var r=e.array,a=e.itemSize,n=new r.constructor(t.length*a),o=0,s=0,d=0,p=t.length;d<p;d++){o=t[d]*a;for(var l=0;l<a;l++)n[s++]=r[o++]}return new BufferAttribute(n,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new BufferGeometry,r=this.index.array,a=this.attributes;for(var n in a){var o=a[n],s=e(o,r);t.setAttribute(n,s)}var d=this.morphAttributes;for(n in d){for(var p=[],c=d[n],u=0,m=c.length;u<m;u++){var o=c[u],s=e(o,r);p.push(s)}t.morphAttributes[n]=p}t.morphTargetsRelative=this.morphTargetsRelative;for(var g=this.groups,u=0,f=g.length,l;u<f;u++)l=g[u],t.addGroup(l.start,l.count,l.materialIndex);return t},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),0<Object.keys(this.userData).length&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};var a=this.index;null!==a&&(e.data.index={type:a.array.constructor.name,array:Array.prototype.slice.call(a.array)});var n=this.attributes;for(var r in n){var o=n[r],s=o.toJSON();""!==o.name&&(s.name=o.name),e.data.attributes[r]=s}var l={},d=!1;for(var r in this.morphAttributes){for(var p=this.morphAttributes[r],c=[],u=0,m=p.length;u<m;u++){var o=p[u],s=o.toJSON();""!==o.name&&(s.name=o.name),c.push(s)}0<c.length&&(l[r]=c,d=!0)}d&&(e.data.morphAttributes=l,e.data.morphTargetsRelative=this.morphTargetsRelative);var g=this.groups;0<g.length&&(e.data.groups=JSON.parse(JSON.stringify(g)));var f=this.boundingSphere;return null!==f&&(e.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),e},clone:function(){return new BufferGeometry().copy(this)},copy:function(e){var t,r,a;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var n=e.index;null!==n&&this.setIndex(n.clone());var o=e.attributes;for(t in o){var s=o[t];this.setAttribute(t,s.clone())}var d=e.morphAttributes;for(t in d){var p=[],c=d[t];for(r=0,a=c.length;r<a;r++)p.push(c[r].clone());this.morphAttributes[t]=p}this.morphTargetsRelative=e.morphTargetsRelative;var u=e.groups;for(r=0,a=u.length;r<a;r++){var m=u[r];this.addGroup(m.start,m.count,m.materialIndex)}var g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());var f=e.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;function Mesh(e,t){Object3D.call(this),this.type="Mesh",this.geometry=e===void 0?new BufferGeometry:e,this.material=t===void 0?new MeshBasicMaterial:t,this.updateMorphTargets()}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e=this.geometry,t,r,a;if(e.isBufferGeometry){var i=e.morphAttributes,n=Object.keys(i);if(0<n.length){var o=i[n[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},(t=0,r=o.length);t<r;t++)a=o[t].name||t+"",this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}else{var s=e.morphTargets;s!==void 0&&0<s.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){var r=this.geometry,n=this.material,o=this.matrixWorld;if(void 0!==n&&(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere.copy(r.boundingSphere),_sphere.applyMatrix4(o),!1!==e.ray.intersectsSphere(_sphere))&&(_inverseMatrix.getInverse(o),_ray.copy(e.ray).applyMatrix4(_inverseMatrix),null===r.boundingBox||!1!==_ray.intersectsBox(r.boundingBox))){var s;if(r.isBufferGeometry){var l=r.index,d=r.attributes.position,p=r.morphAttributes.position,u=r.morphTargetsRelative,m=r.attributes.uv,g=r.attributes.uv2,h=r.groups,y=r.drawRange,x,v,_,M,S,E,T,w,L,A,R;if(null!==l){if(Array.isArray(n))for(M=0,E=h.length;M<E;M++)for(w=h[M],L=n[w.materialIndex],A=Math.max(w.start,y.start),R=Math.min(w.start+w.count,y.start+y.count),(S=A,T=R);S<T;S+=3)x=l.getX(S),v=l.getX(S+1),_=l.getX(S+2),s=checkBufferGeometryIntersection(this,L,e,_ray,d,p,u,m,g,x,v,_),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=w.materialIndex,t.push(s));else for(A=Math.max(0,y.start),R=Math.min(l.count,y.start+y.count),(M=A,E=R);M<E;M+=3)x=l.getX(M),v=l.getX(M+1),_=l.getX(M+2),s=checkBufferGeometryIntersection(this,n,e,_ray,d,p,u,m,g,x,v,_),s&&(s.faceIndex=Math.floor(M/3),t.push(s));}else if(void 0!==d)if(Array.isArray(n))for(M=0,E=h.length;M<E;M++)for(w=h[M],L=n[w.materialIndex],A=Math.max(w.start,y.start),R=Math.min(w.start+w.count,y.start+y.count),(S=A,T=R);S<T;S+=3)x=S,v=S+1,_=S+2,s=checkBufferGeometryIntersection(this,L,e,_ray,d,p,u,m,g,x,v,_),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=w.materialIndex,t.push(s));else for(A=Math.max(0,y.start),R=Math.min(d.count,y.start+y.count),(M=A,E=R);M<E;M+=3)x=M,v=M+1,_=M+2,s=checkBufferGeometryIntersection(this,n,e,_ray,d,p,u,m,g,x,v,_),s&&(s.faceIndex=Math.floor(M/3),t.push(s))}else if(r.isGeometry){var P=Array.isArray(n),C=r.vertices,I=r.faces,D=r.faceVertexUvs[0],N,z,U,B;0<D.length&&(B=D);for(var H=0,F=I.length;H<F;H++){var O=I[H],G=P?n[O.materialIndex]:n;if(void 0!==G&&(N=C[O.a],z=C[O.b],U=C[O.c],s=checkIntersection(this,G,e,_ray,N,z,U,_intersectionPoint),s)){if(B&&B[H]){var V=B[H];_uvA.copy(V[0]),_uvB.copy(V[1]),_uvC.copy(V[2]),s.uv=Triangle.getUV(_intersectionPoint,N,z,U,_uvA,_uvB,_uvC,new Vector2)}s.face=O,s.faceIndex=H,t.push(s)}}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function checkIntersection(e,t,r,a,i,n,o,s){var l;if(l=t.side===BackSide?a.intersectTriangle(o,n,i,!0,s):a.intersectTriangle(i,n,o,t.side!==DoubleSide,s),null===l)return null;_intersectionPointWorld.copy(s),_intersectionPointWorld.applyMatrix4(e.matrixWorld);var d=r.ray.origin.distanceTo(_intersectionPointWorld);return d<r.near||d>r.far?null:{distance:d,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,r,n,o,s,l,d,p,u,a,m){_vA.fromBufferAttribute(o,u),_vB.fromBufferAttribute(o,a),_vC.fromBufferAttribute(o,m);var c=e.morphTargetInfluences;if(t.morphTargets&&s&&c){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(var g=0,f=s.length;g<f;g++){var h=c[g],y=s[g];0===h||(_tempA.fromBufferAttribute(y,u),_tempB.fromBufferAttribute(y,a),_tempC.fromBufferAttribute(y,m),l?(_morphA.addScaledVector(_tempA,h),_morphB.addScaledVector(_tempB,h),_morphC.addScaledVector(_tempC,h)):(_morphA.addScaledVector(_tempA.sub(_vA),h),_morphB.addScaledVector(_tempB.sub(_vB),h),_morphC.addScaledVector(_tempC.sub(_vC),h)))}_vA.add(_morphA),_vB.add(_morphB),_vC.add(_morphC)}var x=checkIntersection(e,t,r,n,_vA,_vB,_vC,_intersectionPoint);if(x){d&&(_uvA.fromBufferAttribute(d,u),_uvB.fromBufferAttribute(d,a),_uvC.fromBufferAttribute(d,m),x.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),p&&(_uvA.fromBufferAttribute(p,u),_uvB.fromBufferAttribute(p,a),_uvC.fromBufferAttribute(p,m),x.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2));var v=new Face3(u,a,m);Triangle.getNormal(_vA,_vB,_vC,v.normal),x.face=v}return x}var _geometryId=0,_m1$3=new Matrix4,_obj$1=new Object3D,_offset$1=new Vector3;function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(e){for(var t=new Matrix3().getNormalMatrix(e),r=0,a=this.vertices.length,n;r<a;r++)n=this.vertices[r],n.applyMatrix4(e);for(var r=0,a=this.faces.length,o;r<a;r++){o=this.faces[r],o.normal.applyMatrix3(t).normalize();for(var s=0,l=o.vertexNormals.length;s<l;s++)o.vertexNormals[s].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this},rotateY:function(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this},rotateZ:function(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this},translate:function(e,t,r){return _m1$3.makeTranslation(e,t,r),this.applyMatrix4(_m1$3),this},scale:function(e,t,r){return _m1$3.makeScale(e,t,r),this.applyMatrix4(_m1$3),this},lookAt:function(e){return _obj$1.lookAt(e),_obj$1.updateMatrix(),this.applyMatrix4(_obj$1.matrix),this},fromBufferGeometry:function(e){function t(e,t,a,i){var n=void 0===l?[]:[r.colors[e].clone(),r.colors[t].clone(),r.colors[a].clone()],o=void 0===s?[]:[new Vector3().fromArray(s,3*e),new Vector3().fromArray(s,3*t),new Vector3().fromArray(s,3*a)],c=new Face3(e,t,a,o,n,i);r.faces.push(c),void 0!==d&&r.faceVertexUvs[0].push([new Vector2().fromArray(d,2*e),new Vector2().fromArray(d,2*t),new Vector2().fromArray(d,2*a)]),void 0!==p&&r.faceVertexUvs[1].push([new Vector2().fromArray(p,2*e),new Vector2().fromArray(p,2*t),new Vector2().fromArray(p,2*a)])}var r=this,a=null===e.index?void 0:e.index.array,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var o=n.position.array,s=void 0===n.normal?void 0:n.normal.array,l=void 0===n.color?void 0:n.color.array,d=void 0===n.uv?void 0:n.uv.array,p=void 0===n.uv2?void 0:n.uv2.array;void 0!==p&&(this.faceVertexUvs[1]=[]);for(var c=0;c<o.length;c+=3)r.vertices.push(new Vector3().fromArray(o,c)),void 0!==l&&r.colors.push(new Color().fromArray(l,c));var u=e.groups;if(0<u.length)for(var c=0;c<u.length;c++)for(var m=u[c],g=m.start,f=m.count,h=g;h<g+f;h+=3)void 0===a?t(h,h+1,h+2,m.materialIndex):t(a[h],a[h+1],a[h+2],m.materialIndex);else if(void 0!==a)for(var c=0;c<a.length;c+=3)t(a[c],a[c+1],a[c+2]);else for(var c=0;c<o.length/3;c+=3)t(c,c+1,c+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset$1).negate(),this.translate(_offset$1.x,_offset$1.y,_offset$1.z),this},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,a=new Matrix4;return a.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(a),this},computeFaceNormals:function(){for(var e=new Vector3,t=new Vector3,r=0,a=this.faces.length;r<a;r++){var i=this.faces[r],n=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(n,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);var t,r,a,i,n,o;for(o=Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)o[t]=new Vector3;if(e){var s=new Vector3,l=new Vector3,d,p,c;for(a=0,i=this.faces.length;a<i;a++)n=this.faces[a],d=this.vertices[n.a],p=this.vertices[n.b],c=this.vertices[n.c],s.subVectors(c,p),l.subVectors(d,p),s.cross(l),o[n.a].add(s),o[n.b].add(s),o[n.c].add(s)}else for(this.computeFaceNormals(),a=0,i=this.faces.length;a<i;a++)n=this.faces[a],o[n.a].add(n.normal),o[n.b].add(n.normal),o[n.c].add(n.normal);for(t=0,r=this.vertices.length;t<r;t++)o[t].normalize();for(a=0,i=this.faces.length;a<i;a++){n=this.faces[a];var u=n.vertexNormals;3===u.length?(u[0].copy(o[n.a]),u[1].copy(o[n.b]),u[2].copy(o[n.c])):(u[0]=o[n.a].clone(),u[1]=o[n.b].clone(),u[2]=o[n.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,r;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){r=this.faces[e];var a=r.vertexNormals;3===a.length?(a[0].copy(r.normal),a[1].copy(r.normal),a[2].copy(r.normal)):(a[0]=r.normal.clone(),a[1]=r.normal.clone(),a[2]=r.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,r,a,n;for(r=0,a=this.faces.length;r<a;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),(e=0,t=n.vertexNormals.length);e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var s=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals,d,p;for(r=0,a=this.faces.length;r<a;r++)d=new Vector3,p={a:new Vector3,b:new Vector3,c:new Vector3},s.push(d),l.push(p)}var c=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var d,p;for(r=0,a=this.faces.length;r<a;r++)n=this.faces[r],d=c.faceNormals[r],p=c.vertexNormals[r],d.copy(n.normal),p.a.copy(n.vertexNormals[0]),p.b.copy(n.vertexNormals[1]),p.c.copy(n.vertexNormals[2])}for(r=0,a=this.faces.length;r<a;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!(e&&e.isGeometry))return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var a=this.vertices.length,n=this.vertices,o=e.vertices,s=this.faces,l=e.faces,d=this.colors,p=e.colors,c;r===void 0&&(r=0),t!==void 0&&(c=new Matrix3().getNormalMatrix(t));for(var u=0,m=o.length;u<m;u++){var g=o[u],f=g.clone();t!==void 0&&f.applyMatrix4(t),n.push(f)}for(var u=0,m=p.length;u<m;u++)d.push(p[u].clone());for(u=0,m=l.length;u<m;u++){var h=l[u],y=h.vertexNormals,x=h.vertexColors,v,_,b;v=new Face3(h.a+a,h.b+a,h.c+a),v.normal.copy(h.normal),c!==void 0&&v.normal.applyMatrix3(c).normalize();for(var M=0,S=y.length;M<S;M++)_=y[M].clone(),void 0!==c&&_.applyMatrix3(c).normalize(),v.vertexNormals.push(_);v.color.copy(h.color);for(var M=0,S=x.length;M<S;M++)b=x[M],v.vertexColors.push(b.clone());v.materialIndex=h.materialIndex+r,s.push(v)}for(var u=0,m=e.faceVertexUvs.length,E;u<m;u++){E=e.faceVertexUvs[u],this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(var M=0,S=E.length;M<S;M++){for(var T=E[M],w=[],L=0,A=T.length;L<A;L++)w.push(T[L].clone());this.faceVertexUvs[u].push(w)}}},mergeMesh:function(e){return e&&e.isMesh?void(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){var e={},t=[],r=[],a=Math.pow(10,4),o,s,l,d,p,c,u,m;for(l=0,d=this.vertices.length;l<d;l++)o=this.vertices[l],s=Math.round(o.x*a)+"_"+Math.round(o.y*a)+"_"+Math.round(o.z*a),void 0===e[s]?(e[s]=l,t.push(this.vertices[l]),r[l]=t.length-1):r[l]=r[e[s]];var g=[];for(l=0,d=this.faces.length;l<d;l++){p=this.faces[l],p.a=r[p.a],p.b=r[p.b],p.c=r[p.c],c=[p.a,p.b,p.c];for(var f=0;3>f;f++)if(c[f]===c[(f+1)%3]){g.push(l);break}}for(l=g.length-1;0<=l;l--){var h=g[l];for(this.faces.splice(h,1),u=0,m=this.faceVertexUvs.length;u<m;u++)this.faceVertexUvs[u].splice(h,1)}var y=this.vertices.length-t.length;return this.vertices=t,y},setFromPoints:function(e){this.vertices=[];for(var t=0,r=e.length,a;t<r;t++)a=e[t],this.vertices.push(new Vector3(a.x,a.y,a.z||0));return this},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});var a=this.faceVertexUvs[0],n=this.faceVertexUvs[1],o,s;a&&a.length===t&&(o=[]),n&&n.length===t&&(s=[]);for(var r=0,l;r<t;r++)l=e[r]._id,o&&o.push(a[l]),s&&s.push(n[l]);o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===m[t]?(m[t]=u.length/3,u.push(e.x,e.y,e.z),m[t]):m[t]}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===f[t]?(f[t]=g.length,g.push(e.getHex()),f[t]):f[t]}function a(e){var t=e.x.toString()+e.y.toString();return void 0===y[t]?(y[t]=h.length/2,h.push(e.x,e.y),y[t]):y[t]}var n={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),void 0!==this.parameters){var o=this.parameters;for(var s in o)void 0!==o[s]&&(n[s]=o[s]);return n}for(var l=[],d=0,p;d<this.vertices.length;d++)p=this.vertices[d],l.push(p.x,p.y,p.z);for(var c=[],u=[],m={},g=[],f={},h=[],y={},d=0;d<this.faces.length;d++){var x=this.faces[d],v=void 0!==this.faceVertexUvs[0][d],_=0<x.normal.length(),b=0<x.vertexNormals.length,M=1!==x.color.r||1!==x.color.g||1!==x.color.b,S=0<x.vertexColors.length,E=0;if(E=e(E,0,0),E=e(E,1,!0),E=e(E,2,!1),E=e(E,3,v),E=e(E,4,_),E=e(E,5,b),E=e(E,6,M),E=e(E,7,S),c.push(E),c.push(x.a,x.b,x.c),c.push(x.materialIndex),v){var T=this.faceVertexUvs[0][d];c.push(a(T[0]),a(T[1]),a(T[2]))}if(_&&c.push(t(x.normal)),b){var w=x.vertexNormals;c.push(t(w[0]),t(w[1]),t(w[2]))}if(M&&c.push(r(x.color)),S){var L=x.vertexColors;c.push(r(L[0]),r(L[1]),r(L[2]))}}return n.data={},n.data.vertices=l,n.data.normals=u,0<g.length&&(n.data.colors=g),0<h.length&&(n.data.uvs=[h]),n.data.faces=c,n},clone:function(){return new Geometry().copy(this)},copy:function(e){var t,r,a,n,o,s;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var l=e.vertices;for(t=0,r=l.length;t<r;t++)this.vertices.push(l[t].clone());var d=e.colors;for(t=0,r=d.length;t<r;t++)this.colors.push(d[t].clone());var p=e.faces;for(t=0,r=p.length;t<r;t++)this.faces.push(p[t].clone());for(t=0,r=e.faceVertexUvs.length;t<r;t++){var c=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),a=0,n=c.length;a<n;a++){var u=c[a],m=[];for(o=0,s=u.length;o<s;o++){var g=u[o];m.push(g.clone())}this.faceVertexUvs[t].push(m)}}var f=e.morphTargets;for(t=0,r=f.length;t<r;t++){var h={name:f[t].name};if(void 0!==f[t].vertices)for(h.vertices=[],a=0,n=f[t].vertices.length;a<n;a++)h.vertices.push(f[t].vertices[a].clone());if(void 0!==f[t].normals)for(h.normals=[],a=0,n=f[t].normals.length;a<n;a++)h.normals.push(f[t].normals[a].clone());this.morphTargets.push(h)}var y=e.morphNormals;for(t=0,r=y.length;t<r;t++){var x={};if(void 0!==y[t].vertexNormals)for(x.vertexNormals=[],a=0,n=y[t].vertexNormals.length;a<n;a++){var v=y[t].vertexNormals[a],_={};_.a=v.a.clone(),_.b=v.b.clone(),_.c=v.c.clone(),x.vertexNormals.push(_)}if(void 0!==y[t].faceNormals)for(x.faceNormals=[],a=0,n=y[t].faceNormals.length;a<n;a++)x.faceNormals.push(y[t].faceNormals[a].clone());this.morphNormals.push(x)}var b=e.skinWeights;for(t=0,r=b.length;t<r;t++)this.skinWeights.push(b[t].clone());var M=e.skinIndices;for(t=0,r=M.length;t<r;t++)this.skinIndices.push(M[t].clone());var S=e.lineDistances;for(t=0,r=S.length;t<r;t++)this.lineDistances.push(S[t]);var E=e.boundingBox;null!==E&&(this.boundingBox=E.clone());var T=e.boundingSphere;return null!==T&&(this.boundingSphere=T.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class BoxGeometry extends Geometry{constructor(e,t,r,a,i,n){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n},this.fromBufferGeometry(new BoxBufferGeometry(e,t,r,a,i,n)),this.mergeVertices()}}class BoxBufferGeometry extends BufferGeometry{constructor(e,t,r,a,i,n){function o(e,t,r,i,n,o,u,f,h,v,_){var M=h+1,S=0,E=0,T=new Vector3,w,L;for(L=0;L<v+1;L++){var A=L*(u/v)-u/2;for(w=0;w<M;w++){var y=w*(o/h)-o/2;T[e]=y*i,T[t]=A*n,T[r]=f/2,d.push(T.x,T.y,T.z),T[e]=0,T[t]=0,T[r]=0<f?1:-1,p.push(T.x,T.y,T.z),c.push(w/h),c.push(1-L/v),S+=1}}for(L=0;L<v;L++)for(w=0;w<h;w++){var x=m+w+M*L,a=m+w+M*(L+1),b=m+(w+1)+M*(L+1),R=m+(w+1)+M*L;l.push(x,a,R),l.push(a,b,R),E+=6}s.addGroup(g,E,_),g+=E,m+=S}super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n};var s=this;e=e||1,t=t||1,r=r||1,a=Math.floor(a)||1,i=Math.floor(i)||1,n=Math.floor(n)||1;var l=[],d=[],p=[],c=[],m=0,g=0;o("z","y","x",-1,-1,r,t,e,n,i,0),o("z","y","x",1,-1,r,t,-e,n,i,1),o("x","z","y",1,1,e,r,t,a,n,2),o("x","z","y",1,-1,e,r,-t,a,n,3),o("x","y","z",1,-1,e,t,r,a,i,4),o("x","y","z",-1,-1,e,t,-r,a,i,5),this.setIndex(l),this.setAttribute("position",new Float32BufferAttribute(d,3)),this.setAttribute("normal",new Float32BufferAttribute(p,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}}function cloneUniforms(e){var t={};for(var r in e)for(var a in t[r]={},e[r]){var i=e[r][a];t[r][a]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?i.clone():Array.isArray(i)?i.slice():i}return t}function mergeUniforms(e){for(var t={},r=0,a;r<e.length;r++)for(var i in a=cloneUniforms(e[r]),a)t[i]=a[i];return t}var UniformsUtils={clone:cloneUniforms,merge:mergeUniforms},default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},ShaderMaterial.prototype.toJSON=function(e){var t=Material.prototype.toJSON.call(this,e);for(var r in t.uniforms={},this.uniforms){var a=this.uniforms[r],i=a.value;t.uniforms[r]=i&&i.isTexture?{type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?{type:"c",value:i.getHex()}:i&&i.isVector2?{type:"v2",value:i.toArray()}:i&&i.isVector3?{type:"v3",value:i.toArray()}:i&&i.isVector4?{type:"v4",value:i.toArray()}:i&&i.isMatrix3?{type:"m3",value:i.toArray()}:i&&i.isMatrix4?{type:"m4",value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var n={};for(var o in this.extensions)!0===this.extensions[o]&&(n[o]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t};function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new Vector3),this.updateMatrixWorld(!0);var r=this.matrixWorld.elements;return t.set(-r[8],-r[9],-r[10]).normalize()},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Object3D.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function PerspectiveCamera(e,t,r,a){Camera.call(this),this.type="PerspectiveCamera",this.fov=e===void 0?50:e,this.zoom=1,this.near=r===void 0?.1:r,this.far=a===void 0?2e3:a,this.focus=10,this.aspect=t===void 0?1:t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*MathUtils.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*MathUtils.DEG2RAD*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,a,i,n){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,r=2*t,a=this.aspect*r,i=-.5*a,n=this.view;if(null!==this.view&&this.view.enabled){var o=n.fullWidth,s=n.fullHeight;i+=n.offsetX*a/o,t-=n.offsetY*r/s,a*=n.width/o,r*=n.height/s}var l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-r,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});var fov=90,aspect=1;function CubeCamera(e,t,r,a){Object3D.call(this),this.type="CubeCamera";var i=new PerspectiveCamera(fov,aspect,e,t);i.up.set(0,-1,0),i.lookAt(new Vector3(1,0,0)),this.add(i);var n=new PerspectiveCamera(fov,aspect,e,t);n.up.set(0,-1,0),n.lookAt(new Vector3(-1,0,0)),this.add(n);var o=new PerspectiveCamera(fov,aspect,e,t);o.up.set(0,0,1),o.lookAt(new Vector3(0,1,0)),this.add(o);var s=new PerspectiveCamera(fov,aspect,e,t);s.up.set(0,0,-1),s.lookAt(new Vector3(0,-1,0)),this.add(s);var l=new PerspectiveCamera(fov,aspect,e,t);l.up.set(0,-1,0),l.lookAt(new Vector3(0,0,1)),this.add(l);var d=new PerspectiveCamera(fov,aspect,e,t);d.up.set(0,-1,0),d.lookAt(new Vector3(0,0,-1)),this.add(d),a=a||{format:RGBFormat,magFilter:LinearFilter,minFilter:LinearFilter},this.renderTarget=new WebGLCubeRenderTarget(r,a),this.renderTarget.texture.name="CubeCamera",this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();var r=e.getRenderTarget(),a=this.renderTarget,p=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,e.setRenderTarget(a,0),e.render(t,i),e.setRenderTarget(a,1),e.render(t,n),e.setRenderTarget(a,2),e.render(t,o),e.setRenderTarget(a,3),e.render(t,s),e.setRenderTarget(a,4),e.render(t,l),a.texture.generateMipmaps=p,e.setRenderTarget(a,5),e.render(t,d),e.setRenderTarget(r)},this.clear=function(e,t,r,a){for(var n=e.getRenderTarget(),o=this.renderTarget,s=0;6>s;s++)e.setRenderTarget(o,s),e.clear(t,r,a);e.setRenderTarget(n)}}CubeCamera.prototype=Object.create(Object3D.prototype),CubeCamera.prototype.constructor=CubeCamera;function WebGLCubeRenderTarget(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),WebGLRenderTarget.call(this,e,e,t)}WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var r=new Scene,a={uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}"},i=new ShaderMaterial({type:"CubemapFromEquirect",uniforms:cloneUniforms(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:BackSide,blending:NoBlending});i.uniforms.tEquirect.value=t;var n=new Mesh(new BoxBufferGeometry(5,5,5),i);r.add(n);var o=new CubeCamera(1,10,1);return o.renderTarget=this,o.renderTarget.texture.name="CubeCameraTexture",o.update(e,r),n.geometry.dispose(),n.material.dispose(),this};function DataTexture(e,t,r,a,i,n,o,s,l,d,p,c){Texture.call(this,null,n,o,s,l,d,a,i,p,c),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=l===void 0?NearestFilter:l,this.minFilter=d===void 0?NearestFilter:d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0;var _sphere$1=new Sphere,_vector$5=new Vector3;function Frustum(e,t,r,a,i,n){this.planes=[e===void 0?new Plane:e,t===void 0?new Plane:t,r===void 0?new Plane:r,a===void 0?new Plane:a,i===void 0?new Plane:i,n===void 0?new Plane:n]}Object.assign(Frustum.prototype,{set:function(e,t,r,a,i,n){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(a),o[4].copy(i),o[5].copy(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromProjectionMatrix:function(e){var t=this.planes,r=e.elements,a=r[0],i=r[1],n=r[2],o=r[3],s=r[4],l=r[5],d=r[6],p=r[7],c=r[8],u=r[9],m=r[10],g=r[11],f=r[12],h=r[13],y=r[14],x=r[15];return t[0].setComponents(o-a,p-s,g-c,x-f).normalize(),t[1].setComponents(o+a,p+s,g+c,x+f).normalize(),t[2].setComponents(o+i,p+l,g+u,x+h).normalize(),t[3].setComponents(o-i,p-l,g-u,x-h).normalize(),t[4].setComponents(o-n,p-d,g-m,x-y).normalize(),t[5].setComponents(o+n,p+d,g+m,x+y).normalize(),this},intersectsObject:function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSprite:function(e){return _sphere$1.center.set(0,0,0),_sphere$1.radius=.7071067811865476,_sphere$1.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSphere:function(e){for(var t=this.planes,r=e.center,a=-e.radius,n=0,o;6>n;n++)if(o=t[n].distanceToPoint(r),o<a)return!1;return!0},intersectsBox:function(e){for(var t=this.planes,r=0,a;6>r;r++)if(a=t[r],_vector$5.x=0<a.normal.x?e.max.x:e.min.x,_vector$5.y=0<a.normal.y?e.max.y:e.min.y,_vector$5.z=0<a.normal.z?e.max.z:e.min.z,0>a.distanceToPoint(_vector$5))return!1;return!0},containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}});var UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}}};function WebGLAnimation(){function e(i,n){!1===r||(a(i,n),t.requestAnimationFrame(e))}var t=null,r=!1,a=null;return{start:function(){!0===r||null===a||(t.requestAnimationFrame(e),r=!0)},stop:function(){r=!1},setAnimationLoop:function(e){a=e},setContext:function(e){t=e}}}function WebGLAttributes(e,t){function r(t,r){var a=t.array,i=t.usage,n=e.createBuffer();e.bindBuffer(r,n),e.bufferData(r,a,i),t.onUploadCallback();var o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:n,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}function a(t,r,a){var n=r.array,o=r.updateRange;e.bindBuffer(a,t),-1===o.count?e.bufferSubData(a,0,n):(i?e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n,o.offset,o.count):e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}var i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(e,t){e.isInterleavedBufferAttribute&&(e=e.data);var i=n.get(e);i===void 0?n.set(e,r(e,t)):i.version<e.version&&(a(i.buffer,e,t),i.version=e.version)}}}function PlaneGeometry(e,t,r,a){Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,r,a)),this.mergeVertices()}PlaneGeometry.prototype=Object.create(Geometry.prototype),PlaneGeometry.prototype.constructor=PlaneGeometry;function PlaneBufferGeometry(e,t,r,i){BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i},e=e||1,t=t||1;var n=e/2,o=t/2,s=Math.floor(r)||1,l=Math.floor(i)||1,p=s+1,u=e/s,m=t/l,g=[],f=[],h=[],v=[],_,M;for(M=0;M<l+1;M++){var S=M*m-o;for(_=0;_<p;_++){var y=_*u-n;f.push(y,-S,0),h.push(0,0,1),v.push(_/s),v.push(1-M/l)}}for(M=0;M<l;M++)for(_=0;_<s;_++){var x=_+p*M,a=_+p*(M+1),b=_+1+p*(M+1),c=_+1+p*M;g.push(x,a,c),g.push(a,b,c)}this.setIndex(g),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(v,2))}PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_toon_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert="#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",ShaderChunk={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0)},transparency:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(e,t,r,a){function i(t,a,i,m){var g=a.background,f=e.xr,h=f.getSession&&f.getSession();if(h&&"additive"===h.environmentBlendMode&&(g=null),null===g?n(o,s):g&&g.isColor&&(n(g,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===CubeUVReflectionMapping)){void 0===u&&(u=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u));var y=g.isWebGLCubeRenderTarget?g.texture:g;u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture?-1:1,(l!==g||d!==y.version||p!==e.toneMapping)&&(u.material.needsUpdate=!0,l=g,d=y.version,p=e.toneMapping),t.unshift(u,u.geometry,u.material,0,0,null)}else g&&g.isTexture&&(void 0===c&&(c=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),c.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||d!==g.version||p!==e.toneMapping)&&(c.material.needsUpdate=!0,l=g,d=g.version,p=e.toneMapping),t.unshift(c,c.geometry,c.material,0,0,null))}function n(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,a)}var o=new Color(0),s=0,l=null,d=0,p=null,c,u;return{getClearColor:function(){return o},setClearColor:function(e,t){o.set(e),s=t===void 0?1:t,n(o,s)},getClearAlpha:function(){return s},setClearAlpha:function(e){s=e,n(o,s)},render:i}}function WebGLBufferRenderer(e,t,r,a){function i(t,a){e.drawArrays(s,t,a),r.update(a,s)}function n(a,i,n,l){if(0!==l){var d,p;if(o)d=e,p="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[p](s,i,n,l),r.update(n,s,l)}}var o=a.isWebGL2,s;this.setMode=function(e){s=e},this.render=i,this.renderInstances=n}function WebGLCapabilities(e,t,r){function a(){if(void 0!==l)return l;var r=t.get("EXT_texture_filter_anisotropic");return l=null===r?0:e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT),l}function i(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var n="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,o=r.precision===void 0?"highp":r.precision,s=i(o),l;s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var d=!0===r.logarithmicDepthBuffer,p=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),m=e.getParameter(34076),g=e.getParameter(34921),f=e.getParameter(36347),h=e.getParameter(36348),y=e.getParameter(36349),x=0<c,v=n||!!t.get("OES_texture_float"),_=n?e.getParameter(36183):0;return{isWebGL2:n,getMaxAnisotropy:a,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:f,maxVaryings:h,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:_}}function WebGLClipping(){function e(){p.value!==a&&(p.value=a,p.needsUpdate=0<n),r.numPlanes=n,r.numIntersection=0}function t(e,t,a,n){var o=null===e?0:e.length,s=null;if(0!==o){if(s=p.value,!0!==n||null===s){var c=a+4*o,u=t.matrixWorldInverse;d.getNormalMatrix(u),(null===s||s.length<c)&&(s=new Float32Array(c));for(var m=0,g=a;m!==o;++m,g+=4)l.copy(e[m]).applyMatrix4(u,d),l.normal.toArray(s,g),s[g+3]=l.constant}p.value=s,p.needsUpdate=!0}return r.numPlanes=o,r.numIntersection=0,s}var r=this,a=null,n=0,o=!1,s=!1,l=new Plane,d=new Matrix3,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,i){var s=0!==e.length||r||0!==n||o;return o=r,a=t(e,i,0),n=e.length,s},this.beginShadows=function(){s=!0,t(null)},this.endShadows=function(){s=!1,e()},this.setState=function(r,l,d,c,u,m){if(!o||null===r||0===r.length||s&&!d)s?t(null):e();else{var g=s?0:n,f=4*g,h=u.clippingState||null;p.value=h,h=t(r,c,f,m);for(var y=0;y!=f;++y)h[y]=a[y];u.clippingState=h,this.numIntersection=l?this.numPlanes:0,this.numPlanes+=g}}}function WebGLExtensions(e){var t={};return{get:function(r){if(void 0!==t[r])return t[r];var a;return a="WEBGL_depth_texture"===r?e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture"):"EXT_texture_filter_anisotropic"===r?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===r?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===r?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):e.getExtension(r),null===a&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=a,a}}}function WebGLGeometries(e,t,r){function a(e){var i=e.target,n=o.get(i);for(var l in null!==n.index&&t.remove(n.index),n.attributes)t.remove(n.attributes[l]);i.removeEventListener("dispose",a),o.delete(i);var d=s.get(n);d&&(t.remove(d),s.delete(n)),r.memory.geometries--}function i(e){var r=e.index,a=e.attributes;for(var n in null!==r&&t.update(r,34963),a)t.update(a[n],34962);var o=e.morphAttributes;for(var n in o)for(var s=o[n],d=0,p=s.length;d<p;d++)t.update(s[d],34962)}function n(e){var r=[],n=e.index,o=e.attributes.position,d=0;if(null!==n){var p=n.array;d=n.version;for(var u=0,m=p.length;u<m;u+=3){var g=p[u+0],f=p[u+1],h=p[u+2];r.push(g,f,f,h,h,g)}}else{var p=o.array;d=o.version;for(var u=0,m=p.length/3-1;u<m;u+=3){var g=u+0,f=u+1,h=u+2;r.push(g,f,f,h,h,g)}}var y=new(65535<arrayMax(r)?Uint32BufferAttribute:Uint16BufferAttribute)(r,1);y.version=d,t.update(y,34963);var x=s.get(e);x&&t.remove(x),s.set(e,y)}var o=new WeakMap,s=new WeakMap;return{get:function(e,t){var i=o.get(t);return i?i:(t.addEventListener("dispose",a),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=new BufferGeometry().setFromObject(e)),i=t._bufferGeometry),o.set(t,i),r.memory.geometries++,i)},update:i,getWireframeAttribute:function(e){var t=s.get(e);if(t){var r=e.index;null!==r&&t.version<r.version&&n(e)}else n(e);return s.get(e)}}}function WebGLIndexedBufferRenderer(e,t,r,a){function i(t,a){e.drawElements(s,a,l,t*d),r.update(a,s)}function n(a,i,n,p){if(0!==p){var c,u;if(o)c=e,u="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](s,n,l,i*d,p),r.update(n,s,p)}}var o=a.isWebGL2,s,l,d;this.setMode=function(e){s=e},this.setIndex=function(e){l=e.type,d=e.bytesPerElement},this.render=i,this.renderInstances=n}function WebGLInfo(){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,r,a){switch(a=a||1,e.calls++,r){case 4:e.triangles+=a*(t/3);break;case 1:e.lines+=a*(t/2);break;case 3:e.lines+=a*(t-1);break;case 2:e.lines+=a*t;break;case 0:e.points+=a*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);}}}}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){function t(t,n,o,s){var l=t.morphTargetInfluences,d=l===void 0?0:l.length,p=r[n.id];if(p===void 0){p=[];for(var c=0;c<d;c++)p[c]=[c,0];r[n.id]=p}for(var u=o.morphTargets&&n.morphAttributes.position,m=o.morphNormals&&n.morphAttributes.normal,c=0,g;c<d;c++)g=p[c],0!==g[1]&&(u&&n.deleteAttribute("morphTarget"+c),m&&n.deleteAttribute("morphNormal"+c));for(var c=0,g;c<d;c++)g=p[c],g[0]=c,g[1]=l[c];p.sort(absNumericalSort);for(var f=0,c=0,g;8>c;c++){if(g=p[c],g){var h=g[0],y=g[1];if(y){u&&n.setAttribute("morphTarget"+c,u[h]),m&&n.setAttribute("morphNormal"+c,m[h]),a[c]=y,f+=y;continue}}a[c]=0}var x=n.morphTargetsRelative?1:1-f;s.getUniforms().setValue(e,"morphTargetBaseInfluence",x),s.getUniforms().setValue(e,"morphTargetInfluences",a)}var r={},a=new Float32Array(8);return{update:t}}function WebGLObjects(e,t,r,a){function i(e){var i=a.render.frame,o=e.geometry,s=t.get(e,o);return n.get(s)!==i&&(o.isGeometry&&s.updateFromObject(e),t.update(s),n.set(s,i)),e.isInstancedMesh&&r.update(e.instanceMatrix,34962),s}var n=new WeakMap;return{update:i,dispose:function(){n=new WeakMap}}}function CubeTexture(e,t,r,a,i,n,o,s,l,d){e=e===void 0?[]:e,t=t===void 0?CubeReflectionMapping:t,o=o===void 0?RGBFormat:o,Texture.call(this,e,t,r,a,i,n,o,s,l,d),this.flipY=!1}CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function DataTexture2DArray(e,t,r,a){Texture.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}DataTexture2DArray.prototype=Object.create(Texture.prototype),DataTexture2DArray.prototype.constructor=DataTexture2DArray,DataTexture2DArray.prototype.isDataTexture2DArray=!0;function DataTexture3D(e,t,r,a){Texture.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}DataTexture3D.prototype=Object.create(Texture.prototype),DataTexture3D.prototype.constructor=DataTexture3D,DataTexture3D.prototype.isDataTexture3D=!0;var emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(e,t,a){var o=e[0];if(0>=o||0<o)return e;var s=t*a,n=arrayCacheF32[s];if(void 0===n&&(n=new Float32Array(s),arrayCacheF32[s]=n),0!==t){o.toArray(n,0);for(var l=1,d=0;l!==t;++l)d+=a,e[l].toArray(n,d)}return n}function arraysEqual(e,t){if(e.length!==t.length)return!1;for(var r=0,a=e.length;r<a;r++)if(e[r]!==t[r])return!1;return!0}function copyArray(e,t){for(var r=0,a=t.length;r<a;r++)e[r]=t[r]}function allocTexUnits(e,t){var a=arrayCacheI32[t];a===void 0&&(a=new Int32Array(t),arrayCacheI32[t]=a);for(var n=0;n!==t;++n)a[n]=e.allocateTextureUnit();return a}function setValueV1f(e,t){var r=this.cache;r[0]===t||(e.uniform1f(this.addr,t),r[0]=t)}function setValueV2f(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(arraysEqual(r,t))return;e.uniform2fv(this.addr,t),copyArray(r,t)}}function setValueV3f(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(t.r!==void 0)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(arraysEqual(r,t))return;e.uniform3fv(this.addr,t),copyArray(r,t)}}function setValueV4f(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(arraysEqual(r,t))return;e.uniform4fv(this.addr,t),copyArray(r,t)}}function setValueM2(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(arraysEqual(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,a))return;mat2array.set(a),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(r,a)}}function setValueM3(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(arraysEqual(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,a))return;mat3array.set(a),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(r,a)}}function setValueM4(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(arraysEqual(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,a))return;mat4array.set(a),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(r,a)}}function setValueT1(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTexture2D(t||emptyTexture,i)}function setValueT2DArray1(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture2DArray(t||emptyTexture2dArray,i)}function setValueT3D1(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture3D(t||emptyTexture3d,i)}function setValueT6(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTextureCube(t||emptyCubeTexture,i)}function setValueV1i(e,t){var r=this.cache;r[0]===t||(e.uniform1i(this.addr,t),r[0]=t)}function setValueV2i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform2iv(this.addr,t),copyArray(r,t))}function setValueV3i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform3iv(this.addr,t),copyArray(r,t))}function setValueV4i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform4iv(this.addr,t),copyArray(r,t))}function setValueV1ui(e,t){var r=this.cache;r[0]===t||(e.uniform1ui(this.addr,t),r[0]=t)}function getSingularSetter(e){return 5126===e?setValueV1f:35664===e?setValueV2f:35665===e?setValueV3f:35666===e?setValueV4f:35674===e?setValueM2:35675===e?setValueM3:35676===e?setValueM4:5124===e||35670===e?setValueV1i:35667===e||35671===e?setValueV2i:35668===e||35672===e?setValueV3i:35669===e||35673===e?setValueV4i:5125===e?setValueV1ui:35678===e||36198===e||36298===e||36306===e||35682===e?setValueT1:35679===e||36299===e||36307===e?setValueT3D1:35680===e||36300===e||36308===e||36293===e?setValueT6:36289===e||36303===e||36311===e||36292===e?setValueT2DArray1:void 0}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV2fArray(e,t){var r=flatten(t,this.size,2);e.uniform2fv(this.addr,r)}function setValueV3fArray(e,t){var r=flatten(t,this.size,3);e.uniform3fv(this.addr,r)}function setValueV4fArray(e,t){var r=flatten(t,this.size,4);e.uniform4fv(this.addr,r)}function setValueM2Array(e,t){var r=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function setValueM3Array(e,t){var r=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function setValueM4Array(e,t){var r=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function setValueT1Array(e,t,r){var a=t.length,n=allocTexUnits(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.safeSetTexture2D(t[o]||emptyTexture,n[o])}function setValueT6Array(e,t,r){var a=t.length,n=allocTexUnits(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.safeSetTextureCube(t[o]||emptyCubeTexture,n[o])}function getPureArraySetter(e){return 5126===e?setValueV1fArray:35664===e?setValueV2fArray:35665===e?setValueV3fArray:35666===e?setValueV4fArray:35674===e?setValueM2Array:35675===e?setValueM3Array:35676===e?setValueM4Array:5124===e||35670===e?setValueV1iArray:35667===e||35671===e?setValueV2iArray:35668===e||35672===e?setValueV3iArray:35669===e||35673===e?setValueV4iArray:35678===e||36198===e||36298===e||36306===e||35682===e?setValueT1Array:35680===e||36300===e||36308===e||36293===e?setValueT6Array:void 0}function SingleUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}PureArrayUniform.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)};function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}StructuredUniform.prototype.setValue=function(e,t,r){for(var a=this.seq,o=0,s=a.length,n;o!==s;++o)n=a[o],n.setValue(e,t[n.id],r)};var RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,r){var a=e.name,i=a.length;for(RePathPart.lastIndex=0;;){var n=RePathPart.exec(a),o=RePathPart.lastIndex,s=n[1],l="]"===n[2],d=n[3];if(l&&(s|=0),void 0===d||"["===d&&o+2===i){addUniform(r,void 0===d?new SingleUniform(s,e,t):new PureArrayUniform(s,e,t));break}else{var p=r.map,c=p[s];void 0===c&&(c=new StructuredUniform(s),addUniform(r,c)),r=c}}}function WebGLUniforms(e,t){this.seq=[],this.map={};for(var r=e.getProgramParameter(t,35718),a=0;a<r;++a){var n=e.getActiveUniform(t,a),o=e.getUniformLocation(t,n.name);parseUniform(n,o,this)}}WebGLUniforms.prototype.setValue=function(e,t,r,a){var i=this.map[t];i!==void 0&&i.setValue(e,r,a)},WebGLUniforms.prototype.setOptional=function(e,t,r){var a=t[r];a!==void 0&&this.setValue(e,r,a)},WebGLUniforms.upload=function(e,t,r,a){for(var o=0,s=t.length;o!==s;++o){var n=t[o],l=r[n.id];!1!==l.needsUpdate&&n.setValue(e,l.value,a)}},WebGLUniforms.seqWithValue=function(e,t){for(var a=[],r=0,o=e.length,n;r!==o;++r)n=e[r],n.id in t&&a.push(n);return a};function WebGLShader(e,t,r){var a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),a}var programIdCount=0;function addLineNumbers(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD","( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e);}}function getShaderErrors(e,t,r){var a=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(a&&""===i)return"";var n=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+addLineNumbers(n)}function getTexelDecodingFunction(e,t){var r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function getTexelEncodingFunction(e,t){var r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function getToneMappingFunction(e,t){var r;switch(t){case LinearToneMapping:r="Linear";break;case ReinhardToneMapping:r="Reinhard";break;case Uncharted2ToneMapping:r="Uncharted2";break;case CineonToneMapping:r="OptimizedCineon";break;case ACESFilmicToneMapping:r="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t);}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e){var t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(filterEmptyLine).join("\n")}function generateDefines(e){var t=[];for(var r in e){var a=e[r];!1===a||t.push("#define "+r+" "+a)}return t.join("\n")}function fetchAttributeLocations(e,t){for(var r={},a=e.getProgramParameter(t,35721),n=0;n<a;n++){var o=e.getActiveAttrib(t,n),s=o.name;r[s]=e.getAttribLocation(t,s)}return r}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){var r=ShaderChunk[t];if(r===void 0)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(r)}var deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,r,a){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,r,a)}function loopReplacer(e,t,r,a){for(var n="",o=parseInt(t);o<parseInt(r);o++)n+=a.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return n}function generatePrecision(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){var t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===PCFShadowMap?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===PCFSoftShadowMap?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===VSMShadowMap&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:t="ENVMAP_TYPE_CUBE_UV";break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:t="ENVMAP_TYPE_EQUIREC";break;case SphericalReflectionMapping:t="ENVMAP_TYPE_SPHERE";}return t}function generateEnvMapModeDefine(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case CubeRefractionMapping:case EquirectangularRefractionMapping:t="ENVMAP_MODE_REFRACTION";}return t}function generateEnvMapBlendingDefine(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:t="ENVMAP_BLENDING_MIX";break;case AddOperation:t="ENVMAP_BLENDING_ADD";}return t}function WebGLProgram(e,t,r){var a=e.getContext(),i=r.defines,n=r.vertexShader,o=r.fragmentShader,s=generateShadowMapTypeDefine(r),l=generateEnvMapTypeDefine(r),d=generateEnvMapModeDefine(r),p=generateEnvMapBlendingDefine(r),c=0<e.gammaFactor?e.gammaFactor:1,u=r.isWebGL2?"":generateExtensions(r),m=generateDefines(i),g=a.createProgram(),f,h;if(r.isRawShaderMaterial?(f=[m].filter(filterEmptyLine).join("\n"),0<f.length&&(f+="\n"),h=[u,m].filter(filterEmptyLine).join("\n"),0<h.length&&(h+="\n")):(f=[generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.instancing?"#define USE_INSTANCING":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+c,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+d:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+s:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),h=[u,generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+c,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+l:"",r.envMap?"#define "+d:"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+s:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping===NoToneMapping?"":"#define TONE_MAPPING",r.toneMapping===NoToneMapping?"":ShaderChunk.tonemapping_pars_fragment,r.toneMapping===NoToneMapping?"":getToneMappingFunction("toneMapping",r.toneMapping),r.dithering?"#define DITHERING":"",r.outputEncoding||r.mapEncoding||r.matcapEncoding||r.envMapEncoding||r.emissiveMapEncoding||r.lightMapEncoding?ShaderChunk.encodings_pars_fragment:"",r.mapEncoding?getTexelDecodingFunction("mapTexelToLinear",r.mapEncoding):"",r.matcapEncoding?getTexelDecodingFunction("matcapTexelToLinear",r.matcapEncoding):"",r.envMapEncoding?getTexelDecodingFunction("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMapEncoding?getTexelDecodingFunction("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMapEncoding?getTexelDecodingFunction("lightMapTexelToLinear",r.lightMapEncoding):"",r.outputEncoding?getTexelEncodingFunction("linearToOutputTexel",r.outputEncoding):"",r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),n=resolveIncludes(n),n=replaceLightNums(n,r),n=replaceClippingPlaneNums(n,r),o=resolveIncludes(o),o=replaceLightNums(o,r),o=replaceClippingPlaneNums(o,r),n=unrollLoops(n),o=unrollLoops(o),r.isWebGL2&&!r.isRawShaderMaterial){var y=!1,x=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==n.match(x)&&null!==o.match(x)&&(y=!0,n=n.replace(x,""),o=o.replace(x,"")),f="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+f,h=["#version 300 es\n","#define varying in",y?"":"out highp vec4 pc_fragColor;",y?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h}var v=f+n,_=h+o,b=WebGLShader(a,35633,v),M=WebGLShader(a,35632,_);if(a.attachShader(g,b),a.attachShader(g,M),void 0===r.index0AttributeName?!0===r.morphTargets&&a.bindAttribLocation(g,0,"position"):a.bindAttribLocation(g,0,r.index0AttributeName),a.linkProgram(g),e.debug.checkShaderErrors){var S=a.getProgramInfoLog(g).trim(),E=a.getShaderInfoLog(b).trim(),T=a.getShaderInfoLog(M).trim(),w=!0,L=!0;if(!1===a.getProgramParameter(g,35714)){w=!1;var A=getShaderErrors(a,b,"vertex"),R=getShaderErrors(a,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(g,35715),"gl.getProgramInfoLog",S,A,R)}else""===S?(""===E||""===T)&&(L=!1):console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",S);L&&(this.diagnostics={runnable:w,programLog:S,vertexShader:{log:E,prefix:f},fragmentShader:{log:T,prefix:h}})}a.detachShader(g,b),a.detachShader(g,M),a.deleteShader(b),a.deleteShader(M);var P;this.getUniforms=function(){return void 0===P&&(P=new WebGLUniforms(a,g)),P};var C;return this.getAttributes=function(){return void 0===C&&(C=fetchAttributeLocations(a,g)),C},this.destroy=function(){a.deleteProgram(g),this.program=void 0},this.name=r.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=M,this}function WebGLPrograms(e,t,r){function a(e,t){var r;if(t){var a=ShaderLib[t];r={name:e.type,uniforms:UniformsUtils.clone(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}}else r={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return r}function i(e){var t=e.skeleton,r=t.bones;if(d)return 1024;var a=Math.floor((c-20)/4),i=Math.min(a,r.length);return i<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+i+"."),0):i}function n(e){var t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=LinearEncoding,t}var o=[],s=r.isWebGL2,l=r.logarithmicDepthBuffer,d=r.floatVertexTextures,p=r.precision,c=r.maxVertexUniforms,u=r.vertexTextures,m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];this.getParameters=function(o,c,g,f,h,y,x){var v=f.fog,_=o.isMeshStandardMaterial?f.environment:null,b=o.envMap||_,M=m[o.type],S=x.isSkinnedMesh?i(x):0;null!==o.precision&&(p=r.getMaxPrecision(o.precision),p!==o.precision&&console.warn("THREE.WebGLProgram.getParameters:",o.precision,"not supported, using",p,"instead."));var E=a(o,M);o.onBeforeCompile(E,e);var T=e.getRenderTarget(),w={isWebGL2:s,shaderID:M,shaderName:E.name,uniforms:E.uniforms,vertexShader:E.vertexShader,fragmentShader:E.fragmentShader,defines:o.defines,isRawShaderMaterial:o.isRawShaderMaterial,isShaderMaterial:o.isShaderMaterial,precision:p,instancing:!0===x.isInstancedMesh,supportsVertexTextures:u,outputEncoding:null===T?e.outputEncoding:n(T.texture),map:!!o.map,mapEncoding:n(o.map),matcap:!!o.matcap,matcapEncoding:n(o.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:n(b),envMapCubeUV:!!b&&(b.mapping===CubeUVReflectionMapping||b.mapping===CubeUVRefractionMapping),lightMap:!!o.lightMap,lightMapEncoding:n(o.lightMap),aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,emissiveMapEncoding:n(o.emissiveMap),bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,objectSpaceNormalMap:o.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:o.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!o.clearcoatMap,clearcoatRoughnessMap:!!o.clearcoatRoughnessMap,clearcoatNormalMap:!!o.clearcoatNormalMap,displacementMap:!!o.displacementMap,roughnessMap:!!o.roughnessMap,metalnessMap:!!o.metalnessMap,specularMap:!!o.specularMap,alphaMap:!!o.alphaMap,gradientMap:!!o.gradientMap,sheen:!!o.sheen,combine:o.combine,vertexTangents:o.normalMap&&o.vertexTangents,vertexColors:o.vertexColors,vertexUvs:!!o.map||!!o.bumpMap||!!o.normalMap||!!o.specularMap||!!o.alphaMap||!!o.emissiveMap||!!o.roughnessMap||!!o.metalnessMap||!!o.clearcoatMap||!!o.clearcoatRoughnessMap||!!o.clearcoatNormalMap||!!o.displacementMap,uvsVertexOnly:!o.map&&!o.bumpMap&&!o.normalMap&&!o.specularMap&&!o.alphaMap&&!o.emissiveMap&&!o.roughnessMap&&!o.metalnessMap&&!o.clearcoatNormalMap&&!!o.displacementMap,fog:!!v,useFog:o.fog,fogExp2:v&&v.isFogExp2,flatShading:o.flatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:l,skinning:o.skinning&&0<S,maxBones:S,useVertexTexture:d,morphTargets:o.morphTargets,morphNormals:o.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:c.directional.length,numPointLights:c.point.length,numSpotLights:c.spot.length,numRectAreaLights:c.rectArea.length,numHemiLights:c.hemi.length,numDirLightShadows:c.directionalShadowMap.length,numPointLightShadows:c.pointShadowMap.length,numSpotLightShadows:c.spotShadowMap.length,numClippingPlanes:h,numClipIntersection:y,dithering:o.dithering,shadowMapEnabled:e.shadowMap.enabled&&0<g.length,shadowMapType:e.shadowMap.type,toneMapping:o.toneMapped?e.toneMapping:NoToneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:o.premultipliedAlpha,alphaTest:o.alphaTest,doubleSided:o.side===DoubleSide,flipSided:o.side===BackSide,depthPacking:o.depthPacking!==void 0&&o.depthPacking,index0AttributeName:o.index0AttributeName,extensionDerivatives:o.extensions&&o.extensions.derivatives,extensionFragDepth:o.extensions&&o.extensions.fragDepth,extensionDrawBuffers:o.extensions&&o.extensions.drawBuffers,extensionShaderTextureLOD:o.extensions&&o.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:s||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||null!==t.get("EXT_shader_texture_lod"),onBeforeCompile:o.onBeforeCompile};return w},this.getProgramCacheKey=function(t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var a in t.defines)r.push(a),r.push(t.defines[a]);if(void 0===t.isRawShaderMaterial){for(var n=0;n<g.length;n++)r.push(t[g[n]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.onBeforeCompile.toString()),r.join()},this.acquireProgram=function(t,r){for(var a=0,i=o.length,n,s;a<i;a++)if(s=o[a],s.cacheKey===r){n=s,++n.usedTimes;break}return void 0===n&&(n=new WebGLProgram(e,r,t),o.push(n)),n},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},this.programs=o}function WebGLProperties(){function e(e){var t=a.get(e);return void 0===t&&(t={},a.set(e,t)),t}function t(e){a.delete(e)}function r(e,t,r){a.get(e)[t]=r}var a=new WeakMap;return{get:e,remove:t,update:r,dispose:function(){a=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.program===t.program?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.program.id-t.program.id:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function reversePainterSortStable(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function WebGLRenderList(){function e(e,t,i,n,s,l){var d=r[a];return void 0===d?(d={id:e.id,object:e,geometry:t,material:i,program:i.program||o,groupOrder:n,renderOrder:e.renderOrder,z:s,group:l},r[a]=d):(d.id=e.id,d.object=e,d.geometry=t,d.material=i,d.program=i.program||o,d.groupOrder=n,d.renderOrder=e.renderOrder,d.z=s,d.group=l),a++,d}function t(){for(var e=a,t=r.length,n;e<t&&(n=r[e],null!==n.id);e++)n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}var r=[],a=0,i=[],n=[],o={id:-1};return{opaque:i,transparent:n,init:function(){a=0,i.length=0,n.length=0},push:function(t,r,a,o,s,l){var d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).push(d)},unshift:function(t,r,a,o,s,l){var d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).unshift(d)},finish:t,sort:function(e,t){1<i.length&&i.sort(e||painterSortStable),1<n.length&&n.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(){function e(t){var a=t.target;a.removeEventListener("dispose",e),r.delete(a)}function t(t,a){var i=r.get(t),n;return void 0===i?(n=new WebGLRenderList,r.set(t,new WeakMap),r.get(t).set(a,n),t.addEventListener("dispose",e)):(n=i.get(a),void 0===n&&(n=new WebGLRenderList,i.set(a,n))),n}var r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}function UniformsCache(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={direction:new Vector3,color:new Color};break;case"SpotLight":r={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":r={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":r={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3};}return e[t.id]=r,r}}}function ShadowUniformsCache(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"SpotLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3};}return e[t.id]=r,r}}}var nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(){function e(e,n,d){for(var p=0,c=0,u=0,m=0;9>m;m++)a.probe[m].set(0,0,0);var f=0,h=0,y=0,x=0,v=0,_=0,M=0,S=0,E=d.matrixWorldInverse;e.sort(shadowCastingLightsFirst);for(var m=0,T=e.length;m<T;m++){var w=e[m],L=w.color,A=w.intensity,R=w.distance,P=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)p+=L.r*A,c+=L.g*A,u+=L.b*A;else if(w.isLightProbe)for(var C=0;9>C;C++)a.probe[C].addScaledVector(w.sh.coefficients[C],A);else if(w.isDirectionalLight){var I=t.get(w);if(I.color.copy(w.color).multiplyScalar(w.intensity),I.direction.setFromMatrixPosition(w.matrixWorld),o.setFromMatrixPosition(w.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(E),w.castShadow){var D=w.shadow,N=r.get(w);N.shadowBias=D.bias,N.shadowRadius=D.radius,N.shadowMapSize=D.mapSize,a.directionalShadow[f]=N,a.directionalShadowMap[f]=P,a.directionalShadowMatrix[f]=w.shadow.matrix,_++}a.directional[f]=I,f++}else if(w.isSpotLight){var I=t.get(w);if(I.position.setFromMatrixPosition(w.matrixWorld),I.position.applyMatrix4(E),I.color.copy(L).multiplyScalar(A),I.distance=R,I.direction.setFromMatrixPosition(w.matrixWorld),o.setFromMatrixPosition(w.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(E),I.coneCos=Math.cos(w.angle),I.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),I.decay=w.decay,w.castShadow){var D=w.shadow,N=r.get(w);N.shadowBias=D.bias,N.shadowRadius=D.radius,N.shadowMapSize=D.mapSize,a.spotShadow[y]=N,a.spotShadowMap[y]=P,a.spotShadowMatrix[y]=w.shadow.matrix,S++}a.spot[y]=I,y++}else if(w.isRectAreaLight){var I=t.get(w);I.color.copy(L).multiplyScalar(A),I.position.setFromMatrixPosition(w.matrixWorld),I.position.applyMatrix4(E),l.identity(),s.copy(w.matrixWorld),s.premultiply(E),l.extractRotation(s),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),I.halfWidth.applyMatrix4(l),I.halfHeight.applyMatrix4(l),a.rectArea[x]=I,x++}else if(w.isPointLight){var I=t.get(w);if(I.position.setFromMatrixPosition(w.matrixWorld),I.position.applyMatrix4(E),I.color.copy(w.color).multiplyScalar(w.intensity),I.distance=w.distance,I.decay=w.decay,w.castShadow){var D=w.shadow,N=r.get(w);N.shadowBias=D.bias,N.shadowRadius=D.radius,N.shadowMapSize=D.mapSize,N.shadowCameraNear=D.camera.near,N.shadowCameraFar=D.camera.far,a.pointShadow[h]=N,a.pointShadowMap[h]=P,a.pointShadowMatrix[h]=w.shadow.matrix,M++}a.point[h]=I,h++}else if(w.isHemisphereLight){var I=t.get(w);I.direction.setFromMatrixPosition(w.matrixWorld),I.direction.transformDirection(E),I.direction.normalize(),I.skyColor.copy(w.color).multiplyScalar(A),I.groundColor.copy(w.groundColor).multiplyScalar(A),a.hemi[v]=I,v++}}a.ambient[0]=p,a.ambient[1]=c,a.ambient[2]=u;var z=a.hash;(z.directionalLength!==f||z.pointLength!==h||z.spotLength!==y||z.rectAreaLength!==x||z.hemiLength!==v||z.numDirectionalShadows!==_||z.numPointShadows!==M||z.numSpotShadows!==S)&&(a.directional.length=f,a.spot.length=y,a.rectArea.length=x,a.point.length=h,a.hemi.length=v,a.directionalShadow.length=_,a.directionalShadowMap.length=_,a.pointShadow.length=M,a.pointShadowMap.length=M,a.spotShadow.length=S,a.spotShadowMap.length=S,a.directionalShadowMatrix.length=_,a.pointShadowMatrix.length=M,a.spotShadowMatrix.length=S,z.directionalLength=f,z.pointLength=h,z.spotLength=y,z.rectAreaLength=x,z.hemiLength=v,z.numDirectionalShadows=_,z.numPointShadows=M,z.numSpotShadows=S,a.version=nextVersion++)}for(var t=new UniformsCache,r=ShadowUniformsCache(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=0;9>n;n++)a.probe.push(new Vector3);var o=new Vector3,s=new Matrix4,l=new Matrix4;return{setup:e,state:a}}function WebGLRenderState(){var e=new WebGLLights,t=[],r=[];return{init:function(){t.length=0,r.length=0},state:{lightsArray:t,shadowsArray:r,lights:e},setupLights:function(a){e.setup(t,r,a)},pushLight:function(e){t.push(e)},pushShadow:function(e){r.push(e)}}}function WebGLRenderStates(){function e(t){var a=t.target;a.removeEventListener("dispose",e),r.delete(a)}function t(t,a){var i;return!1===r.has(t)?(i=new WebGLRenderState,r.set(t,new WeakMap),r.get(t).set(a,i),t.addEventListener("dispose",e)):!1===r.get(t).has(a)?(i=new WebGLRenderState,r.get(t).set(a,i)):i=r.get(t).get(a),i}var r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function WebGLShadowMap(e,t,r){function a(r,a){var i=t.update(v);h.uniforms.shadow_pass.value=r.map.texture,h.uniforms.resolution.value=r.mapSize,h.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(a,null,i,h,v,null),y.uniforms.shadow_pass.value=r.mapPass.texture,y.uniforms.resolution.value=r.mapSize,y.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(a,null,i,y,v,null)}function i(e,t,r){var a=e<<0|t<<1|r<<2,i=u[a];return void 0===i&&(i=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:e,skinning:t}),u[a]=i),i}function n(e,t,r){var a=e<<0|t<<1|r<<2,i=m[a];return void 0===i&&(i=new MeshDistanceMaterial({morphTargets:e,skinning:t}),m[a]=i),i}function o(t,r,a,o,s,l){var d=t.geometry,p=null,c=i,u=t.customDepthMaterial;if(!0===a.isPointLight&&(c=n,u=t.customDistanceMaterial),void 0===u){var m=!1;!0===r.morphTargets&&(!0===d.isBufferGeometry?m=d.morphAttributes&&d.morphAttributes.position&&0<d.morphAttributes.position.length:!0===d.isGeometry&&(m=d.morphTargets&&0<d.morphTargets.length));var h=!1;!0===t.isSkinnedMesh&&(!0===r.skinning?h=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));var y=!0===t.isInstancedMesh;p=c(m,h,y)}else p=u;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var x=p.uuid,v=r.uuid,_=g[x];void 0===_&&(_={},g[x]=_);var b=_[v];void 0===b&&(b=p.clone(),_[v]=b),p=b}return p.visible=r.visible,p.wireframe=r.wireframe,p.side=l===VSMShadowMap?null===r.shadowSide?r.side:r.shadowSide:null===r.shadowSide?f[r.side]:r.shadowSide,p.clipShadows=r.clipShadows,p.clippingPlanes=r.clippingPlanes,p.clipIntersection=r.clipIntersection,p.wireframeLinewidth=r.wireframeLinewidth,p.linewidth=r.linewidth,!0===a.isPointLight&&!0===p.isMeshDistanceMaterial&&(p.referencePosition.setFromMatrixPosition(a.matrixWorld),p.nearDistance=o,p.farDistance=s),p}function s(r,a,n,d,p){if(!1!==r.visible){var c=r.layers.test(a.layers);if(c&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&p===VSMShadowMap)&&(!r.frustumCulled||l.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,r.matrixWorld);var u=t.update(r),m=r.material;if(Array.isArray(m))for(var g=u.groups,f=0,h=g.length;f<h;f++){var y=g[f],x=m[y.materialIndex];if(x&&x.visible){var v=o(r,x,d,n.near,n.far,p);e.renderBufferDirect(n,null,u,v,r,y)}}else if(m.visible){var v=o(r,m,d,n.near,n.far,p);e.renderBufferDirect(n,null,u,v,r,null)}}for(var _=r.children,b=0,M=_.length;b<void 0;b++)s(_[b],a,n,d,p)}}var l=new Frustum,d=new Vector2,p=new Vector2,c=new Vector4,u=[],m=[],g={},f={0:BackSide,1:FrontSide,2:DoubleSide},h=new ShaderMaterial({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),y=h.clone();y.defines.HORIZONAL_PASS=1;var x=new BufferGeometry;x.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var v=new Mesh(x,h),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(t,n,o){if(!1!==_.enabled&&(!1!==_.autoUpdate||!1!==_.needsUpdate)&&0!==t.length){var u=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),f=e.state;f.setBlending(NoBlending),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(var h=0,y=t.length;h<y;h++){var x=t[h],v=x.shadow;if(void 0===v){console.warn("THREE.WebGLShadowMap:",x,"has no shadow.");continue}d.copy(v.mapSize);var b=v.getFrameExtents();if(d.multiply(b),p.copy(v.mapSize),(d.x>r||d.y>r)&&(console.warn("THREE.WebGLShadowMap:",x,"has shadow exceeding max texture size, reducing"),d.x>r&&(p.x=Math.floor(r/b.x),d.x=p.x*b.x,v.mapSize.x=p.x),d.y>r&&(p.y=Math.floor(r/b.y),d.y=p.y*b.y,v.mapSize.y=p.y)),null===v.map&&!v.isPointLightShadow&&this.type===VSMShadowMap){var M={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};v.map=new WebGLRenderTarget(d.x,d.y,M),v.map.texture.name=x.name+".shadowMap",v.mapPass=new WebGLRenderTarget(d.x,d.y,M),v.camera.updateProjectionMatrix()}if(null===v.map){var M={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};v.map=new WebGLRenderTarget(d.x,d.y,M),v.map.texture.name=x.name+".shadowMap",v.camera.updateProjectionMatrix()}e.setRenderTarget(v.map),e.clear();for(var S=v.getViewportCount(),E=0,T;E<S;E++)T=v.getViewport(E),c.set(p.x*T.x,p.y*T.y,p.x*T.z,p.y*T.w),f.viewport(c),v.updateMatrices(x,E),l=v.getFrustum(),s(n,o,v.camera,x,this.type);v.isPointLightShadow||this.type!==VSMShadowMap||a(v,o)}_.needsUpdate=!1,e.setRenderTarget(u,m,g)}}}function WebGLState(e,t,r){function a(t,r,a){var n=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var s=0;s<a;s++)e.texImage2D(r+s,0,6408,1,1,0,6408,5121,n);return o}function i(){for(var e=0,t=w.length;e<t;e++)w[e]=0}function n(r,a){if(w[r]=1,0===L[r]&&(e.enableVertexAttribArray(r),L[r]=1),A[r]!==a){var i=b?e:t.get("ANGLE_instanced_arrays");i[b?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,a),A[r]=a}}function o(){for(var t=0,r=L.length;t!==r;++t)L[t]!==w[t]&&(e.disableVertexAttribArray(t),L[t]=0)}function s(t){!0!==R[t]&&(e.enable(t),R[t]=!0)}function l(t){!1!==R[t]&&(e.disable(t),R[t]=!1)}function d(t){return P!==t&&(e.useProgram(t),P=t,!0)}function p(t,r,a,i,n,o,d,p){return t===NoBlending?void(C&&(l(3042),C=!1)):(C||(s(3042),C=!0),t===CustomBlending?void(n=n||r,o=o||a,d=d||i,(r!==D||n!==U)&&(e.blendEquationSeparate(ee[r],ee[n]),D=r,U=n),(a!==N||i!==z||o!==B||d!==H)&&(e.blendFuncSeparate(re[a],re[i],re[o],re[d]),N=a,z=i,B=o,H=d),I=t,F=null):void((t!==I||p!==F)&&((D!==AddEquation||U!==AddEquation)&&(e.blendEquation(32774),D=AddEquation,U=AddEquation),p?t===NormalBlending?e.blendFuncSeparate(1,771,1,771):t===AdditiveBlending?e.blendFunc(1,1):t===SubtractiveBlending?e.blendFuncSeparate(0,0,769,771):t===MultiplyBlending?e.blendFuncSeparate(0,768,0,770):console.error("THREE.WebGLState: Invalid blending: ",t):t===NormalBlending?e.blendFuncSeparate(770,771,1,771):t===AdditiveBlending?e.blendFunc(770,1):t===SubtractiveBlending?e.blendFunc(0,769):t===MultiplyBlending?e.blendFunc(0,768):console.error("THREE.WebGLState: Invalid blending: ",t),N=null,z=null,B=null,H=null,I=t,F=p)))}function c(t){O!==t&&(t?e.frontFace(2304):e.frontFace(2305),O=t)}function u(t){t===CullFaceNone?l(2884):(s(2884),t!==G&&(t===CullFaceBack?e.cullFace(1029):t===CullFaceFront?e.cullFace(1028):e.cullFace(1032))),G=t}function m(t){t!==V&&(q&&e.lineWidth(t),V=t)}function g(t,r,a){t?(s(32823),(k!==r||W!==a)&&(e.polygonOffset(r,a),k=r,W=a)):l(32823)}function f(t){t===void 0&&(t=33984+j-1),Z!==t&&(e.activeTexture(t),Z=t)}function h(t,r){null===Z&&f();var a=J[Z];a===void 0&&(a={type:void 0,texture:void 0},J[Z]=a),(a.type!==t||a.texture!==r)&&(e.bindTexture(t,r||$[t]),a.type=t,a.texture=r)}function y(){var t=J[Z];t!==void 0&&t.type!==void 0&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}function x(t){!1===Q.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),Q.copy(t))}function v(t){!1===K.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),K.copy(t))}function _(){for(var t=0;t<L.length;t++)1===L[t]&&(e.disableVertexAttribArray(t),L[t]=0);R={},Z=null,J={},P=null,I=null,O=null,G=null,M.reset(),S.reset(),E.reset()}var b=r.isWebGL2,M=new function(){var t=!1,i=new Vector4,n=null,o=new Vector4(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,s,l,a){!0===a&&(t*=l,n*=l,s*=l),i.set(t,n,s,l),!1===o.equals(i)&&(e.clearColor(t,n,s,l),o.copy(i))},reset:function(){t=!1,n=null,o.set(-1,0,0,0)}}},S=new function(){var t=!1,r=null,a=null,i=null;return{setTest:function(e){e?s(2929):l(2929)},setMask:function(a){r===a||t||(e.depthMask(a),r=a)},setFunc:function(t){a!==t&&(t?t===NeverDepth?e.depthFunc(512):t===AlwaysDepth?e.depthFunc(519):t===LessDepth?e.depthFunc(513):t===LessEqualDepth?e.depthFunc(515):t===EqualDepth?e.depthFunc(514):t===GreaterEqualDepth?e.depthFunc(518):t===GreaterDepth?e.depthFunc(516):t===NotEqualDepth?e.depthFunc(517):e.depthFunc(515):e.depthFunc(515),a=t)},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,a=null,i=null}}},E=new function(){var t=!1,r=null,a=null,i=null,n=null,o=null,d=null,p=null,c=null;return{setTest:function(e){t||(e?s(2960):l(2960))},setMask:function(a){r===a||t||(e.stencilMask(a),r=a)},setFunc:function(t,r,o){(a!==t||i!==r||n!==o)&&(e.stencilFunc(t,r,o),a=t,i=r,n=o)},setOp:function(t,r,a){(o!==t||d!==r||p!==a)&&(e.stencilOp(t,r,a),o=t,d=r,p=a)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,a=null,i=null,n=null,o=null,d=null,p=null,c=null}}},T=e.getParameter(34921),w=new Uint8Array(T),L=new Uint8Array(T),A=new Uint8Array(T),R={},P=null,C=null,I=null,D=null,N=null,z=null,U=null,B=null,H=null,F=!1,O=null,G=null,V=null,k=null,W=null,j=e.getParameter(35661),q=!1,X=0,Y=e.getParameter(7938);-1===Y.indexOf("WebGL")?-1!==Y.indexOf("OpenGL ES")&&(X=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Y)[1]),q=2<=X):(X=parseFloat(/^WebGL\ ([0-9])/.exec(Y)[1]),q=1<=X);var Z=null,J={},Q=new Vector4,K=new Vector4,$={};$[3553]=a(3553,3553,1),$[34067]=a(34067,34069,6),M.setClear(0,0,0,1),S.setClear(1),E.setClear(0),s(2929),S.setFunc(LessEqualDepth),c(!1),u(CullFaceBack),s(2884),p(NoBlending);var ee={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(b)ee[MinEquation]=32775,ee[MaxEquation]=32776;else{var te=t.get("EXT_blend_minmax");null!==te&&(ee[MinEquation]=te.MIN_EXT,ee[MaxEquation]=te.MAX_EXT)}var re={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};return{buffers:{color:M,depth:S,stencil:E},initAttributes:i,enableAttribute:function(e){n(e,0)},enableAttributeAndDivisor:n,disableUnusedAttributes:o,enable:s,disable:l,useProgram:d,setBlending:p,setMaterial:function(e,t){e.side===DoubleSide?l(2884):s(2884);var r=e.side===BackSide;t&&(r=!r),c(r),e.blending===NormalBlending&&!1===e.transparent?p(NoBlending):p(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),S.setFunc(e.depthFunc),S.setTest(e.depthTest),S.setMask(e.depthWrite),M.setMask(e.colorWrite);var a=e.stencilWrite;E.setTest(a),a&&(E.setMask(e.stencilWriteMask),E.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),E.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),g(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:c,setCullFace:u,setLineWidth:m,setPolygonOffset:g,setScissorTest:function(e){e?s(3089):l(3089)},activeTexture:f,bindTexture:h,unbindTexture:y,compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:x,viewport:v,reset:_}}function WebGLTextures(e,t,r,a,i,n,o){function s(e,t){return G?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function l(e,t,r,a){var i=1;if((e.width>a||e.height>a)&&(i=a/Math.max(e.width,e.height)),1>i||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var n=t?MathUtils.floorPowerOfTwo:Math.floor,o=n(i*e.width),l=n(i*e.height);void 0===V&&(V=s(o,l));var d=r?s(o,l):V;d.width=o,d.height=l;var p=d.getContext("2d");return p.drawImage(e,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+l+")."),d}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function d(e){return MathUtils.isPowerOfTwo(e.width)&&MathUtils.isPowerOfTwo(e.height)}function p(e){return!z&&(e.wrapS!==ClampToEdgeWrapping||e.wrapT!==ClampToEdgeWrapping||e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter)}function c(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function u(t,r,i,n){e.generateMipmap(t);var o=a.get(r);o.__maxMipLevel=Math.log(Math.max(i,n))*Math.LOG2E}function m(r,a,i){if(!1===z)return a;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}var n=a;return 6403===a&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===a&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===a&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),(33325===n||33326===n||34842===n||34836===n)&&t.get("EXT_color_buffer_float"),n}function g(e){return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?9728:9729}function f(e){var t=e.target;t.removeEventListener("dispose",f),y(t),t.isVideoTexture&&O.delete(t),o.memory.textures--}function h(e){var t=e.target;t.removeEventListener("dispose",h),x(t),o.memory.textures--}function y(t){var r=a.get(t);void 0===r.__webglInit||(e.deleteTexture(r.__webglTexture),a.remove(t))}function x(t){var r=a.get(t),n=a.get(t.texture);if(t){if(void 0!==n.__webglTexture&&e.deleteTexture(n.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(var o=0;6>o;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);a.remove(t.texture),a.remove(t)}}function v(){var e=k;return e>=U&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+U),k+=1,e}function _(e,t){var i=a.get(e);if(e.isVideoTexture&&I(e),0<e.version&&i.__version!==e.version){var n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===n.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else return void T(i,e,t)}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function b(t,o){if(6===t.image.length){var s=a.get(t);if(0<t.version&&s.__version!==t.version){E(s,t),r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture),e.pixelStorei(37440,t.flipY);for(var p=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),g=t.image[0]&&t.image[0].isDataTexture,f=[],h=0;6>h;h++)f[h]=p||g?g?t.image[h].image:t.image[h]:l(t.image[h],!1,!0,B);var y=f[0],x=d(y)||z,v=n.convert(t.format),_=n.convert(t.type),b=m(t.internalFormat,v,_);S(34067,t,x);var M;if(p){for(var h=0;6>h;h++){M=f[h].mipmaps;for(var T=0,w;T<M.length;T++)w=M[T],t.format!==RGBAFormat&&t.format!==RGBFormat?null===v?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.compressedTexImage2D(34069+h,T,b,w.width,w.height,0,w.data):r.texImage2D(34069+h,T,b,w.width,w.height,0,v,_,w.data)}s.__maxMipLevel=M.length-1}else{M=t.mipmaps;for(var h=0;6>h;h++)if(g){r.texImage2D(34069+h,0,b,f[h].width,f[h].height,0,v,_,f[h].data);for(var T=0;T<M.length;T++){var w=M[T],L=w.image[h].image;r.texImage2D(34069+h,T+1,b,L.width,L.height,0,v,_,L.data)}}else{r.texImage2D(34069+h,0,b,v,_,f[h]);for(var T=0,w;T<M.length;T++)w=M[T],r.texImage2D(34069+h,T+1,b,v,_,w.image[h])}s.__maxMipLevel=M.length}c(t,x)&&u(34067,t,y.width,y.height),s.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture)}}function M(e,t){r.activeTexture(33984+t),r.bindTexture(34067,a.get(e).__webglTexture)}function S(r,n,o){o?(e.texParameteri(r,10242,W[n.wrapS]),e.texParameteri(r,10243,W[n.wrapT]),(32879===r||35866===r)&&e.texParameteri(r,32882,W[n.wrapR]),e.texParameteri(r,10240,j[n.magFilter]),e.texParameteri(r,10241,j[n.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),(32879===r||35866===r)&&e.texParameteri(r,32882,33071),(n.wrapS!==ClampToEdgeWrapping||n.wrapT!==ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,g(n.magFilter)),e.texParameteri(r,10241,g(n.minFilter)),n.minFilter!==NearestFilter&&n.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var s=t.get("EXT_texture_filter_anisotropic");if(s){if(n.type===FloatType&&null===t.get("OES_texture_float_linear"))return;if(n.type===HalfFloatType&&null===(z||t.get("OES_texture_half_float_linear")))return;(1<n.anisotropy||a.get(n).__currentAnisotropy)&&(e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(n.anisotropy,i.getMaxAnisotropy())),a.get(n).__currentAnisotropy=n.anisotropy)}}function E(t,r){t.__webglInit===void 0&&(t.__webglInit=!0,r.addEventListener("dispose",f),t.__webglTexture=e.createTexture(),o.memory.textures++)}function T(t,a,o){var s=3553;a.isDataTexture2DArray&&(s=35866),a.isDataTexture3D&&(s=32879),E(t,a),r.activeTexture(33984+o),r.bindTexture(s,t.__webglTexture),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment);var g=p(a)&&!1===d(a.image),f=l(a.image,g,!1,H),h=d(f)||z,y=n.convert(a.format),x=n.convert(a.type),v=m(a.internalFormat,y,x);S(s,a,h);var _=a.mipmaps,b;if(a.isDepthTexture)v=6402,z?a.type===FloatType?v=36012:a.type===UnsignedIntType?v=33190:a.type===UnsignedInt248Type?v=35056:v=33189:a.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===DepthFormat&&6402===v&&a.type!==UnsignedShortType&&a.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=UnsignedShortType,x=n.convert(a.type)),a.format===DepthStencilFormat&&6402===v&&(v=34041,a.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=UnsignedInt248Type,x=n.convert(a.type))),r.texImage2D(3553,0,v,f.width,f.height,0,y,x,null);else if(a.isDataTexture){if(0<_.length&&h){for(var M=0,T=_.length;M<T;M++)b=_[M],r.texImage2D(3553,M,v,b.width,b.height,0,y,x,b.data);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,f.width,f.height,0,y,x,f.data),t.__maxMipLevel=0;}else if(a.isCompressedTexture){for(var M=0,T=_.length;M<T;M++)b=_[M],a.format!==RGBAFormat&&a.format!==RGBFormat?null===y?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.compressedTexImage2D(3553,M,v,b.width,b.height,0,b.data):r.texImage2D(3553,M,v,b.width,b.height,0,y,x,b.data);t.__maxMipLevel=_.length-1}else if(a.isDataTexture2DArray)r.texImage3D(35866,0,v,f.width,f.height,f.depth,0,y,x,f.data),t.__maxMipLevel=0;else if(a.isDataTexture3D)r.texImage3D(32879,0,v,f.width,f.height,f.depth,0,y,x,f.data),t.__maxMipLevel=0;else if(0<_.length&&h){for(var M=0,T=_.length;M<T;M++)b=_[M],r.texImage2D(3553,M,v,y,x,b);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,y,x,f),t.__maxMipLevel=0;c(a,h)&&u(s,a,f.width,f.height),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}function w(t,i,o,s){var l=n.convert(i.texture.format),d=n.convert(i.texture.type),p=m(i.texture.internalFormat,l,d);r.texImage2D(s,0,p,i.width,i.height,0,l,d,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,a.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function L(t,r,a){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){var i=33189;if(a){var o=r.depthTexture;o&&o.isDepthTexture&&(o.type===FloatType?i=36012:o.type===UnsignedIntType&&(i=33190));var s=C(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(a){var s=C(r);e.renderbufferStorageMultisample(36161,s,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{var l=n.convert(r.texture.format),d=n.convert(r.texture.type),i=m(r.texture.internalFormat,l,d);if(a){var s=C(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height)}e.bindRenderbuffer(36161,null)}function A(t,r){var i=r&&r.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");a.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),_(r.depthTexture,0);var n=a.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===DepthFormat)e.framebufferTexture2D(36160,36096,3553,n,0);else if(r.depthTexture.format===DepthStencilFormat)e.framebufferTexture2D(36160,33306,3553,n,0);else throw new Error("Unknown depthTexture format")}function R(t){var r=a.get(t),n=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(n)throw new Error("target.depthTexture not supported in Cube render targets");A(r.__webglFramebuffer,t)}else if(n){r.__webglDepthbuffer=[];for(var o=0;6>o;o++)e.bindFramebuffer(36160,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=e.createRenderbuffer(),L(r.__webglDepthbuffer[o],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),L(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function P(t){var s=a.get(t),l=a.get(t.texture);t.addEventListener("dispose",h),l.__webglTexture=e.createTexture(),o.memory.textures++;var p=!0===t.isWebGLCubeRenderTarget,g=!0===t.isWebGLMultisampleRenderTarget,f=d(t)||z;if(z&&t.texture.format===RGBFormat&&(t.texture.type===FloatType||t.texture.type===HalfFloatType)&&(t.texture.format=RGBAFormat,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),p){s.__webglFramebuffer=[];for(var y=0;6>y;y++)s.__webglFramebuffer[y]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),g)if(z){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var x=n.convert(t.texture.format),v=n.convert(t.texture.type),_=m(t.texture.internalFormat,x,v),b=C(t);e.renderbufferStorageMultisample(36161,b,_,t.width,t.height),e.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),L(s.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(p){r.bindTexture(34067,l.__webglTexture),S(34067,t.texture,f);for(var y=0;6>y;y++)w(s.__webglFramebuffer[y],t,36064,34069+y);c(t.texture,f)&&u(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,l.__webglTexture),S(3553,t.texture,f),w(s.__webglFramebuffer,t,36064,3553),c(t.texture,f)&&u(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&R(t)}function C(e){return z&&e.isWebGLMultisampleRenderTarget?Math.min(F,e.samples):0}function I(e){var t=o.render.frame;O.get(e)!==t&&(O.set(e,t),e.update())}function D(e,t){e&&e.isWebGLRenderTarget&&(!1===q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),q=!0),e=e.texture),_(e,t)}function N(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===X&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),X=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?b(e,t):M(e,t)}var z=i.isWebGL2,U=i.maxTextures,B=i.maxCubemapSize,H=i.maxTextureSize,F=i.maxSamples,O=new WeakMap,G=!1,V;try{G="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}var k=0,W={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},j={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987},q=!1,X=!1;this.allocateTextureUnit=v,this.resetTextureUnits=function(){k=0},this.setTexture2D=_,this.setTexture2DArray=function(e,t){var i=a.get(e);return 0<e.version&&i.__version!==e.version?void T(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){var i=a.get(e);return 0<e.version&&i.__version!==e.version?void T(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=b,this.setTextureCubeDynamic=M,this.setupRenderTarget=P,this.updateRenderTargetMipmap=function(e){var t=e.texture,i=d(e)||z;if(c(t,i)){var n=e.isWebGLCubeRenderTarget?34067:3553,o=a.get(t).__webglTexture;r.bindTexture(n,o),u(n,t,e.width,e.height),r.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(z){var r=a.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);var i=t.width,n=t.height,o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,i,n,0,0,i,n,o,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=D,this.safeSetTextureCube=N}function WebGLUtils(e,t,r){var a=r.isWebGL2;return{convert:function(e){var r;if(e===UnsignedByteType)return 5121;if(e===UnsignedShort4444Type)return 32819;if(e===UnsignedShort5551Type)return 32820;if(e===UnsignedShort565Type)return 33635;if(e===ByteType)return 5120;if(e===ShortType)return 5122;if(e===UnsignedShortType)return 5123;if(e===IntType)return 5124;if(e===UnsignedIntType)return 5125;if(e===FloatType)return 5126;if(e===HalfFloatType)return a?5131:(r=t.get("OES_texture_half_float"),null===r?null:r.HALF_FLOAT_OES);if(e===AlphaFormat)return 6406;if(e===RGBFormat)return 6407;if(e===RGBAFormat)return 6408;if(e===LuminanceFormat)return 6409;if(e===LuminanceAlphaFormat)return 6410;if(e===DepthFormat)return 6402;if(e===DepthStencilFormat)return 34041;if(e===RedFormat)return 6403;if(e===RedIntegerFormat)return 36244;if(e===RGFormat)return 33319;if(e===RGIntegerFormat)return 33320;if(e===RGBIntegerFormat)return 36248;if(e===RGBAIntegerFormat)return 36249;if(e===RGB_S3TC_DXT1_Format||e===RGBA_S3TC_DXT1_Format||e===RGBA_S3TC_DXT3_Format||e===RGBA_S3TC_DXT5_Format)if(r=t.get("WEBGL_compressed_texture_s3tc"),null!==r){if(e===RGB_S3TC_DXT1_Format)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===RGB_PVRTC_4BPPV1_Format||e===RGB_PVRTC_2BPPV1_Format||e===RGBA_PVRTC_4BPPV1_Format||e===RGBA_PVRTC_2BPPV1_Format)if(r=t.get("WEBGL_compressed_texture_pvrtc"),null!==r){if(e===RGB_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===RGB_ETC1_Format)return r=t.get("WEBGL_compressed_texture_etc1"),null===r?null:r.COMPRESSED_RGB_ETC1_WEBGL;if((e===RGB_ETC2_Format||e===RGBA_ETC2_EAC_Format)&&(r=t.get("WEBGL_compressed_texture_etc"),null!==r)){if(e===RGB_ETC2_Format)return r.COMPRESSED_RGB8_ETC2;if(e===RGBA_ETC2_EAC_Format)return r.COMPRESSED_RGBA8_ETC2_EAC}return e===RGBA_ASTC_4x4_Format||e===RGBA_ASTC_5x4_Format||e===RGBA_ASTC_5x5_Format||e===RGBA_ASTC_6x5_Format||e===RGBA_ASTC_6x6_Format||e===RGBA_ASTC_8x5_Format||e===RGBA_ASTC_8x6_Format||e===RGBA_ASTC_8x8_Format||e===RGBA_ASTC_10x5_Format||e===RGBA_ASTC_10x6_Format||e===RGBA_ASTC_10x8_Format||e===RGBA_ASTC_10x10_Format||e===RGBA_ASTC_12x10_Format||e===RGBA_ASTC_12x12_Format||e===SRGB8_ALPHA8_ASTC_4x4_Format||e===SRGB8_ALPHA8_ASTC_5x4_Format||e===SRGB8_ALPHA8_ASTC_5x5_Format||e===SRGB8_ALPHA8_ASTC_6x5_Format||e===SRGB8_ALPHA8_ASTC_6x6_Format||e===SRGB8_ALPHA8_ASTC_8x5_Format||e===SRGB8_ALPHA8_ASTC_8x6_Format||e===SRGB8_ALPHA8_ASTC_8x8_Format||e===SRGB8_ALPHA8_ASTC_10x5_Format||e===SRGB8_ALPHA8_ASTC_10x6_Format||e===SRGB8_ALPHA8_ASTC_10x8_Format||e===SRGB8_ALPHA8_ASTC_10x10_Format||e===SRGB8_ALPHA8_ASTC_12x10_Format||e===SRGB8_ALPHA8_ASTC_12x12_Format?(r=t.get("WEBGL_compressed_texture_astc"),null===r?null:e):e===RGBA_BPTC_Format?(r=t.get("EXT_texture_compression_bptc"),null===r?null:e):e===UnsignedInt248Type?a?34042:(r=t.get("WEBGL_depth_texture"),null===r?null:r.UNSIGNED_INT_24_8_WEBGL):void 0}}}function ArrayCamera(e){PerspectiveCamera.call(this),this.cameras=e||[]}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0});function Group(){Object3D.call(this),this.type="Group"}Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0});function WebXRManager(e,t){function r(e){var t=h.get(e.inputSource);t&&(t.targetRay&&t.targetRay.dispatchEvent({type:e.type}),t.grip&&t.grip.dispatchEvent({type:e.type}))}function a(){h.forEach(function(e,t){e.targetRay&&(e.targetRay.dispatchEvent({type:"disconnected",data:t}),e.targetRay.visible=!1),e.grip&&(e.grip.dispatchEvent({type:"disconnected",data:t}),e.grip.visible=!1)}),h.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),T.stop(),d.isPresenting=!1,d.dispatchEvent({type:"sessionend"})}function i(e){u=e,T.setContext(p),T.start(),d.isPresenting=!0,d.dispatchEvent({type:"sessionstart"})}function n(e){for(var t=p.inputSources,r=0;r<f.length;r++)h.set(t[r],f[r]);for(var r=0;r<e.removed.length;r++){var a=e.removed[r],n=h.get(a);n&&(n.targetRay&&n.targetRay.dispatchEvent({type:"disconnected",data:a}),n.grip&&n.grip.dispatchEvent({type:"disconnected",data:a}),h.delete(a))}for(var r=0;r<e.added.length;r++){var a=e.added[r],n=h.get(a);n&&(n.targetRay&&n.targetRay.dispatchEvent({type:"connected",data:a}),n.grip&&n.grip.dispatchEvent({type:"connected",data:a}))}}function o(e,t,r){M.setFromMatrixPosition(t.matrixWorld),S.setFromMatrixPosition(r.matrixWorld);var a=M.distanceTo(S),i=t.projectionMatrix.elements,n=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],d=(i[9]-1)/i[5],p=(i[8]-1)/i[0],c=(n[8]+1)/n[0],u=a/(-p+c),m=u*-p;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);var g=o+u,f=s+u;e.projectionMatrix.makePerspective(o*p-m,o*c+(a-m),l*s/f*g,d*s/f*g,g,f)}function s(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}function l(t,r){if(g=r.getViewerPose(u),null!==g){var a=g.views,n=p.renderState.baseLayer;e.setFramebuffer(n.framebuffer);for(var o=0;o<a.length;o++){var s=a[o],l=n.getViewport(s),d=v.cameras[o];d.matrix.fromArray(s.transform.matrix),d.projectionMatrix.fromArray(s.projectionMatrix),d.viewport.set(l.x,l.y,l.width,l.height),0==o&&v.matrix.copy(d.matrix)}}for(var c=p.inputSources,o=0;o<f.length;o++){var m=f[o],h=c[o],y=null,x=null;h&&(m.targetRay&&(y=r.getPose(h.targetRaySpace,u),null!==y&&(m.targetRay.matrix.fromArray(y.transform.matrix),m.targetRay.matrix.decompose(m.targetRay.position,m.targetRay.rotation,m.targetRay.scale))),m.grip&&h.gripSpace&&(x=r.getPose(h.gripSpace,u),null!==x&&(m.grip.matrix.fromArray(x.transform.matrix),m.grip.matrix.decompose(m.grip.position,m.grip.rotation,m.grip.scale)))),m.targetRay&&(m.targetRay.visible=null!==y),m.grip&&(m.grip.visible=null!==x)}E&&E(t,r)}var d=this,p=null,c=1,u=null,m="local-floor",g=null,f=[],h=new Map,y=new PerspectiveCamera;y.layers.enable(1),y.viewport=new Vector4;var x=new PerspectiveCamera;x.layers.enable(2),x.viewport=new Vector4;var v=new ArrayCamera([y,x]);v.layers.enable(1),v.layers.enable(2);var _=null,b=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(e){var t=f[e];return void 0===t&&(t={},f[e]=t),void 0===t.targetRay&&(t.targetRay=new Group,t.targetRay.matrixAutoUpdate=!1,t.targetRay.visible=!1),t.targetRay},this.getControllerGrip=function(e){var t=f[e];return void 0===t&&(t={},f[e]=t),void 0===t.grip&&(t.grip=new Group,t.grip.matrixAutoUpdate=!1,t.grip.visible=!1),t.grip},this.setFramebufferScaleFactor=function(e){c=e,!0==d.isPresenting&&console.warn("WebXRManager: Cannot change framebuffer scale while presenting VR content")},this.setReferenceSpaceType=function(e){m=e},this.getReferenceSpace=function(){return u},this.getSession=function(){return p},this.setSession=function(e){if(p=e,null!==p){p.addEventListener("select",r),p.addEventListener("selectstart",r),p.addEventListener("selectend",r),p.addEventListener("squeeze",r),p.addEventListener("squeezestart",r),p.addEventListener("squeezeend",r),p.addEventListener("end",a);var o=t.getContextAttributes(),s={antialias:o.antialias,alpha:o.alpha,depth:o.depth,stencil:o.stencil,framebufferScaleFactor:c},l=new XRWebGLLayer(p,t,s);p.updateRenderState({baseLayer:l}),p.requestReferenceSpace(m).then(i),p.addEventListener("inputsourceschange",n)}};var M=new Vector3,S=new Vector3;this.getCamera=function(e){v.near=x.near=y.near=e.near,v.far=x.far=y.far=e.far,(_!==v.near||b!==v.far)&&(p.updateRenderState({depthNear:v.near,depthFar:v.far}),_=v.near,b=v.far);var t=e.parent,r=v.cameras;s(v,t);for(var a=0;a<r.length;a++)s(r[a],t);e.matrixWorld.copy(v.matrixWorld);for(var n=e.children,a=0,d=n.length;a<d;a++)n[a].updateMatrixWorld(!0);return o(v,y,x),v};var E=null,T=new WebGLAnimation;T.setAnimationLoop(l),this.setAnimationLoop=function(e){E=e},this.dispose=function(){}}Object.assign(WebXRManager.prototype,EventDispatcher.prototype);function WebGLRenderer(e){function t(){return null===J?se:1}function r(){be=new WebGLExtensions(ve),Me=new WebGLCapabilities(ve,be,e),!1===Me.isWebGL2&&(be.get("WEBGL_depth_texture"),be.get("OES_texture_float"),be.get("OES_texture_half_float"),be.get("OES_texture_half_float_linear"),be.get("OES_standard_derivatives"),be.get("OES_element_index_uint"),be.get("ANGLE_instanced_arrays")),be.get("OES_texture_float_linear"),Be=new WebGLUtils(ve,be,Me),Se=new WebGLState(ve,be,Me),Se.scissor(ae.copy(ce).multiplyScalar(se).floor()),Se.viewport(re.copy(pe).multiplyScalar(se).floor()),Ee=new WebGLInfo(ve),Te=new WebGLProperties,we=new WebGLTextures(ve,be,Se,Te,Me,Be,Ee),Le=new WebGLAttributes(ve,Me),Ae=new WebGLGeometries(ve,Le,Ee),Re=new WebGLObjects(ve,Ae,Le,Ee),Ne=new WebGLMorphtargets(ve),Pe=new WebGLPrograms(j,be,Me),Ce=new WebGLRenderLists,Ie=new WebGLRenderStates,De=new WebGLBackground(j,Se,Re,F),ze=new WebGLBufferRenderer(ve,be,Ee,Me),Ue=new WebGLIndexedBufferRenderer(ve,be,Ee,Me),Ee.programs=Pe.programs,j.capabilities=Me,j.extensions=be,j.properties=Te,j.renderLists=Ce,j.state=Se,j.info=Ee}function a(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),q=!0}function i(){console.log("THREE.WebGLRenderer: Context Restored."),q=!1,r()}function n(e){var t=e.target;t.removeEventListener("dispose",n),o(t)}function o(e){s(e),Te.remove(e)}function s(e){var t=Te.get(e).program;e.program=void 0,t!==void 0&&Pe.releaseProgram(t)}function l(e,t){e.render(function(e){j.renderBufferImmediate(e,t)})}function d(e,t,r,a){if(!(!1===Me.isWebGL2&&(e.isInstancedMesh||t.isInstancedBufferGeometry)&&null===be.get("ANGLE_instanced_arrays"))){Se.initAttributes();var i=t.attributes,n=a.getAttributes(),o=r.defaultAttributeValues;for(var s in n){var l=n[s];if(0<=l){var d=i[s];if(void 0!==d){var p=d.normalized,c=d.itemSize,u=Le.get(d);if(void 0===u)continue;var m=u.buffer,g=u.type,f=u.bytesPerElement;if(d.isInterleavedBufferAttribute){var h=d.data,y=h.stride,x=d.offset;h&&h.isInstancedInterleavedBuffer?(Se.enableAttributeAndDivisor(l,h.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)):Se.enableAttribute(l),ve.bindBuffer(34962,m),ve.vertexAttribPointer(l,c,g,p,y*f,x*f)}else d.isInstancedBufferAttribute?(Se.enableAttributeAndDivisor(l,d.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=d.meshPerAttribute*d.count)):Se.enableAttribute(l),ve.bindBuffer(34962,m),ve.vertexAttribPointer(l,c,g,p,0,0)}else if("instanceMatrix"===s){var u=Le.get(e.instanceMatrix);if(void 0===u)continue;var m=u.buffer,g=u.type;Se.enableAttributeAndDivisor(l+0,1),Se.enableAttributeAndDivisor(l+1,1),Se.enableAttributeAndDivisor(l+2,1),Se.enableAttributeAndDivisor(l+3,1),ve.bindBuffer(34962,m),ve.vertexAttribPointer(l+0,4,g,!1,64,0),ve.vertexAttribPointer(l+1,4,g,!1,64,16),ve.vertexAttribPointer(l+2,4,g,!1,64,32),ve.vertexAttribPointer(l+3,4,g,!1,64,48)}else if(void 0!==o){var v=o[s];if(void 0!==v)switch(v.length){case 2:ve.vertexAttrib2fv(l,v);break;case 3:ve.vertexAttrib3fv(l,v);break;case 4:ve.vertexAttrib4fv(l,v);break;default:ve.vertexAttrib1fv(l,v);}}}}Se.disableUnusedAttributes()}}function p(e){He.isPresenting||Ge&&Ge(e)}function c(e,t,r,a){if(!1!==e.visible){var n=e.layers.test(t.layers);if(n)if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)W.pushLight(e),e.castShadow&&W.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||me.intersectsSprite(e)){a&&xe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ye);var o=Re.update(e),s=e.material;s.visible&&k.push(e,o,s,r,xe.z,null)}}else if(e.isImmediateRenderObject)a&&xe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ye),k.push(e,null,e.material,r,xe.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Ee.render.frame&&(e.skeleton.update(),e.skeleton.frame=Ee.render.frame),!e.frustumCulled||me.intersectsObject(e))){a&&xe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ye);var o=Re.update(e),s=e.material;if(Array.isArray(s))for(var d=o.groups,p=0,u=d.length;p<u;p++){var m=d[p],g=s[m.materialIndex];g&&g.visible&&k.push(e,o,g,r,xe.z,m)}else s.visible&&k.push(e,o,s,r,xe.z,null)}for(var f=e.children,p=0,u=f.length;p<u;p++)c(f[p],t,r,a)}}function u(e,t,r,a){for(var n=0,o=e.length;n<o;n++){var s=e[n],l=s.object,d=s.geometry,p=a===void 0?s.material:a,c=s.group;if(r.isArrayCamera){te=r;for(var u=r.cameras,g=0,f=u.length,h;g<f;g++)h=u[g],l.layers.test(h.layers)&&(Se.viewport(re.copy(h.viewport)),W.setupLights(h),m(l,t,h,d,p,c))}else te=null,m(l,t,r,d,p,c)}}function m(e,t,r,a,i,n){if(e.onBeforeRender(j,t,r,a,i,n),W=Ie.get(t,te||r),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){var o=f(r,t,i,e);Se.setMaterial(i),$.geometry=null,$.program=null,$.wireframe=!1,l(e,o)}else j.renderBufferDirect(r,t,a,i,e,n);e.onAfterRender(j,t,r,a,i,n),W=Ie.get(t,te||r)}function g(e,t,r){var a=Te.get(e),o=W.state.lights,l=W.state.shadowsArray,d=o.state.version,p=Pe.getParameters(e,o.state,l,t,ge.numPlanes,ge.numIntersection,r),c=Pe.getProgramCacheKey(p),u=a.program,m=!0;if(u===void 0)e.addEventListener("dispose",n);else if(u.cacheKey!==c)s(e);else if(a.lightsStateVersion!==d)a.lightsStateVersion=d,m=!1;else{if(void 0!==p.shaderID)return;m=!1}m&&(u=Pe.acquireProgram(p,c),a.program=u,a.uniforms=p.uniforms,a.environment=e.isMeshStandardMaterial?t.environment:null,a.outputEncoding=j.outputEncoding,e.program=u);var g=u.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var f=0;f<j.maxMorphTargets;f++)0<=g["morphTarget"+f]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var f=0;f<j.maxMorphNormals;f++)0<=g["morphNormal"+f]&&e.numSupportedMorphNormals++}var h=a.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(a.numClippingPlanes=ge.numPlanes,a.numIntersection=ge.numIntersection,h.clippingPlanes=ge.uniform),a.fog=t.fog,a.needsLights=I(e),a.lightsStateVersion=d,a.needsLights&&(h.ambientLightColor.value=o.state.ambient,h.lightProbe.value=o.state.probe,h.directionalLights.value=o.state.directional,h.directionalLightShadows.value=o.state.directionalShadow,h.spotLights.value=o.state.spot,h.spotLightShadows.value=o.state.spotShadow,h.rectAreaLights.value=o.state.rectArea,h.pointLights.value=o.state.point,h.pointLightShadows.value=o.state.pointShadow,h.hemisphereLights.value=o.state.hemi,h.directionalShadowMap.value=o.state.directionalShadowMap,h.directionalShadowMatrix.value=o.state.directionalShadowMatrix,h.spotShadowMap.value=o.state.spotShadowMap,h.spotShadowMatrix.value=o.state.spotShadowMatrix,h.pointShadowMap.value=o.state.pointShadowMap,h.pointShadowMatrix.value=o.state.pointShadowMatrix);var y=a.program.getUniforms(),x=WebGLUniforms.seqWithValue(y.seq,h);a.uniformsList=x}function f(e,t,r,a){we.resetTextureUnits();var i=t.fog,n=r.isMeshStandardMaterial?t.environment:null,o=Te.get(r),s=W.state.lights;if(fe&&(he||e!==ee)){var l=e===ee&&r.id===K;ge.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,o,l)}r.version===o.__version?void 0===o.program?g(r,t,a):r.fog&&o.fog!==i?g(r,t,a):o.environment===n?o.needsLights&&o.lightsStateVersion!==s.state.version?g(r,t,a):void 0!==o.numClippingPlanes&&(o.numClippingPlanes!==ge.numPlanes||o.numIntersection!==ge.numIntersection)?g(r,t,a):o.outputEncoding!==j.outputEncoding&&g(r,t,a):g(r,t,a):(g(r,t,a),o.__version=r.version);var d=!1,p=!1,c=!1,u=o.program,m=u.getUniforms(),f=o.uniforms;if(Se.useProgram(u.program)&&(d=!0,p=!0,c=!0),r.id!==K&&(K=r.id,p=!0),d||ee!==e){if(m.setValue(ve,"projectionMatrix",e.projectionMatrix),Me.logarithmicDepthBuffer&&m.setValue(ve,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),ee!==e&&(ee=e,p=!0,c=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var I=m.map.cameraPosition;void 0!==I&&I.setValue(ve,xe.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&m.setValue(ve,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&m.setValue(ve,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){m.setOptional(ve,a,"bindMatrix"),m.setOptional(ve,a,"bindMatrixInverse");var D=a.skeleton;if(D){var N=D.bones;if(Me.floatVertexTextures){if(void 0===D.boneTexture){var z=Math.sqrt(4*N.length);z=MathUtils.ceilPowerOfTwo(z),z=Math.max(z,4);var U=new Float32Array(4*(z*z));U.set(D.boneMatrices);var B=new DataTexture(U,z,z,RGBAFormat,FloatType);D.boneMatrices=U,D.boneTexture=B,D.boneTextureSize=z}m.setValue(ve,"boneTexture",D.boneTexture,we),m.setValue(ve,"boneTextureSize",D.boneTextureSize)}else m.setOptional(ve,D,"boneMatrices")}}return(p||o.receiveShadow!==a.receiveShadow)&&(o.receiveShadow=a.receiveShadow,m.setValue(ve,"receiveShadow",a.receiveShadow)),p&&(m.setValue(ve,"toneMappingExposure",j.toneMappingExposure),m.setValue(ve,"toneMappingWhitePoint",j.toneMappingWhitePoint),o.needsLights&&C(f,c),i&&r.fog&&b(f,i),r.isMeshBasicMaterial?h(f,r):r.isMeshLambertMaterial?(h(f,r),M(f,r)):r.isMeshToonMaterial?(h(f,r),E(f,r)):r.isMeshPhongMaterial?(h(f,r),S(f,r)):r.isMeshStandardMaterial?(h(f,r,n),r.isMeshPhysicalMaterial?w(f,r,n):T(f,r,n)):r.isMeshMatcapMaterial?(h(f,r),L(f,r)):r.isMeshDepthMaterial?(h(f,r),A(f,r)):r.isMeshDistanceMaterial?(h(f,r),R(f,r)):r.isMeshNormalMaterial?(h(f,r),P(f,r)):r.isLineBasicMaterial?(y(f,r),r.isLineDashedMaterial&&x(f,r)):r.isPointsMaterial?v(f,r):r.isSpriteMaterial?_(f,r):r.isShadowMaterial&&(f.color.value.copy(r.color),f.opacity.value=r.opacity),void 0!==f.ltc_1&&(f.ltc_1.value=UniformsLib.LTC_1),void 0!==f.ltc_2&&(f.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(ve,o.uniformsList,f,we),r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(WebGLUniforms.upload(ve,o.uniformsList,f,we),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&m.setValue(ve,"center",a.center),m.setValue(ve,"modelViewMatrix",a.modelViewMatrix),m.setValue(ve,"normalMatrix",a.normalMatrix),m.setValue(ve,"modelMatrix",a.matrixWorld),u}function h(e,t,r){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var a=t.envMap||r;a&&(e.envMap.value=a,e.flipEnvMap.value=a.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=Te.get(a).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap&&(i=t.emissiveMap),i!==void 0&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix));var n;t.aoMap?n=t.aoMap:t.lightMap&&(n=t.lightMap),n!==void 0&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uv2Transform.value.copy(n.matrix))}function y(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function x(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function v(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*se,e.scale.value=.5*oe,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),r!==void 0&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function _(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),r!==void 0&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function b(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function M(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function S(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function E(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function T(e,t,r){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||r)&&(e.envMapIntensity.value=t.envMapIntensity)}function w(e,t,r){T(e,t,r),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===BackSide&&e.clearcoatNormalScale.value.negate()),e.transparency.value=t.transparency}function L(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function A(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function R(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function P(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function C(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function I(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}e=e||{};var D=e.canvas===void 0?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):e.canvas,N=e.context===void 0?null:e.context,z=e.alpha!==void 0&&e.alpha,U=!(e.depth!==void 0)||e.depth,B=!(e.stencil!==void 0)||e.stencil,H=e.antialias!==void 0&&e.antialias,F=!(e.premultipliedAlpha!==void 0)||e.premultipliedAlpha,O=e.preserveDrawingBuffer!==void 0&&e.preserveDrawingBuffer,G=e.powerPreference===void 0?"default":e.powerPreference,V=e.failIfMajorPerformanceCaveat!==void 0&&e.failIfMajorPerformanceCaveat,k=null,W=null;this.domElement=D,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var j=this,q=!1,X=null,Y=0,Z=0,J=null,Q=null,K=-1,$={geometry:null,program:null,wireframe:!1},ee=null,te=null,re=new Vector4,ae=new Vector4,ie=null,ne=D.width,oe=D.height,se=1,le=null,de=null,pe=new Vector4(0,0,ne,oe),ce=new Vector4(0,0,ne,oe),ue=!1,me=new Frustum,ge=new WebGLClipping,fe=!1,he=!1,ye=new Matrix4,xe=new Vector3,ve;try{var _e={alpha:z,depth:U,stencil:B,antialias:H,premultipliedAlpha:F,preserveDrawingBuffer:O,powerPreference:G,failIfMajorPerformanceCaveat:V,xrCompatible:!0};if(D.addEventListener("webglcontextlost",a,!1),D.addEventListener("webglcontextrestored",i,!1),ve=N||D.getContext("webgl",_e)||D.getContext("experimental-webgl",_e),null===ve)if(null!==D.getContext("webgl"))throw new Error("Error creating WebGL context with your selected attributes.");else throw new Error("Error creating WebGL context.");void 0===ve.getShaderPrecisionFormat&&(ve.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}var be,Me,Se,Ee,Te,we,Le,Ae,Re,Pe,Ce,Ie,De,Ne,ze,Ue,Be;r();var He=new WebXRManager(j,ve);this.xr=He;var Fe=new WebGLShadowMap(j,Re,Me.maxTextureSize);this.shadowMap=Fe,this.getContext=function(){return ve},this.getContextAttributes=function(){return ve.getContextAttributes()},this.forceContextLoss=function(){var e=be.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=be.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return se},this.setPixelRatio=function(e){void 0===e||(se=e,this.setSize(ne,oe,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Vector2),e.set(ne,oe)},this.setSize=function(e,t,r){return He.isPresenting?void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):void(ne=e,oe=t,D.width=Math.floor(e*se),D.height=Math.floor(t*se),!1!==r&&(D.style.width=e+"px",D.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Vector2),e.set(ne*se,oe*se).floor()},this.setDrawingBufferSize=function(e,t,r){ne=e,oe=t,se=r,D.width=Math.floor(e*r),D.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Vector4),e.copy(re)},this.getViewport=function(e){return e.copy(pe)},this.setViewport=function(e,t,r,a){e.isVector4?pe.set(e.x,e.y,e.z,e.w):pe.set(e,t,r,a),Se.viewport(re.copy(pe).multiplyScalar(se).floor())},this.getScissor=function(e){return e.copy(ce)},this.setScissor=function(e,t,r,a){e.isVector4?ce.set(e.x,e.y,e.z,e.w):ce.set(e,t,r,a),Se.scissor(ae.copy(ce).multiplyScalar(se).floor())},this.getScissorTest=function(){return ue},this.setScissorTest=function(e){Se.setScissorTest(ue=e)},this.setOpaqueSort=function(e){le=e},this.setTransparentSort=function(e){de=e},this.getClearColor=function(){return De.getClearColor()},this.setClearColor=function(){De.setClearColor.apply(De,arguments)},this.getClearAlpha=function(){return De.getClearAlpha()},this.setClearAlpha=function(){De.setClearAlpha.apply(De,arguments)},this.clear=function(e,t,r){var a=0;(e===void 0||e)&&(a|=16384),(t===void 0||t)&&(a|=256),(r===void 0||r)&&(a|=1024),ve.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){D.removeEventListener("webglcontextlost",a,!1),D.removeEventListener("webglcontextrestored",i,!1),Ce.dispose(),Ie.dispose(),Te.dispose(),Re.dispose(),He.dispose(),Ve.stop(),this.forceContextLoss()},this.renderBufferImmediate=function(e,t){Se.initAttributes();var r=Te.get(e);e.hasPositions&&!r.position&&(r.position=ve.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=ve.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=ve.createBuffer()),e.hasColors&&!r.color&&(r.color=ve.createBuffer());var a=t.getAttributes();e.hasPositions&&(ve.bindBuffer(34962,r.position),ve.bufferData(34962,e.positionArray,35048),Se.enableAttribute(a.position),ve.vertexAttribPointer(a.position,3,5126,!1,0,0)),e.hasNormals&&(ve.bindBuffer(34962,r.normal),ve.bufferData(34962,e.normalArray,35048),Se.enableAttribute(a.normal),ve.vertexAttribPointer(a.normal,3,5126,!1,0,0)),e.hasUvs&&(ve.bindBuffer(34962,r.uv),ve.bufferData(34962,e.uvArray,35048),Se.enableAttribute(a.uv),ve.vertexAttribPointer(a.uv,2,5126,!1,0,0)),e.hasColors&&(ve.bindBuffer(34962,r.color),ve.bufferData(34962,e.colorArray,35048),Se.enableAttribute(a.color),ve.vertexAttribPointer(a.color,3,5126,!1,0,0)),Se.disableUnusedAttributes(),ve.drawArrays(4,0,e.count),e.count=0};var Oe=new Scene;this.renderBufferDirect=function(e,r,a,i,n,o){null===r&&(r=Oe);var s=n.isMesh&&0>n.matrixWorld.determinant(),l=f(e,r,i,n);Se.setMaterial(i,s);var p=!1;($.geometry!==a.id||$.program!==l.id||$.wireframe!==(!0===i.wireframe))&&($.geometry=a.id,$.program=l.id,$.wireframe=!0===i.wireframe,p=!0),(i.morphTargets||i.morphNormals)&&(Ne.update(n,a,i,l),p=!0);var c=a.index,u=a.attributes.position;if(null===c){if(void 0===u||0===u.count)return;}else if(0===c.count)return;var m=1;!0===i.wireframe&&(c=Ae.getWireframeAttribute(a),m=2);var g=ze,h;null!==c&&(h=Le.get(c),g=Ue,g.setIndex(h)),p&&(d(n,a,i,l),null!==c&&ve.bindBuffer(34963,h.buffer));var y=null===c?u.count:c.count,x=a.drawRange.start*m,v=a.drawRange.count*m,_=null===o?0:o.start*m,b=null===o?1/0:o.count*m,M=Math.max(x,_),S=Math.min(y,x+v,_+b)-1,E=Math.max(0,S-M+1);if(0!==E){if(n.isMesh)!0===i.wireframe?(Se.setLineWidth(i.wireframeLinewidth*t()),g.setMode(1)):g.setMode(4);else if(n.isLine){var T=i.linewidth;void 0===T&&(T=1),Se.setLineWidth(T*t()),n.isLineSegments?g.setMode(1):n.isLineLoop?g.setMode(2):g.setMode(3)}else n.isPoints?g.setMode(0):n.isSprite&&g.setMode(4);n.isInstancedMesh?g.renderInstances(a,M,E,n.count):a.isInstancedBufferGeometry?g.renderInstances(a,M,E,a.maxInstancedCount):g.render(M,E)}},this.compile=function(e,t){W=Ie.get(e,t),W.init(),e.traverse(function(e){e.isLight&&(W.pushLight(e),e.castShadow&&W.pushShadow(e))}),W.setupLights(t);var r={};e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var a=0;a<t.material.length;a++)!1==t.material[a].uuid in r&&(g(t.material[a],e,t),r[t.material[a].uuid]=!0);else!1==t.material.uuid in r&&(g(t.material,e,t),r[t.material.uuid]=!0)})};var Ge=null,Ve=new WebGLAnimation;Ve.setAnimationLoop(p),"undefined"!=typeof window&&Ve.setContext(window),this.setAnimationLoop=function(e){Ge=e,He.setAnimationLoop(e),Ve.start()},this.render=function(e,t){var r,a;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),a=arguments[3]),!(t&&t.isCamera))return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!q){$.geometry=null,$.program=null,$.wireframe=!1,K=-1,ee=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),He.enabled&&He.isPresenting&&(t=He.getCamera(t)),W=Ie.get(e,t),W.init(),e.onBeforeRender(j,e,t,r||J),ye.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),me.setFromProjectionMatrix(ye),he=this.localClippingEnabled,fe=ge.init(this.clippingPlanes,he,t),k=Ce.get(e,t),k.init(),c(e,t,0,j.sortObjects),k.finish(),!0===j.sortObjects&&k.sort(le,de),fe&&ge.beginShadows();var i=W.state.shadowsArray;Fe.render(i,e,t),W.setupLights(t),fe&&ge.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),De.render(k,e,t,a);var n=k.opaque,o=k.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;n.length&&u(n,e,t,s),o.length&&u(o,e,t,s)}else n.length&&u(n,e,t),o.length&&u(o,e,t);e.onAfterRender(j,e,t),null!==J&&(we.updateRenderTargetMipmap(J),we.updateMultisampleRenderTarget(J)),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1),k=null,W=null}},this.setFramebuffer=function(e){X!==e&&null===J&&ve.bindFramebuffer(36160,e),X=e},this.getActiveCubeFace=function(){return Y},this.getActiveMipmapLevel=function(){return Z},this.getRenderTarget=function(){return J},this.setRenderTarget=function(e,t,r){J=e,Y=t,Z=r,e&&void 0===Te.get(e).__webglFramebuffer&&we.setupRenderTarget(e);var a=X,i=!1;if(e){var n=Te.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=n[t||0],i=!0):e.isWebGLMultisampleRenderTarget?a=Te.get(e).__webglMultisampledFramebuffer:a=n,re.copy(e.viewport),ae.copy(e.scissor),ie=e.scissorTest}else re.copy(pe).multiplyScalar(se).floor(),ae.copy(ce).multiplyScalar(se).floor(),ie=ue;if(Q!==a&&(ve.bindFramebuffer(36160,a),Q=a),Se.viewport(re),Se.scissor(ae),Se.setScissorTest(ie),i){var o=Te.get(e.texture);ve.framebufferTexture2D(36160,36064,34069+(t||0),o.__webglTexture,r||0)}},this.readRenderTargetPixels=function(e,t,r,a,i,n,o){if(!(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var s=Te.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){var l=!1;s!==Q&&(ve.bindFramebuffer(36160,s),l=!0);try{var d=e.texture,p=d.format,c=d.type;if(p!==RGBAFormat&&Be.convert(p)!==ve.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(c!==UnsignedByteType&&Be.convert(c)!==ve.getParameter(35738)&&!(c===FloatType&&(Me.isWebGL2||be.get("OES_texture_float")||be.get("WEBGL_color_buffer_float")))&&!(c===HalfFloatType&&(Me.isWebGL2?be.get("EXT_color_buffer_float"):be.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ve.checkFramebufferStatus(36160)?0<=t&&t<=e.width-a&&0<=r&&r<=e.height-i&&ve.readPixels(t,r,a,i,Be.convert(p),Be.convert(c),n):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{l&&ve.bindFramebuffer(36160,Q)}}},this.copyFramebufferToTexture=function(e,t,r){r===void 0&&(r=0);var a=Math.pow(2,-r),i=Math.floor(t.image.width*a),n=Math.floor(t.image.height*a),o=Be.convert(t.format);we.setTexture2D(t,0),ve.copyTexImage2D(3553,r,o,e.x,e.y,i,n,0),Se.unbindTexture()},this.copyTextureToTexture=function(e,t,r,a){var i=t.image.width,n=t.image.height,o=Be.convert(r.format),s=Be.convert(r.type);we.setTexture2D(r,0),t.isDataTexture?ve.texSubImage2D(3553,a||0,e.x,e.y,i,n,o,s,t.image.data):ve.texSubImage2D(3553,a||0,e.x,e.y,o,s,t.image),Se.unbindTexture()},this.initTexture=function(e){we.setTexture2D(e,0),Se.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function FogExp2(e,t){this.name="",this.color=new Color(e),this.density=t===void 0?25e-5:t}Object.assign(FogExp2.prototype,{isFogExp2:!0,clone:function(){return new FogExp2(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});function Fog(e,t,r){this.name="",this.color=new Color(e),this.near=t===void 0?1:t,this.far=r===void 0?1e3:r}Object.assign(Fog.prototype,{isFog:!0,clone:function(){return new Fog(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=e===void 0?0:e.length/t,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(var a=0,n=this.stride;a<n;a++)this.array[e+a]=t.array[r+a];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}});var _vector$6=new Vector3;function InterleavedBufferAttribute(e,t,r,a){this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===a}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(var t=0,r=this.data.count;t<r;t++)_vector$6.x=this.getX(t),_vector$6.y=this.getY(t),_vector$6.z=this.getZ(t),_vector$6.applyMatrix4(e),this.setXYZ(t,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this.data.array[e+3]=i,this}});function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};var _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2,_geometry;function Sprite(e){if(Object3D.call(this),this.type="Sprite",void 0===_geometry){_geometry=new BufferGeometry;var t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),r=new InterleavedBuffer(t,5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(r,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(r,2,3,!1))}this.geometry=_geometry,this.material=void 0===e?new SpriteMaterial:e,this.center=new Vector2(.5,.5)}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error("THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites."),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);var r=this.material.rotation,a,i;0!==r&&(i=Math.cos(r),a=Math.sin(r));var n=this.center;transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,n,_worldScale,a,i),transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,n,_worldScale,a,i),transformVertex(_vC$1.set(.5,.5,0),_mvPosition,n,_worldScale,a,i),_uvA$1.set(0,0),_uvB$1.set(1,0),_uvC$1.set(1,1);var o=e.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint);if(!(null===o&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,n,_worldScale,a,i),_uvB$1.set(0,1),o=e.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),null===o))){var s=e.ray.origin.distanceTo(_intersectPoint);s<e.near||s>e.far||t.push({distance:s,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this}});function transformVertex(e,t,r,a,i,n){_alignedPosition.subVectors(e,r).addScalar(.5).multiply(a),i===void 0?_rotatedPosition.copy(_alignedPosition):(_rotatedPosition.x=n*_alignedPosition.x-i*_alignedPosition.y,_rotatedPosition.y=i*_alignedPosition.x+n*_alignedPosition.y),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}var _v1$4=new Vector3,_v2$2=new Vector3;function LOD(){Object3D.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(e){Object3D.prototype.copy.call(this,e,!1);for(var t=e.levels,r=0,a=t.length,n;r<a;r++)n=t[r],this.addLevel(n.object.clone(),n.distance);return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=this.levels,a=0;a<r.length&&!(t<r[a].distance);a++);return r.splice(a,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){var t=this.levels;if(0<t.length){for(var r=1,a=t.length;r<a&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function(e,t){var r=this.levels;if(0<r.length){_v1$4.setFromMatrixPosition(this.matrixWorld);var a=e.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(a).raycast(e,t)}},update:function(e){var t=this.levels;if(1<t.length){_v1$4.setFromMatrixPosition(e.matrixWorld),_v2$2.setFromMatrixPosition(this.matrixWorld);var r=_v1$4.distanceTo(_v2$2)/e.zoom;t[0].object.visible=!0;for(var a=1,n=t.length;a<n&&r>=t[a].distance;a++)t[a-1].object.visible=!1,t[a].object.visible=!0;for(this._currentLevel=a-1;a<n;a++)t[a].object.visible=!1}},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];for(var r=this.levels,a=0,n=r.length,o;a<n;a++)o=r[a],t.object.levels.push({object:o.object.uuid,distance:o.distance});return t}});function SkinnedMesh(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var e=new Vector4,t=this.geometry.attributes.skinWeight,r=0,a=t.count;r<a;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);var n=1/e.manhattanLength();n==1/0?e.set(1,0,0,0):e.multiplyScalar(n),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;function Skeleton(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var r=0,a=this.bones.length;r<a;r++)this.boneInverses.push(new Matrix4)}}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length,r;e<t;e++)r=new Matrix4,this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)},pose:function(){var e,t,r;for(t=0,r=this.bones.length;t<r;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,r=this.bones.length;t<r;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){for(var e=this.bones,t=this.boneInverses,r=this.boneMatrices,a=this.boneTexture,n=0,o=e.length,s;n<o;n++)s=e[n]?e[n].matrixWorld:_identityMatrix,_offsetMatrix.multiplyMatrices(s,t[n]),_offsetMatrix.toArray(r,16*n);a!==void 0&&(a.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=0,r=this.bones.length,a;t<r;t++)if(a=this.bones[t],a.name===e)return a},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function Bone(){Object3D.call(this),this.type="Bone"}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0});var _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;function InstancedMesh(e,t,r){Mesh.call(this,e,t),this.instanceMatrix=new BufferAttribute(new Float32Array(16*r),16),this.count=r,this.frustumCulled=!1}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){var r=this.matrixWorld,a=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(var i=0;i<a;i++)this.getMatrixAt(i,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(r,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects),0<_instanceIntersects.length&&(_instanceIntersects[0].instanceId=i,_instanceIntersects[0].object=this,t.push(_instanceIntersects[0]),_instanceIntersects.length=0)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}});function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this};var _start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;function Line(e,t,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=e===void 0?new BufferGeometry:e,this.material=t===void 0?new LineBasicMaterial:t}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(null===e.index){for(var t=e.attributes.position,r=[0],a=1,n=t.count;a<n;a++)_start.fromBufferAttribute(t,a-1),_end.fromBufferAttribute(t,a),r[a]=r[a-1],r[a]+=_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry){var o=e.vertices,r=e.lineDistances;r[0]=0;for(var a=1,n=o.length;a<n;a++)r[a]=r[a-1],r[a]+=o[a-1].distanceTo(o[a])}return this},raycast:function(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$2.copy(r.boundingSphere),_sphere$2.applyMatrix4(n),_sphere$2.radius+=o,!1!==e.ray.intersectsSphere(_sphere$2)){_inverseMatrix$1.getInverse(n),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),d=s*s,p=new Vector3,c=new Vector3,u=new Vector3,m=new Vector3,g=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){var f=r.index,h=r.attributes,y=h.position.array;if(null!==f)for(var x=f.array,v=0,_=x.length-1;v<_;v+=g){var M=x[v],a=x[v+1];p.fromArray(y,3*M),c.fromArray(y,3*a);var b=_ray$1.distanceSqToSegment(p,c,m,u);if(!(b>d)){m.applyMatrix4(this.matrixWorld);var S=e.ray.origin.distanceTo(m);S<e.near||S>e.far||t.push({distance:S,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(var v=0,_=y.length/3-1;v<_;v+=g){p.fromArray(y,3*v),c.fromArray(y,3*v+3);var b=_ray$1.distanceSqToSegment(p,c,m,u);if(!(b>d)){m.applyMatrix4(this.matrixWorld);var S=e.ray.origin.distanceTo(m);S<e.near||S>e.far||t.push({distance:S,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}else if(r.isGeometry)for(var E=r.vertices,T=E.length,v=0,b;v<T-1;v+=g)if(b=_ray$1.distanceSqToSegment(E[v],E[v+1],m,u),!(b>d)){m.applyMatrix4(this.matrixWorld);var S=e.ray.origin.distanceTo(m);S<e.near||S>e.far||t.push({distance:S,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var _start$1=new Vector3,_end$1=new Vector3;function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(null===e.index){for(var t=e.attributes.position,r=[],a=0,n=t.count;a<n;a+=2)_start$1.fromBufferAttribute(t,a),_end$1.fromBufferAttribute(t,a+1),r[a]=0==a?0:r[a-1],r[a+1]=r[a]+_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry)for(var o=e.vertices,r=e.lineDistances,a=0,n=o.length;a<n;a+=2)_start$1.copy(o[a]),_end$1.copy(o[a+1]),r[a]=0==a?0:r[a-1],r[a+1]=r[a]+_start$1.distanceTo(_end$1);return this}});function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0});function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};var _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;function Points(e,t){Object3D.call(this),this.type="Points",this.geometry=e===void 0?new BufferGeometry:e,this.material=t===void 0?new PointsMaterial:t,this.updateMorphTargets()}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,raycast:function(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$3.copy(r.boundingSphere),_sphere$3.applyMatrix4(n),_sphere$3.radius+=o,!1!==e.ray.intersectsSphere(_sphere$3)){_inverseMatrix$2.getInverse(n),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2);var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),d=s*s;if(r.isBufferGeometry){var p=r.index,c=r.attributes,u=c.position.array;if(null!==p)for(var m=p.array,g=0,f=m.length,h;g<f;g++)h=m[g],_position$1.fromArray(u,3*h),testPoint(_position$1,h,d,n,e,t,this);else for(var g=0,y=u.length/3;g<y;g++)_position$1.fromArray(u,3*g),testPoint(_position$1,g,d,n,e,t,this)}else for(var x=r.vertices,g=0,y=x.length;g<y;g++)testPoint(x[g],g,d,n,e,t,this)}},updateMorphTargets:function(){var e=this.geometry,t,r,a;if(e.isBufferGeometry){var i=e.morphAttributes,n=Object.keys(i);if(0<n.length){var o=i[n[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},(t=0,r=o.length);t<r;t++)a=o[t].name||t+"",this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}else{var s=e.morphTargets;s!==void 0&&0<s.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function testPoint(e,t,r,a,i,n,o){var s=_ray$2.distanceSqToPoint(e);if(s<r){var l=new Vector3;_ray$2.closestPointToPoint(e,l),l.applyMatrix4(a);var d=i.ray.origin.distanceTo(l);if(d<i.near||d>i.far)return;n.push({distance:d,distanceToRay:Math.sqrt(s),point:l,index:t,face:null,object:o})}}function VideoTexture(e,t,r,a,i,n,o,s,l){Texture.call(this,e,t,r,a,i,n,o,s,l),this.format=o===void 0?RGBFormat:o,this.minFilter=n===void 0?LinearFilter:n,this.magFilter=i===void 0?LinearFilter:i,this.generateMipmaps=!1}VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function CompressedTexture(e,t,r,a,i,n,o,s,l,d,p,c){Texture.call(this,null,n,o,s,l,d,a,i,p,c),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0;function CanvasTexture(e,t,r,a,i,n,o,s,l){Texture.call(this,e,t,r,a,i,n,o,s,l),this.needsUpdate=!0}CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,CanvasTexture.prototype.isCanvasTexture=!0;function DepthTexture(e,t,r,a,i,n,o,s,l,d){if(d=void 0===d?DepthFormat:d,d!==DepthFormat&&d!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&d===DepthFormat&&(r=UnsignedShortType),void 0===r&&d===DepthStencilFormat&&(r=UnsignedInt248Type),Texture.call(this,null,a,i,n,o,s,d,r,l),this.image={width:e,height:t},this.magFilter=void 0===o?NearestFilter:o,this.minFilter=void 0===s?NearestFilter:s,this.flipY=!1,this.generateMipmaps=!1}DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0;function WireframeGeometry(t){BufferGeometry.call(this),this.type="WireframeGeometry";var r=[],a=[0,0],n={},s=["a","b","c"],d,p,c,u,m,g,f,h,y,x;if(t&&t.isGeometry){var v=t.faces;for(d=0,c=v.length;d<c;d++){var _=v[d];for(p=0;3>p;p++)f=_[s[p]],h=_[s[(p+1)%3]],a[0]=Math.min(f,h),a[1]=Math.max(f,h),y=a[0]+","+a[1],void 0===n[y]&&(n[y]={index1:a[0],index2:a[1]})}for(y in n)g=n[y],x=t.vertices[g.index1],r.push(x.x,x.y,x.z),x=t.vertices[g.index2],r.push(x.x,x.y,x.z)}else if(t&&t.isBufferGeometry){var b,M,S,E,T,w,L,A;if(x=new Vector3,null!==t.index){for(b=t.attributes.position,M=t.index,S=t.groups,0===S.length&&(S=[{start:0,count:M.count,materialIndex:0}]),(u=0,m=S.length);u<m;++u)for(E=S[u],T=E.start,w=E.count,(d=T,c=T+w);d<c;d+=3)for(p=0;3>p;p++)f=M.getX(d+p),h=M.getX(d+(p+1)%3),a[0]=Math.min(f,h),a[1]=Math.max(f,h),y=a[0]+","+a[1],void 0===n[y]&&(n[y]={index1:a[0],index2:a[1]});for(y in n)g=n[y],x.fromBufferAttribute(b,g.index1),r.push(x.x,x.y,x.z),x.fromBufferAttribute(b,g.index2),r.push(x.x,x.y,x.z)}else for(b=t.attributes.position,d=0,c=b.count/3;d<c;d++)for(p=0;3>p;p++)L=3*d+p,x.fromBufferAttribute(b,L),r.push(x.x,x.y,x.z),A=3*d+(p+1)%3,x.fromBufferAttribute(b,A),r.push(x.x,x.y,x.z)}this.setAttribute("position",new Float32BufferAttribute(r,3))}WireframeGeometry.prototype=Object.create(BufferGeometry.prototype),WireframeGeometry.prototype.constructor=WireframeGeometry;function ParametricGeometry(e,t,r){Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new ParametricBufferGeometry(e,t,r)),this.mergeVertices()}ParametricGeometry.prototype=Object.create(Geometry.prototype),ParametricGeometry.prototype.constructor=ParametricGeometry;function ParametricBufferGeometry(e,t,r){BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};var n=[],o=[],s=[],l=[],p=1e-5,m=new Vector3,g=new Vector3,f=new Vector3,h=new Vector3,y=new Vector3,x,_;3>e.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var M=t+1;for(x=0;x<=r;x++){var S=x/r;for(_=0;_<=t;_++){var v=_/t;e(v,S,g),o.push(g.x,g.y,g.z),0<=v-p?(e(v-p,S,f),h.subVectors(g,f)):(e(v+p,S,f),h.subVectors(f,g)),0<=S-p?(e(v,S-p,f),y.subVectors(g,f)):(e(v,S+p,f),y.subVectors(f,g)),m.crossVectors(h,y).normalize(),s.push(m.x,m.y,m.z),l.push(v,S)}}for(x=0;x<r;x++)for(_=0;_<t;_++){var u=x*M+_,a=x*M+_+1,b=(x+1)*M+_+1,c=(x+1)*M+_;n.push(u,a,c),n.push(a,b,c)}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry;function PolyhedronGeometry(e,t,r,a){Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,r,a)),this.mergeVertices()}PolyhedronGeometry.prototype=Object.create(Geometry.prototype),PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;function PolyhedronBufferGeometry(e,t,r,a){function i(e){for(var r=new Vector3,a=new Vector3,o=new Vector3,s=0;s<t.length;s+=3)p(t[s+0],r),p(t[s+1],a),p(t[s+2],o),n(r,a,o,e)}function n(e,t,r,a){var n=Math.pow(2,a),o=[],s,l;for(s=0;s<=n;s++){o[s]=[];var p=e.clone().lerp(r,s/n),c=t.clone().lerp(r,s/n),u=n-s;for(l=0;l<=u;l++)o[s][l]=0===l&&s===n?p:p.clone().lerp(c,l/u)}for(s=0;s<n;s++)for(l=0;l<2*(n-s)-1;l++){var m=Math.floor(l/2);0==l%2?(d(o[s][m+1]),d(o[s+1][m]),d(o[s][m])):(d(o[s][m+1]),d(o[s+1][m+1]),d(o[s+1][m]))}}function o(e){for(var t=new Vector3,r=0;r<f.length;r+=3)t.x=f[r+0],t.y=f[r+1],t.z=f[r+2],t.normalize().multiplyScalar(e),f[r+0]=t.x,f[r+1]=t.y,f[r+2]=t.z}function s(){for(var e=new Vector3,t=0;t<f.length;t+=3){e.x=f[t+0],e.y=f[t+1],e.z=f[t+2];var r=m(e)/2/Math.PI+.5,a=g(e)/Math.PI+.5;h.push(r,1-a)}c(),l()}function l(){for(var e=0;e<h.length;e+=6){var t=h[e+0],r=h[e+2],a=h[e+4],n=Math.max(t,r,a),o=Math.min(t,r,a);.9<n&&.1>o&&(.2>t&&(h[e+0]+=1),.2>r&&(h[e+2]+=1),.2>a&&(h[e+4]+=1))}}function d(e){f.push(e.x,e.y,e.z)}function p(t,r){var a=3*t;r.x=e[a+0],r.y=e[a+1],r.z=e[a+2]}function c(){for(var e=new Vector3,t=new Vector3,r=new Vector3,a=new Vector3,n=new Vector2,o=new Vector2,s=new Vector2,l=0,d=0;l<f.length;l+=9,d+=6){e.set(f[l+0],f[l+1],f[l+2]),t.set(f[l+3],f[l+4],f[l+5]),r.set(f[l+6],f[l+7],f[l+8]),n.set(h[d+0],h[d+1]),o.set(h[d+2],h[d+3]),s.set(h[d+4],h[d+5]),a.copy(e).add(t).add(r).divideScalar(3);var p=m(a);u(n,d+0,e,p),u(o,d+2,t,p),u(s,d+4,r,p)}}function u(e,t,r,a){0>a&&1===e.x&&(h[t]=e.x-1),0===r.x&&0===r.z&&(h[t]=a/2/Math.PI+.5)}function m(e){return Math.atan2(e.z,-e.x)}function g(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}BufferGeometry.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},r=r||1,a=a||0;var f=[],h=[];i(a),o(r),s(),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(f.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(h,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;function TetrahedronGeometry(e,t){Geometry.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}TetrahedronGeometry.prototype=Object.create(Geometry.prototype),TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;function TetrahedronBufferGeometry(e,t){PolyhedronBufferGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;function OctahedronGeometry(e,t){Geometry.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}OctahedronGeometry.prototype=Object.create(Geometry.prototype),OctahedronGeometry.prototype.constructor=OctahedronGeometry;function OctahedronBufferGeometry(e,t){PolyhedronBufferGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;function IcosahedronGeometry(e,t){Geometry.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}IcosahedronGeometry.prototype=Object.create(Geometry.prototype),IcosahedronGeometry.prototype.constructor=IcosahedronGeometry;function IcosahedronBufferGeometry(e,r){var a=(1+Math.sqrt(5))/2;PolyhedronBufferGeometry.call(this,[-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,r),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:r}}IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;function DodecahedronGeometry(e,t){Geometry.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}DodecahedronGeometry.prototype=Object.create(Geometry.prototype),DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;function DodecahedronBufferGeometry(e,a){var i=(1+Math.sqrt(5))/2,t=1/i;PolyhedronBufferGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-t,-i,0,-t,i,0,t,-i,0,t,i,-t,-i,0,-t,i,0,t,-i,0,t,i,0,-i,0,-t,i,0,-t,-i,0,t,i,0,t],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,a),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:a}}DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;function TubeGeometry(e,t,r,a,i,n){Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:a,closed:i},n!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new TubeBufferGeometry(e,t,r,a,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}TubeGeometry.prototype=Object.create(Geometry.prototype),TubeGeometry.prototype.constructor=TubeGeometry;function TubeBufferGeometry(e,t,r,n,o){function s(){for(v=0;v<t;v++)l(v);l(!1===o?t:0),p(),d()}function l(o){a=e.getPointAt(o/t,a);var i=c.normals[o],s=c.binormals[o];for(_=0;_<=n;_++){var l=2*(_/n*Math.PI),d=Math.sin(l),p=-Math.cos(l);m.x=p*i.x+d*s.x,m.y=p*i.y+d*s.y,m.z=p*i.z+d*s.z,m.normalize(),h.push(m.x,m.y,m.z),u.x=a.x+r*m.x,u.y=a.y+r*m.y,u.z=a.z+r*m.z,f.push(u.x,u.y,u.z)}}function d(){for(_=1;_<=t;_++)for(v=1;v<=n;v++){var e=(n+1)*(_-1)+(v-1),r=(n+1)*_+(v-1),a=(n+1)*_+v,i=(n+1)*(_-1)+v;x.push(e,r,i),x.push(r,a,i)}}function p(){for(v=0;v<=t;v++)for(_=0;_<=n;_++)g.x=v/t,g.y=_/n,y.push(g.x,g.y)}BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:o},t=t||64,r=r||1,n=n||8,o=o||!1;var c=e.computeFrenetFrames(t,o);this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;var u=new Vector3,m=new Vector3,g=new Vector2,a=new Vector3,f=[],h=[],y=[],x=[],v,_;s(),this.setIndex(x),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(y,2))}TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TubeBufferGeometry.prototype.constructor=TubeBufferGeometry,TubeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e};function TorusKnotGeometry(e,t,r,a,i,n,o){Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:a,p:i,q:n},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,r,a,i,n)),this.mergeVertices()}TorusKnotGeometry.prototype=Object.create(Geometry.prototype),TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;function TorusKnotBufferGeometry(e,t,r,n,o,s){function l(e,t,r,a,i){var n=Math.cos(e),o=Math.sin(e),s=r/t*e,l=Math.cos(s);i.x=.5*(a*(2+l))*n,i.y=.5*(a*(2+l)*o),i.z=.5*(a*Math.sin(s))}BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:o,q:s},e=e||1,t=t||.4,r=Math.floor(r)||64,n=Math.floor(n)||8,o=o||2,s=s||3;var m=[],g=[],f=[],h=[],y=new Vector3,x=new Vector3,_=new Vector3,M=new Vector3,S=new Vector3,E=new Vector3,T=new Vector3,w,L;for(w=0;w<=r;++w){var A=2*(w/r*o*Math.PI);for(l(A,o,s,e,_),l(A+.01,o,s,e,M),E.subVectors(M,_),T.addVectors(M,_),S.crossVectors(E,T),T.crossVectors(S,E),S.normalize(),T.normalize(),L=0;L<=n;++L){var u=2*(L/n*Math.PI),v=-t*Math.cos(u),R=t*Math.sin(u);y.x=_.x+(v*T.x+R*S.x),y.y=_.y+(v*T.y+R*S.y),y.z=_.z+(v*T.z+R*S.z),g.push(y.x,y.y,y.z),x.subVectors(y,_).normalize(),f.push(x.x,x.y,x.z),h.push(w/r),h.push(L/n)}}for(L=1;L<=r;L++)for(w=1;w<=n;w++){var P=(n+1)*(L-1)+(w-1),a=(n+1)*L+(w-1),b=(n+1)*L+w,c=(n+1)*(L-1)+w;m.push(P,a,c),m.push(a,b,c)}this.setIndex(m),this.setAttribute("position",new Float32BufferAttribute(g,3)),this.setAttribute("normal",new Float32BufferAttribute(f,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;function TorusGeometry(e,t,r,a,i){Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:a,arc:i},this.fromBufferGeometry(new TorusBufferGeometry(e,t,r,a,i)),this.mergeVertices()}TorusGeometry.prototype=Object.create(Geometry.prototype),TorusGeometry.prototype.constructor=TorusGeometry;function TorusBufferGeometry(e,t,r,n,o){BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:o},e=e||1,t=t||.4,r=Math.floor(r)||8,n=Math.floor(n)||6,o=o||2*Math.PI;var s=[],l=[],p=[],m=[],g=new Vector3,f=new Vector3,h=new Vector3,y,x;for(y=0;y<=r;y++)for(x=0;x<=n;x++){var _=x/n*o,u=2*(y/r*Math.PI);f.x=(e+t*Math.cos(u))*Math.cos(_),f.y=(e+t*Math.cos(u))*Math.sin(_),f.z=t*Math.sin(u),l.push(f.x,f.y,f.z),g.x=e*Math.cos(_),g.y=e*Math.sin(_),h.subVectors(f,g).normalize(),p.push(h.x,h.y,h.z),m.push(x/n),m.push(y/r)}for(y=1;y<=r;y++)for(x=1;x<=n;x++){var v=(n+1)*y+x-1,a=(n+1)*(y-1)+x-1,b=(n+1)*(y-1)+x,c=(n+1)*y+x;s.push(v,a,c),s.push(a,b,c)}this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(p,3)),this.setAttribute("uv",new Float32BufferAttribute(m,2))}TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;var Earcut={triangulate:function(e,t,r){r=r||2;var a=t&&t.length,n=a?t[0]*r:e.length,o=linkedList(e,0,n,r,!0),s=[];if(!o||o.next===o.prev)return s;var l,d,p,c,u,m,g;if(a&&(o=eliminateHoles(e,t,o,r)),e.length>80*r){l=p=e[0],d=c=e[1];for(var f=r;f<n;f+=r)u=e[f],m=e[f+1],u<l&&(l=u),m<d&&(d=m),u>p&&(p=u),m>c&&(c=m);g=Math.max(p-l,c-d),g=0===g?0:1/g}return earcutLinked(o,s,r,l,d,g),s}};function linkedList(e,t,r,a,n){var o,s;if(n===0<signedArea(e,t,r,a))for(o=t;o<r;o+=a)s=insertNode(o,e[o],e[o+1],s);else for(o=r-a;o>=t;o-=a)s=insertNode(o,e[o],e[o+1],s);return s&&equals(s,s.next)&&(removeNode(s),s=s.next),s}function filterPoints(e,t){if(!e)return e;t||(t=e);var r=e,a;do if(a=!1,!r.steiner&&(equals(r,r.next)||0===area(r.prev,r,r.next))){if(removeNode(r),r=t=r.prev,r===r.next)break;a=!0}else r=r.next;while(a||r!==t);return t}function earcutLinked(e,t,r,a,i,n,o){if(e){!o&&n&&indexCurve(e,a,i,n);for(var s=e,l,d;e.prev!==e.next;){if(l=e.prev,d=e.next,n?isEarHashed(e,a,i,n):isEar(e)){t.push(l.i/r),t.push(e.i/r),t.push(d.i/r),removeNode(e),e=d.next,s=d.next;continue}if(e=d,e===s){o?1===o?(e=cureLocalIntersections(e,t,r),earcutLinked(e,t,r,a,i,n,2)):2==o&&splitEarcut(e,t,r,a,i,n):earcutLinked(filterPoints(e),t,r,a,i,n,1);break}}}}function isEar(e){var t=e.prev,r=e,a=e.next;if(0<=area(t,r,a))return!1;for(var i=e.next.next;i!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,a.x,a.y,i.x,i.y)&&0<=area(i.prev,i,i.next))return!1;i=i.next}return!0}function isEarHashed(e,t,r,i){var o=e.prev,a=e,s=e.next;if(0<=area(o,a,s))return!1;for(var l=o.x<a.x?o.x<s.x?o.x:s.x:a.x<s.x?a.x:s.x,d=o.y<a.y?o.y<s.y?o.y:s.y:a.y<s.y?a.y:s.y,c=o.x>a.x?o.x>s.x?o.x:s.x:a.x>s.x?a.x:s.x,u=o.y>a.y?o.y>s.y?o.y:s.y:a.y>s.y?a.y:s.y,m=zOrder(l,d,t,r,i),g=zOrder(c,u,t,r,i),f=e.prevZ,h=e.nextZ;f&&f.z>=m&&h&&h.z<=g;){if(f!==e.prev&&f!==e.next&&pointInTriangle(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=area(f.prev,f,f.next))return!1;if(f=f.prevZ,h!==e.prev&&h!==e.next&&pointInTriangle(o.x,o.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=area(h.prev,h,h.next))return!1;h=h.nextZ}for(;f&&f.z>=m;){if(f!==e.prev&&f!==e.next&&pointInTriangle(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=area(f.prev,f,f.next))return!1;f=f.prevZ}for(;h&&h.z<=g;){if(h!==e.prev&&h!==e.next&&pointInTriangle(o.x,o.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=area(h.prev,h,h.next))return!1;h=h.nextZ}return!0}function cureLocalIntersections(e,t,r){var i=e;do{var n=i.prev,a=i.next.next;!equals(n,a)&&intersects(n,i,i.next,a)&&locallyInside(n,a)&&locallyInside(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),removeNode(i),removeNode(i.next),i=e=a),i=i.next}while(i!==e);return i}function splitEarcut(e,t,r,i,n,o){var s=e;do{for(var l=s.next.next;l!==s.prev;){if(s.i!==l.i&&isValidDiagonal(s,l)){var d=splitPolygon(s,l);return s=filterPoints(s,s.next),d=filterPoints(d,d.next),earcutLinked(s,t,r,i,n,o),void earcutLinked(d,t,r,i,n,o)}l=l.next}s=s.next}while(s!==e)}function eliminateHoles(e,t,r,a){var n=[],o,s,l,d,p;for(o=0,s=t.length;o<s;o++)l=t[o]*a,d=o<s-1?t[o+1]*a:e.length,p=linkedList(e,l,d,a,!1),p===p.next&&(p.steiner=!0),n.push(getLeftmost(p));for(n.sort(compareX),o=0;o<n.length;o++)eliminateHole(n[o],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t),t){var r=splitPolygon(t,e);filterPoints(r,r.next)}}function findHoleBridge(e,t){var r=t,a=e.x,i=e.y,n=-Infinity,o;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=a&&s>n){if(n=s,s===a){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(a===n)return o.prev;var l=o,d=o.x,c=o.y,u=1/0,g;for(r=o.next;r!==l;)a>=r.x&&r.x>=d&&a!==r.x&&pointInTriangle(i<c?a:n,i,d,c,i<c?n:a,i,r.x,r.y)&&(g=Math.abs(i-r.y)/(a-r.x),(g<u||g===u&&r.x>o.x)&&locallyInside(r,e)&&(o=r,u=g)),r=r.next;return o}function indexCurve(e,t,r,a){var i=e;do null===i.z&&(i.z=zOrder(i.x,i.y,t,r,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,sortLinked(i)}function sortLinked(t){var r=1,a,n,o,s,l,d,c,u;do{for(n=t,t=null,l=null,d=0;n;){for(d++,o=n,c=0,a=0;a<r&&(c++,o=o.nextZ,!!o);a++);for(u=r;0<c||0<u&&o;)0!==c&&(0===u||!o||n.z<=o.z)?(s=n,n=n.nextZ,c--):(s=o,o=o.nextZ,u--),l?l.nextZ=s:t=s,s.prevZ=l,l=s;n=o}l.nextZ=null,r*=2}while(1<d);return t}function zOrder(e,t,r,a,i){return e=32767*(e-r)*i,t=32767*(t-a)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function getLeftmost(e){var t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}function pointInTriangle(e,t,r,a,i,n,o,s){return 0<=(i-o)*(t-s)-(e-o)*(n-s)&&0<=(e-o)*(a-s)-(r-o)*(t-s)&&0<=(r-o)*(n-s)-(i-o)*(a-s)}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)}function area(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,a){return!!(equals(e,r)&&equals(t,a)||equals(e,a)&&equals(r,t))||0<area(e,t,r)!=0<area(e,t,a)&&0<area(r,a,e)!=0<area(r,a,t)}function intersectsPolygon(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function locallyInside(e,t){return 0>area(e.prev,e,e.next)?0<=area(e,t,e.next)&&0<=area(e,e.prev,t):0>area(e,t,e.prev)||0>area(e,e.next,t)}function middleInside(e,t){var r=e,a=!1,i=(e.x+t.x)/2,n=(e.y+t.y)/2;do r.y>n!=r.next.y>n&&r.next.y!==r.y&&i<(r.next.x-r.x)*(n-r.y)/(r.next.y-r.y)+r.x&&(a=!a),r=r.next;while(r!==e);return a}function splitPolygon(e,t){var r=new Node(e.i,e.x,e.y),a=new Node(t.i,t.x,t.y),i=e.next,n=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,a.next=r,r.prev=a,n.next=a,a.prev=n,a}function insertNode(e,t,r,a){var i=new Node(e,t,r);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,r,a){for(var n=0,o=t,s=r-a;o<r;o+=a)n+=(e[s]-e[o])*(e[o+1]+e[s+1]),s=o;return n}var ShapeUtils={area:function(e){for(var t=e.length,r=0,i=t-1,n=0;n<t;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return .5*r},isClockWise:function(e){return 0>ShapeUtils.area(e)},triangulateShape:function(e,t){var r=[],a=[],n=[];removeDupEndPts(e),addContour(r,e);var o=e.length;t.forEach(removeDupEndPts);for(var s=0;s<t.length;s++)a.push(o),o+=t[s].length,addContour(r,t[s]);for(var l=Earcut.triangulate(r,a),s=0;s<l.length;s+=3)n.push(l.slice(s,s+3));return n}};function removeDupEndPts(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(var r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}function ExtrudeGeometry(e,t){Geometry.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}ExtrudeGeometry.prototype=Object.create(Geometry.prototype),ExtrudeGeometry.prototype.constructor=ExtrudeGeometry,ExtrudeGeometry.prototype.toJSON=function(){var e=Geometry.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return toJSON(t,r,e)};function ExtrudeBufferGeometry(e,r){function a(e){function a(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}function l(e,t,r){var a=e.x-t.x,i=e.y-t.y,n=r.x-e.x,o=r.y-e.y,s=a*a+i*i,l,d,p;if(Math.abs(a*o-i*n)>Number.EPSILON){var c=Math.sqrt(s),u=Math.sqrt(n*n+o*o),m=t.x-i/c,g=t.y+a/c,f=r.x-o/u,h=r.y+n/u,y=((f-m)*o-(h-g)*n)/(a*o-i*n);l=m+a*y-e.x,d=g+i*y-e.y;var x=l*l+d*d;if(2>=x)return new Vector2(l,d);p=Math.sqrt(x/2)}else{var v=!1;a>Number.EPSILON?n>Number.EPSILON&&(v=!0):a<-Number.EPSILON?n<-Number.EPSILON&&(v=!0):Math.sign(i)===Math.sign(o)&&(v=!0),v?(l=-i,d=a,p=Math.sqrt(s)):(l=a,d=i,p=Math.sqrt(s/2))}return new Vector2(l/p,d/p)}function d(){var e=o.length/3;if(E){var t=0,r=Y*t;for(Q=0;Q<Z;Q++)oe=q[Q],m(oe[2]+r,oe[1]+r,oe[0]+r);for(t=M+2*A,r=Y*t,Q=0;Q<Z;Q++)oe=q[Q],m(oe[0]+r,oe[1]+r,oe[2]+r)}else{for(Q=0;Q<Z;Q++)oe=q[Q],m(oe[2],oe[1],oe[0]);for(Q=0;Q<Z;Q++)oe=q[Q],m(oe[0]+Y*M,oe[1]+Y*M,oe[2]+Y*M)}n.addGroup(e,o.length/3-e,0)}function p(){var e=o.length/3,t=0;for(c(X,t),t+=X.length,(W=0,x=O.length);W<x;W++)V=O[W],c(V,t),t+=V.length;n.addGroup(e,o.length/3-e,1)}function c(e,t){var r,i;for(Q=e.length;0<=--Q;){r=Q,i=Q-1,0>i&&(i=e.length-1);var n=0,o=M+2*A;for(n=0;n<o;n++){var l=Y*n,p=Y*(n+1),u=t+r+l,a=t+i+l,m=t+i+p,c=t+r+p;g(u,a,m,c)}}}function u(e,t,r){v.push(e),v.push(t),v.push(r)}function m(e,t,r){f(e),f(t),f(r);var a=o.length/3,i=P.generateTopUV(n,o,a-3,a-2,a-1);y(i[0]),y(i[1]),y(i[2])}function g(e,t,r,a){f(e),f(t),f(a),f(t),f(r),f(a);var i=o.length/3,s=P.generateSideWallUV(n,o,i-6,i-3,i-2,i-1);y(s[0]),y(s[1]),y(s[3]),y(s[1]),y(s[2]),y(s[3])}function f(e){o.push(v[3*e+0]),o.push(v[3*e+1]),o.push(v[3*e+2])}function y(e){s.push(e.x),s.push(e.y)}var v=[],_=r.curveSegments===void 0?12:r.curveSegments,M=r.steps===void 0?1:r.steps,S=r.depth===void 0?100:r.depth,E=!(r.bevelEnabled!==void 0)||r.bevelEnabled,T=r.bevelThickness===void 0?6:r.bevelThickness,w=r.bevelSize===void 0?T-2:r.bevelSize,L=r.bevelOffset===void 0?0:r.bevelOffset,A=r.bevelSegments===void 0?3:r.bevelSegments,R=r.extrudePath,P=r.UVGenerator===void 0?WorldUVGenerator:r.UVGenerator;r.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),S=r.amount);var C=!1,I,D,N,U,B;R&&(I=R.getSpacedPoints(M),C=!0,E=!1,D=R.computeFrenetFrames(M,!1),N=new Vector3,U=new Vector3,B=new Vector3),E||(A=0,T=0,w=0,L=0);var H=e.extractPoints(_),F=H.shape,O=H.holes,G=!ShapeUtils.isClockWise(F),V,W,x;if(G)for(F=F.reverse(),W=0,x=O.length;W<x;W++)V=O[W],ShapeUtils.isClockWise(V)&&(O[W]=V.reverse());var q=ShapeUtils.triangulateShape(F,O),X=F;for(W=0,x=O.length;W<x;W++)V=O[W],F=F.concat(V);for(var Y=F.length,Z=q.length,J=[],Q=0,K=X.length,$=K-1,ee=Q+1,te,re,ae,ie,ne,oe;Q<K;Q++,$++,ee++)$===K&&($=0),ee===K&&(ee=0),J[Q]=l(X[Q],X[$],X[ee]);var se=[],le=J.concat(),de;for(W=0,x=O.length;W<x;W++){for(V=O[W],de=[],(Q=0,K=V.length,$=K-1,ee=Q+1);Q<K;Q++,$++,ee++)$===K&&($=0),ee===K&&(ee=0),de[Q]=l(V[Q],V[$],V[ee]);se.push(de),le=le.concat(de)}for(te=0;te<A;te++){for(ae=te/A,ie=T*Math.cos(ae*Math.PI/2),re=w*Math.sin(ae*Math.PI/2)+L,(Q=0,K=X.length);Q<K;Q++)ne=a(X[Q],J[Q],re),u(ne.x,ne.y,-ie);for(W=0,x=O.length;W<x;W++)for(V=O[W],de=se[W],(Q=0,K=V.length);Q<K;Q++)ne=a(V[Q],de[Q],re),u(ne.x,ne.y,-ie)}for(re=w+L,Q=0;Q<Y;Q++)ne=E?a(F[Q],le[Q],re):F[Q],C?(U.copy(D.normals[0]).multiplyScalar(ne.x),N.copy(D.binormals[0]).multiplyScalar(ne.y),B.copy(I[0]).add(U).add(N),u(B.x,B.y,B.z)):u(ne.x,ne.y,0);var pe;for(pe=1;pe<=M;pe++)for(Q=0;Q<Y;Q++)ne=E?a(F[Q],le[Q],re):F[Q],C?(U.copy(D.normals[pe]).multiplyScalar(ne.x),N.copy(D.binormals[pe]).multiplyScalar(ne.y),B.copy(I[pe]).add(U).add(N),u(B.x,B.y,B.z)):u(ne.x,ne.y,S/M*pe);for(te=A-1;0<=te;te--){for(ae=te/A,ie=T*Math.cos(ae*Math.PI/2),re=w*Math.sin(ae*Math.PI/2)+L,(Q=0,K=X.length);Q<K;Q++)ne=a(X[Q],J[Q],re),u(ne.x,ne.y,S+ie);for(W=0,x=O.length;W<x;W++)for(V=O[W],de=se[W],(Q=0,K=V.length);Q<K;Q++)ne=a(V[Q],de[Q],re),C?u(ne.x,ne.y+I[M-1].y,I[M-1].x+ie):u(ne.x,ne.y,S+ie)}d(),p()}BufferGeometry.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:r},e=Array.isArray(e)?e:[e];for(var n=this,o=[],s=[],d=0,t=e.length,l;d<t;d++)l=e[d],a(l);this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(s,2)),this.computeVertexNormals()}ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry,ExtrudeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return toJSON(t,r,e)};var WorldUVGenerator={generateTopUV:function(e,t,r,a,i){var n=t[3*r],o=t[3*r+1],s=t[3*a],l=t[3*a+1],d=t[3*i],p=t[3*i+1];return[new Vector2(n,o),new Vector2(s,l),new Vector2(d,p)]},generateSideWallUV:function(e,t,r,a,i,n){var o=t[3*r],s=t[3*r+1],l=t[3*r+2],d=t[3*a],p=t[3*a+1],c=t[3*a+2],u=t[3*i],m=t[3*i+1],g=t[3*i+2],f=t[3*n],h=t[3*n+1],y=t[3*n+2];return .01>Math.abs(s-p)?[new Vector2(o,1-l),new Vector2(d,1-c),new Vector2(u,1-g),new Vector2(f,1-y)]:[new Vector2(s,1-l),new Vector2(p,1-c),new Vector2(m,1-g),new Vector2(h,1-y)]}};function toJSON(e,t,r){if(r.shapes=[],Array.isArray(e))for(var a=0,n=e.length,o;a<n;a++)o=e[a],r.shapes.push(o.uuid);else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}function TextGeometry(e,t){Geometry.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}TextGeometry.prototype=Object.create(Geometry.prototype),TextGeometry.prototype.constructor=TextGeometry;function TextBufferGeometry(e,t){t=t||{};var r=t.font;if(!(r&&r.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry;var a=r.generateShapes(e,t.size);t.depth=t.height===void 0?50:t.height,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),ExtrudeBufferGeometry.call(this,a,t),this.type="TextBufferGeometry"}TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype),TextBufferGeometry.prototype.constructor=TextBufferGeometry;function SphereGeometry(e,t,r,a,i,n,o){Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new SphereBufferGeometry(e,t,r,a,i,n,o)),this.mergeVertices()}SphereGeometry.prototype=Object.create(Geometry.prototype),SphereGeometry.prototype.constructor=SphereGeometry;function SphereBufferGeometry(e,t,r,i,n,o,s){BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:s},e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=i===void 0?0:i,n=n===void 0?2*Math.PI:n,o=o===void 0?0:o,s=s===void 0?Math.PI:s;var l=Math.min(o+s,Math.PI),p=0,m=[],g=new Vector3,f=new Vector3,h=[],y=[],x=[],_=[],M,S;for(S=0;S<=r;S++){var E=[],T=S/r,v=0;for(0==S&&0==o?v=.5/t:S==r&&l==Math.PI&&(v=-.5/t),M=0;M<=t;M++){var w=M/t;g.x=-e*Math.cos(i+w*n)*Math.sin(o+T*s),g.y=e*Math.cos(o+T*s),g.z=e*Math.sin(i+w*n)*Math.sin(o+T*s),y.push(g.x,g.y,g.z),f.copy(g).normalize(),x.push(f.x,f.y,f.z),_.push(w+v,1-T),E.push(p++)}m.push(E)}for(S=0;S<r;S++)for(M=0;M<t;M++){var u=m[S][M+1],a=m[S][M],b=m[S+1][M],c=m[S+1][M+1];(0!==S||0<o)&&h.push(u,a,c),(S!==r-1||l<Math.PI)&&h.push(a,b,c)}this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(y,3)),this.setAttribute("normal",new Float32BufferAttribute(x,3)),this.setAttribute("uv",new Float32BufferAttribute(_,2))}SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype),SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;function RingGeometry(e,t,r,a,i,n){Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new RingBufferGeometry(e,t,r,a,i,n)),this.mergeVertices()}RingGeometry.prototype=Object.create(Geometry.prototype),RingGeometry.prototype.constructor=RingGeometry;function RingBufferGeometry(e,t,r,n,o,s){BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:o,thetaLength:s},e=e||.5,t=t||1,o=o===void 0?0:o,s=s===void 0?2*Math.PI:s,r=r===void 0?8:Math.max(3,r),n=n===void 0?1:Math.max(1,n);var l=[],p=[],u=[],m=[],g=e,f=(t-e)/n,h=new Vector3,y=new Vector2,x,v,_;for(v=0;v<=n;v++){for(_=0;_<=r;_++)x=o+_/r*s,h.x=g*Math.cos(x),h.y=g*Math.sin(x),p.push(h.x,h.y,h.z),u.push(0,0,1),y.x=(h.x/t+1)/2,y.y=(h.y/t+1)/2,m.push(y.x,y.y);g+=f}for(v=0;v<n;v++){var M=v*(r+1);for(_=0;_<r;_++){x=_+M;var S=x,a=x+r+1,b=x+r+2,c=x+1;l.push(S,a,c),l.push(a,b,c)}}this.setIndex(l),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(u,3)),this.setAttribute("uv",new Float32BufferAttribute(m,2))}RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype),RingBufferGeometry.prototype.constructor=RingBufferGeometry;function LatheGeometry(e,t,r,a){Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:a},this.fromBufferGeometry(new LatheBufferGeometry(e,t,r,a)),this.mergeVertices()}LatheGeometry.prototype=Object.create(Geometry.prototype),LatheGeometry.prototype.constructor=LatheGeometry;function LatheBufferGeometry(e,t,r,o){BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:o},t=Math.floor(t)||12,r=r||0,o=o||2*Math.PI,o=MathUtils.clamp(o,0,2*Math.PI);var s=[],l=[],p=[],u=1/t,m=new Vector3,g=new Vector2,f,h,y;for(h=0;h<=t;h++){var x=r+h*u*o,v=Math.sin(x),_=Math.cos(x);for(y=0;y<=e.length-1;y++)m.x=e[y].x*v,m.y=e[y].y,m.z=e[y].x*_,l.push(m.x,m.y,m.z),g.x=h/t,g.y=y/(e.length-1),p.push(g.x,g.y)}for(h=0;h<t;h++)for(y=0;y<e.length-1;y++){f=y+h*e.length;var M=f,a=f+e.length,b=f+e.length+1,c=f+1;s.push(M,a,c),s.push(a,b,c)}if(this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(p,2)),this.computeVertexNormals(),o===2*Math.PI){var d=this.attributes.normal.array,S=new Vector3,E=new Vector3,T=new Vector3;for(f=3*(t*e.length),h=0,y=0;h<e.length;h++,y+=3)S.x=d[y+0],S.y=d[y+1],S.z=d[y+2],E.x=d[f+y+0],E.y=d[f+y+1],E.z=d[f+y+2],T.addVectors(S,E).normalize(),d[y+0]=d[f+y+0]=T.x,d[y+1]=d[f+y+1]=T.y,d[y+2]=d[f+y+2]=T.z}}LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype),LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;function ShapeGeometry(e,t){Geometry.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}ShapeGeometry.prototype=Object.create(Geometry.prototype),ShapeGeometry.prototype.constructor=ShapeGeometry,ShapeGeometry.prototype.toJSON=function(){var e=Geometry.prototype.toJSON.call(this),t=this.parameters.shapes;return toJSON$1(t,e)};function ShapeBufferGeometry(e,t){function r(e){var r=o.length/3,d=e.extractPoints(t),u=d.shape,m=d.holes,g,f,h;for(!1===ShapeUtils.isClockWise(u)&&(u=u.reverse()),g=0,f=m.length;g<f;g++)h=m[g],!0===ShapeUtils.isClockWise(h)&&(m[g]=h.reverse());var y=ShapeUtils.triangulateShape(u,m);for(g=0,f=m.length;g<f;g++)h=m[g],u=u.concat(h);for(g=0,f=u.length;g<f;g++){var x=u[g];o.push(x.x,x.y,0),s.push(0,0,1),l.push(x.x,x.y)}for(g=0,f=y.length;g<f;g++){var v=y[g],_=v[0]+r,a=v[1]+r,b=v[2]+r;n.push(_,a,b),p+=3}}BufferGeometry.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var n=[],o=[],s=[],l=[],d=0,p=0;if(!1===Array.isArray(e))r(e);else for(var c=0;c<e.length;c++)r(e[c]),this.addGroup(d,p,c),d+=p,p=0;this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry,ShapeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this),t=this.parameters.shapes;return toJSON$1(t,e)};function toJSON$1(e,t){if(t.shapes=[],Array.isArray(e))for(var r=0,a=e.length,n;r<a;r++)n=e[r],t.shapes.push(n.uuid);else t.shapes.push(e.uuid);return t}function EdgesGeometry(t,r){BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:r},r=r===void 0?1:r;var a=[],n=Math.cos(MathUtils.DEG2RAD*r),o=[0,0],s={},d=["a","b","c"],p,c,u,m;t.isBufferGeometry?(m=new Geometry,m.fromBufferGeometry(t)):m=t.clone(),m.mergeVertices(),m.computeFaceNormals();for(var g=m.vertices,f=m.faces,h=0,y=f.length,l;h<y;h++){l=f[h];for(var x=0;3>x;x++)p=l[d[x]],c=l[d[(x+1)%3]],o[0]=Math.min(p,c),o[1]=Math.max(p,c),u=o[0]+","+o[1],void 0===s[u]?s[u]={index1:o[0],index2:o[1],face1:h,face2:void 0}:s[u].face2=h}for(u in s){var v=s[u];if(v.face2===void 0||f[v.face1].normal.dot(f[v.face2].normal)<=n){var e=g[v.index1];a.push(e.x,e.y,e.z),e=g[v.index2],a.push(e.x,e.y,e.z)}}this.setAttribute("position",new Float32BufferAttribute(a,3))}EdgesGeometry.prototype=Object.create(BufferGeometry.prototype),EdgesGeometry.prototype.constructor=EdgesGeometry;function CylinderGeometry(e,t,r,a,i,n,o,s){Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,r,a,i,n,o,s)),this.mergeVertices()}CylinderGeometry.prototype=Object.create(Geometry.prototype),CylinderGeometry.prototype.constructor=CylinderGeometry;function CylinderBufferGeometry(e,t,r,n,o,s,l,d){function p(){var i=new Vector3,s=new Vector3,p=0,T=(t-e)/r,w,L;for(L=0;L<=o;L++){var A=[],R=L/o,v=R*(t-e)+e;for(w=0;w<=n;w++){var P=w/n,u=P*d+l,C=Math.sin(u),I=Math.cos(u);s.x=v*C,s.y=-R*r+S,s.z=v*I,f.push(s.x,s.y,s.z),i.set(C,T,I).normalize(),h.push(i.x,i.y,i.z),y.push(P,1-R),A.push(_++)}M.push(A)}for(w=0;w<n;w++)for(L=0;L<o;L++){var D=M[L][w],a=M[L+1][w],b=M[L+1][w+1],c=M[L][w+1];g.push(D,a,c),g.push(a,b,c),p+=6}m.addGroup(E,p,0),E+=p}function c(r){var a=new Vector2,o=new Vector3,s=0,p=!0===r?e:t,v=!0===r?1:-1,b,M,T;for(M=_,b=1;b<=n;b++)f.push(0,S*v,0),h.push(0,v,0),y.push(.5,.5),_++;for(T=_,b=0;b<=n;b++){var w=b/n,u=w*d+l,L=Math.cos(u),A=Math.sin(u);o.x=p*A,o.y=S*v,o.z=p*L,f.push(o.x,o.y,o.z),h.push(0,v,0),a.x=.5*L+.5,a.y=.5*A*v+.5,y.push(a.x,a.y),_++}for(b=0;b<n;b++){var R=M+b,c=T+b;!0===r?g.push(c,c+1,R):g.push(c+1,c,R),s+=3}m.addGroup(E,s,!0===r?1:2),E+=s}BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:o,openEnded:s,thetaStart:l,thetaLength:d};var m=this;e=e===void 0?1:e,t=t===void 0?1:t,r=r||1,n=Math.floor(n)||8,o=Math.floor(o)||1,s=s!==void 0&&s,l=l===void 0?0:l,d=d===void 0?2*Math.PI:d;var g=[],f=[],h=[],y=[],_=0,M=[],S=r/2,E=0;p(),!1===s&&(0<e&&c(!0),0<t&&c(!1)),this.setIndex(g),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(y,2))}CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;function ConeGeometry(e,t,r,a,i,n,o){CylinderGeometry.call(this,0,e,t,r,a,i,n,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}ConeGeometry.prototype=Object.create(CylinderGeometry.prototype),ConeGeometry.prototype.constructor=ConeGeometry;function ConeBufferGeometry(e,t,r,a,i,n,o){CylinderBufferGeometry.call(this,0,e,t,r,a,i,n,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype),ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;function CircleGeometry(e,t,r,a){Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new CircleBufferGeometry(e,t,r,a)),this.mergeVertices()}CircleGeometry.prototype=Object.create(Geometry.prototype),CircleGeometry.prototype.constructor=CircleGeometry;function CircleBufferGeometry(e,t,r,a){BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},e=e||1,t=t===void 0?8:Math.max(3,t),r=r===void 0?0:r,a=a===void 0?2*Math.PI:a;var n=[],o=[],l=[],d=[],p=new Vector3,c=new Vector2,u,m;for(o.push(0,0,0),l.push(0,0,1),d.push(.5,.5),(m=0,u=3);m<=t;m++,u+=3){var g=r+m/t*a;p.x=e*Math.cos(g),p.y=e*Math.sin(g),o.push(p.x,p.y,p.z),l.push(0,0,1),c.x=(o[u]/e+1)/2,c.y=(o[u+1]/e+1)/2,d.push(c.x,c.y)}for(u=1;u<=t;u++)n.push(u,u+1,0);this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=Object.freeze({__proto__:null,WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry});function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this};function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0;function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,this.sheen=e.sheen?(this.sheen||new Color).copy(e.sheen):null,this.transparency=e.transparency,this};function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshToonMaterial(e){Material.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshToonMaterial.prototype=Object.create(Material.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshMatcapMaterial(e){Material.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshMatcapMaterial.prototype=Object.create(Material.prototype),MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial,MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0,MeshMatcapMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}),AnimationUtils={arraySlice:function(e,t,r){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0===r?e.length:r)):e.slice(t,r)},convertArray:function(e,t,r){return e&&(r||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,r){return e[t]-e[r]}for(var r=e.length,a=Array(r),n=0;n!==r;++n)a[n]=n;return a.sort(t),a},sortedArray:function(e,t,r){for(var a=e.length,n=new e.constructor(a),o=0,s=0,l;s!==a;++o){l=r[o]*t;for(var d=0;d!==t;++d)n[s++]=e[l+d]}return n},flattenJSON:function(e,t,r,a){for(var n=1,o=e[0];o!==void 0&&o[a]===void 0;)o=e[n++];if(void 0!==o){var s=o[a];if(void 0!==s)if(Array.isArray(s))do s=o[a],void 0!==s&&(t.push(o.time),r.push.apply(r,s)),o=e[n++];while(void 0!==o);else if(void 0!==s.toArray)do s=o[a],void 0!==s&&(t.push(o.time),s.toArray(r,r.length)),o=e[n++];while(void 0!==o);else do s=o[a],void 0!==s&&(t.push(o.time),r.push(s)),o=e[n++];while(void 0!==o)}},subclip:function(e,t,r,a,n){n=n||30;var o=e.clone();o.name=t;for(var s=[],l=0;l<o.tracks.length;++l){for(var d=o.tracks[l],p=d.getValueSize(),c=[],u=[],m=0,g;m<d.times.length;++m)if(g=d.times[m]*n,!(g<r||g>=a)){c.push(d.times[m]);for(var f=0;f<p;++f)u.push(d.values[m*p+f])}0===c.length||(d.times=AnimationUtils.convertArray(c,d.times.constructor),d.values=AnimationUtils.convertArray(u,d.values.constructor),s.push(d))}o.tracks=s;for(var h=1/0,l=0;l<o.tracks.length;++l)h>o.tracks[l].times[0]&&(h=o.tracks[l].times[0]);for(var l=0;l<o.tracks.length;++l)o.tracks[l].shift(-1*h);return o.resetDuration(),o}};function Interpolant(e,t,r,a){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=a===void 0?new t.constructor(r):a,this.sampleValues=t,this.valueSize=r}Object.assign(Interpolant.prototype,{evaluate:function(e){var t=this.parameterPositions,r=this._cachedIndex,a=t[r],i=t[r-1];validate_interval:{seek:{var n;linear_scan:{forward_scan:if(!(e<a)){for(var o=r+2;;){if(void 0===a){if(e<i)break forward_scan;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===o)break;if(i=a,a=t[++r],e<a)break seek}n=t.length;break linear_scan}if(!(e>=i)){var s=t[1];e<s&&(r=2,i=s);for(var o=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(r===o)break;if(a=i,i=t[--r-1],e>=i)break seek}n=r,r=0;break linear_scan}break validate_interval}for(;r<n;){var l=r+n>>>1;e<t[l]?n=l:r=l+1}if(a=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(void 0===a)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,a)}return this.interpolate_(r,i,e,a)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,r=this.sampleValues,a=this.valueSize,n=0;n!==a;++n)t[n]=r[e*a+n];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_});function CubicInterpolant(e,t,r,a){Interpolant.call(this,e,t,r,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(e,t,r){var a=this.parameterPositions,i=e-2,n=e+1,o=a[i],s=a[n];if(o===void 0)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:i=e,o=2*t-r;break;case WrapAroundEnding:i=a.length-2,o=t+a[i]-a[i+1];break;default:i=e,o=r;}if(void 0===s)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:n=e,s=2*r-t;break;case WrapAroundEnding:n=1,s=r+a[1]-a[0];break;default:n=e-1,s=t;}var l=.5*(r-t),d=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-r),this._offsetPrev=i*d,this._offsetNext=n*d},interpolate_:function(e,r,a,t){for(var n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,m=this._weightNext,g=(a-r)/(t-r),p=g*g,f=p*g,h=0;h!==s;++h)n[h]=(-u*f+2*u*p-u*g)*o[d+h]+((1+u)*f+(-1.5-2*u)*p+(-.5+u)*g+1)*o[l-s+h]+((-1-m)*f+(1.5+m)*p+.5*g)*o[l+h]+(m*f-m*p)*o[c+h];return n}});function LinearInterpolant(e,t,r,a){Interpolant.call(this,e,t,r,a)}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,r,a,t){for(var n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=(a-r)/(t-r),p=0;p!==s;++p)n[p]=o[l-s+p]*(1-d)+o[l+p]*d;return n}});function DiscreteInterpolant(e,t,r,a){Interpolant.call(this,e,t,r,a)}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}});function KeyframeTrack(e,t,r,a){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}Object.assign(KeyframeTrack,{toJSON:function(e){var t=e.constructor,r;if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)};var a=e.getInterpolation();a!==e.DefaultInterpolation&&(r.interpolation=a)}return r.type=e.ValueTypeName,r}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;if(e===InterpolateDiscrete?t=this.InterpolantFactoryMethodDiscrete:e===InterpolateLinear?t=this.InterpolantFactoryMethodLinear:e===InterpolateSmooth?t=this.InterpolantFactoryMethodSmooth:void 0,void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(r);return console.warn("THREE.KeyframeTrack:",r),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,r=0,a=t.length;r!==a;++r)t[r]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,r=0,a=t.length;r!==a;++r)t[r]*=e;return this},trim:function(e,t){for(var r=this.times,a=r.length,i=0,n=a-1;i!==a&&r[i]<e;)++i;for(;-1!==n&&r[n]>t;)--n;if(++n,0!==i||n!==a){i>=n&&(n=Math.max(n,1),i=n-1);var o=this.getValueSize();this.times=AnimationUtils.arraySlice(r,i,n),this.values=AnimationUtils.arraySlice(this.values,i*o,n*o)}return this},validate:function(){var e=!0,t=this.getValueSize();0!=t-Math.floor(t)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var r=this.times,a=this.values,o=r.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var s=null,l=0,d;l!==o;l++){if(d=r[l],"number"==typeof d&&isNaN(d)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,d),e=!1;break}if(null!==s&&s>d){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,d,s),e=!1;break}s=d}if(a!==void 0&&AnimationUtils.isTypedArray(a))for(var l=0,p=a.length,n;l!==p;++l)if(n=a[l],isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,n),e=!1;break}return e},optimize:function(){for(var e=AnimationUtils.arraySlice(this.times),t=AnimationUtils.arraySlice(this.values),r=this.getValueSize(),a=this.getInterpolation()===InterpolateSmooth,n=1,o=e.length-1,s=1;s<o;++s){var l=!1,d=e[s],p=e[s+1];if(d!==p&&(1!==s||d!==d[0]))if(!a){for(var c=s*r,u=0,m;u!==r;++u)if(m=t[c+u],m!==t[c-r+u]||m!==t[c+r+u]){l=!0;break}}else l=!0;if(l){if(s!==n){e[n]=e[s];for(var g=s*r,f=n*r,u=0;u!==r;++u)t[f+u]=t[g+u]}++n}}if(0<o){e[n]=e[o];for(var g=o*r,f=n*r,u=0;u!==r;++u)t[f+u]=t[g+u];++n}return n===e.length?(this.times=e,this.values=t):(this.times=AnimationUtils.arraySlice(e,0,n),this.values=AnimationUtils.arraySlice(t,0,n*r)),this},clone:function(){var e=AnimationUtils.arraySlice(this.times,0),t=AnimationUtils.arraySlice(this.values,0),r=this.constructor,a=new r(this.name,e,t);return a.createInterpolant=this.createInterpolant,a}});function BooleanKeyframeTrack(e,t,r){KeyframeTrack.call(this,e,t,r)}BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ColorKeyframeTrack(e,t,r,a){KeyframeTrack.call(this,e,t,r,a)}ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"});function NumberKeyframeTrack(e,t,r,a){KeyframeTrack.call(this,e,t,r,a)}NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"});function QuaternionLinearInterpolant(e,t,r,a){Interpolant.call(this,e,t,r,a)}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,r,a,t){for(var i=this.resultBuffer,n=this.sampleValues,o=this.valueSize,s=e*o,l=s+o;s!==l;s+=4)Quaternion.slerpFlat(i,0,n,s-o,n,s,(a-r)/(t-r));return i}});function QuaternionKeyframeTrack(e,t,r,a){KeyframeTrack.call(this,e,t,r,a)}QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function StringKeyframeTrack(e,t,r,a){KeyframeTrack.call(this,e,t,r,a)}StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function VectorKeyframeTrack(e,t,r,a){KeyframeTrack.call(this,e,t,r,a)}VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"});function AnimationClip(e,t,r){this.name=e,this.tracks=r,this.duration=t===void 0?-1:t,this.uuid=MathUtils.generateUUID(),0>this.duration&&this.resetDuration()}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=getTrackTypeForValueTypeName(e.type);if(e.times===void 0){var r=[],a=[];AnimationUtils.flattenJSON(e.keys,r,a,"value"),e.times=r,e.values=a}return void 0===t.parse?new t(e.name,e.times,e.values,e.interpolation):t.parse(e)}Object.assign(AnimationClip,{parse:function(e){for(var t=[],r=e.tracks,a=1/(e.fps||1),o=0,s=r.length;o!==s;++o)t.push(parseKeyframeTrack(r[o]).scale(a));return new AnimationClip(e.name,e.duration,t)},toJSON:function(e){for(var t=[],r=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},o=0,s=r.length;o!==s;++o)t.push(KeyframeTrack.toJSON(r[o]));return a},CreateFromMorphTargetSequence:function(e,t,r,a){for(var n=t.length,o=[],s=0;s<n;s++){var l=[],d=[];l.push((s+n-1)%n,s,(s+1)%n),d.push(0,1,0);var p=AnimationUtils.getKeyframeOrder(l);l=AnimationUtils.sortedArray(l,1,p),d=AnimationUtils.sortedArray(d,1,p),a||0!==l[0]||(l.push(n),d.push(d[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[s].name+"]",l,d).scale(1/r))}return new AnimationClip(e,-1,o)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var a=e;r=a.geometry&&a.geometry.animations||a.animations}for(var n=0;n<r.length;n++)if(r[n].name===t)return r[n];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){for(var a={},n=0,o=e.length;n<o;n++){var s=e[n],l=s.name.match(/^([\w-]*?)([\d]+)$/);if(l&&1<l.length){var d=l[1],p=a[d];p||(a[d]=p=[]),p.push(s)}}var c=[];for(var d in a)c.push(AnimationClip.CreateFromMorphTargetSequence(d,a[d],t,r));return c},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var r=function(e,t,r,a,i){if(0!==r.length){var n=[],o=[];AnimationUtils.flattenJSON(r,n,o,a),0!==n.length&&i.push(new e(t,n,o))}},a=[],i=e.name||"default",n=e.length||-1,o=e.fps||30,s=e.hierarchy||[],l=0,d;l<s.length;l++)if(d=s[l].keys,d&&0!==d.length)if(d[0].morphTargets){for(var p={},c=0;c<d.length;c++)if(d[c].morphTargets)for(var u=0;u<d[c].morphTargets.length;u++)p[d[c].morphTargets[u]]=-1;for(var g in p){for(var f=[],y=[],u=0,x;u!==d[c].morphTargets.length;++u)x=d[c],f.push(x.time),y.push(x.morphTarget===g?1:0);a.push(new NumberKeyframeTrack(".morphTargetInfluence["+g+"]",f,y))}n=p.length*(o||1)}else{var v=".bones["+t[l].name+"]";r(VectorKeyframeTrack,v+".position",d,"pos",a),r(QuaternionKeyframeTrack,v+".quaternion",d,"rot",a),r(VectorKeyframeTrack,v+".scale",d,"scl",a)}if(0===a.length)return null;var _=new AnimationClip(i,n,a);return _}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){for(var e=this.tracks,t=0,r=0,a=e.length,n;r!==a;++r)n=this.tracks[r],t=Math.max(t,n.times[n.times.length-1]);return this.duration=t,this},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new AnimationClip(this.name,this.duration,e)}});var Cache={enabled:!1,files:{},add:function(e,t){!1===this.enabled||(this.files[e]=t)},get:function(e){return!1===this.enabled?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function LoadingManager(e,t,r){var a=this,i=!1,n=0,o=0,s=void 0,d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1===i&&a.onStart!==void 0&&a.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,a.onProgress!==void 0&&a.onProgress(e,n,o),n===o&&(i=!1,a.onLoad!==void 0&&a.onLoad())},this.itemError=function(e){a.onError!==void 0&&a.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return d.push(e,t),this},this.removeHandler=function(e){var t=d.indexOf(e);return-1!==t&&d.splice(t,2),this},this.getHandler=function(e){for(var t=0,r=d.length;t<r;t+=2){var a=d[t],n=d[t+1];if(a.global&&(a.lastIndex=0),a.test(e))return n}return null}}var DefaultLoadingManager=new LoadingManager;function Loader(e){this.manager=e===void 0?DefaultLoadingManager:e,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(Loader.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this}});var loading={};function FileLoader(e){Loader.call(this,e)}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(e,t,r,a){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var n=this,o=Cache.get(e);if(void 0!==o)return n.manager.itemStart(e),setTimeout(function(){t&&t(o),n.manager.itemEnd(e)},0),o;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:r,onError:a});var s=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(s){var l=s[1],d=!!s[2],p=s[3];p=decodeURIComponent(p),d&&(p=atob(p));try{var c=(this.responseType||"").toLowerCase(),u;switch(c){case"arraybuffer":case"blob":for(var m=new Uint8Array(p.length),g=0;g<p.length;g++)m[g]=p.charCodeAt(g);u="blob"===c?new Blob([m.buffer],{type:l}):m.buffer;break;case"document":var f=new DOMParser;u=f.parseFromString(p,l);break;case"json":u=JSON.parse(p);break;default:u=p;}setTimeout(function(){t&&t(u),n.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){a&&a(t),n.manager.itemError(e),n.manager.itemEnd(e)},0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:r,onError:a});var h=new XMLHttpRequest;for(var y in h.open("GET",e,!0),h.addEventListener("load",function(t){var r=this.response,a=loading[e];if(delete loading[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(e,r);for(var o=0,s=a.length,l;o<s;o++)l=a[o],l.onLoad&&l.onLoad(r);n.manager.itemEnd(e)}else{for(var o=0,s=a.length,l;o<s;o++)l=a[o],l.onError&&l.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)}},!1),h.addEventListener("progress",function(t){for(var r=loading[e],a=0,n=r.length,o;a<n;a++)o=r[a],o.onProgress&&o.onProgress(t)},!1),h.addEventListener("error",function(t){var r=loading[e];delete loading[e];for(var a=0,o=r.length,s;a<o;a++)s=r[a],s.onError&&s.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)},!1),h.addEventListener("abort",function(t){var r=loading[e];delete loading[e];for(var a=0,o=r.length,s;a<o;a++)s=r[a],s.onError&&s.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)},!1),void 0!==this.responseType&&(h.responseType=this.responseType),void 0!==this.withCredentials&&(h.withCredentials=this.withCredentials),h.overrideMimeType&&h.overrideMimeType(void 0===this.mimeType?"text/plain":this.mimeType),this.requestHeader)h.setRequestHeader(y,this.requestHeader[y]);h.send(null)}return n.manager.itemStart(e),h},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});function AnimationLoader(e){Loader.call(this,e)}AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(e,t,r,a){var i=this,n=new FileLoader(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function(e){for(var t=[],r=0,a;r<e.length;r++)a=AnimationClip.parse(e[r]),t.push(a);return t}});function CompressedTextureLoader(e){Loader.call(this,e)}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(e,t,r,a){function n(n){d.load(e[n],function(e){var r=o.parse(e,!0);s[n]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},p+=1,6===p&&(1===r.mipmapCount&&(l.minFilter=LinearFilter),l.format=r.format,l.needsUpdate=!0,t&&t(l))},r,a)}var o=this,s=[],l=new CompressedTexture;l.image=s;var d=new FileLoader(this.manager);if(d.setPath(this.path),d.setResponseType("arraybuffer"),Array.isArray(e))for(var p=0,c=0,u=e.length;c<u;++c)n(c);else d.load(e,function(e){var r=o.parse(e,!0);if(r.isCubemap)for(var a=r.mipmaps.length/r.mipmapCount,n=0;n<a;n++){s[n]={mipmaps:[]};for(var d=0;d<r.mipmapCount;d++)s[n].mipmaps.push(r.mipmaps[n*r.mipmapCount+d]),s[n].format=r.format,s[n].width=r.width,s[n].height=r.height}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=LinearFilter),l.format=r.format,l.needsUpdate=!0,t&&t(l)},r,a);return l}});function DataTextureLoader(e){Loader.call(this,e)}DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(e,t,r,a){var i=this,n=new DataTexture,o=new FileLoader(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(e){var r=i.parse(e);r&&(void 0===r.image?void 0!==r.data&&(n.image.width=r.width,n.image.height=r.height,n.image.data=r.data):n.image=r.image,n.wrapS=void 0===r.wrapS?ClampToEdgeWrapping:r.wrapS,n.wrapT=void 0===r.wrapT?ClampToEdgeWrapping:r.wrapT,n.magFilter=void 0===r.magFilter?LinearFilter:r.magFilter,n.minFilter=void 0===r.minFilter?LinearFilter:r.minFilter,n.anisotropy=void 0===r.anisotropy?1:r.anisotropy,void 0!==r.format&&(n.format=r.format),void 0!==r.type&&(n.type=r.type),void 0!==r.mipmaps&&(n.mipmaps=r.mipmaps,n.minFilter=LinearMipmapLinearFilter),1===r.mipmapCount&&(n.minFilter=LinearFilter),n.needsUpdate=!0,t&&t(n,r))},r,a),n}});function ImageLoader(e){Loader.call(this,e)}ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(e,t,r,a){function i(){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),Cache.add(e,this),t&&t(this),o.manager.itemEnd(e)}function n(t){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),a&&a(t),o.manager.itemError(e),o.manager.itemEnd(e)}void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,s=Cache.get(e);if(void 0!==s)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;var l=document.createElementNS("http://www.w3.org/1999/xhtml","img");return l.addEventListener("load",i,!1),l.addEventListener("error",n,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),o.manager.itemStart(e),l.src=e,l}});function CubeTextureLoader(e){Loader.call(this,e)}CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(e,t,r,a){function n(r){s.load(e[r],function(e){o.images[r]=e,l++,6===l&&(o.needsUpdate=!0,t&&t(o))},void 0,a)}var o=new CubeTexture,s=new ImageLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);for(var l=0,d=0;d<e.length;++d)n(d);return o}});function TextureLoader(e){Loader.call(this,e)}TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(e,t,r,a){var i=new Texture,n=new ImageLoader(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setPath(this.path),n.load(e,function(r){i.image=r;var a=0<e.search(/\.jpe?g($|\?)/i)||0===e.search(/^data\:image\/jpeg/);i.format=a?RGBFormat:RGBAFormat,i.needsUpdate=!0,void 0!==t&&t(i)},r,a),i}});function Curve(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(Curve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,r){var a=this.getUtoTmapping(e);return this.getPoint(a,r)},getPoints:function(e){e===void 0&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r=this.getPoint(0),a=0,i,n;for(t.push(0),n=1;n<=e;n++)i=this.getPoint(n/e),a+=i.distanceTo(r),t.push(a),r=i;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,r){var a=this.getLengths(),n=0,o=a.length,s;s=r?r:e*a[o-1];for(var l=0,d=o-1,p;l<=d;)if(n=Math.floor(l+(d-l)/2),p=a[n]-s,0>p)l=n+1;else if(0<p)d=n-1;else{d=n;break}if(n=d,a[n]===s)return n/(o-1);var c=a[n],u=a[n+1],m=(s-c)/(u-c),g=(n+m)/(o-1);return g},getTangent:function(e){var t=1e-4,r=e-t,a=e+t;0>r&&(r=0),1<a&&(a=1);var i=this.getPoint(r),n=this.getPoint(a),o=n.clone().sub(i);return o.normalize()},getTangentAt:function(e){var r=this.getUtoTmapping(e);return this.getTangent(r)},computeFrenetFrames:function(e,t){var r=new Vector3,a=[],n=[],o=[],s=new Vector3,l=new Matrix4,d,p,c;for(d=0;d<=e;d++)p=d/e,a[d]=this.getTangentAt(p),a[d].normalize();n[0]=new Vector3,o[0]=new Vector3;var m=Number.MAX_VALUE,g=Math.abs(a[0].x),f=Math.abs(a[0].y),h=Math.abs(a[0].z);for(g<=m&&(m=g,r.set(1,0,0)),f<=m&&(m=f,r.set(0,1,0)),h<=m&&r.set(0,0,1),s.crossVectors(a[0],r).normalize(),n[0].crossVectors(a[0],s),o[0].crossVectors(a[0],n[0]),d=1;d<=e;d++)n[d]=n[d-1].clone(),o[d]=o[d-1].clone(),s.crossVectors(a[d-1],a[d]),s.length()>Number.EPSILON&&(s.normalize(),c=Math.acos(MathUtils.clamp(a[d-1].dot(a[d]),-1,1)),n[d].applyMatrix4(l.makeRotationAxis(s,c))),o[d].crossVectors(a[d],n[d]);if(!0===t)for(c=Math.acos(MathUtils.clamp(n[0].dot(n[e]),-1,1)),c/=e,0<a[0].dot(s.crossVectors(n[0],n[e]))&&(c=-c),d=1;d<=e;d++)n[d].applyMatrix4(l.makeRotationAxis(a[d],c*d)),o[d].crossVectors(a[d],n[d]);return{tangents:a,normals:n,binormals:o}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"},arcLengthDivisions:this.arcLengthDivisions,type:this.type};return e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function EllipseCurve(e,t,r,a,i,n,o,s){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=a||1,this.aStartAngle=i||0,this.aEndAngle=n||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){for(var r=t||new Vector2,a=2*Math.PI,i=this.aEndAngle-this.aStartAngle,n=Math.abs(i)<Number.EPSILON;0>i;)i+=a;for(;i>a;)i-=a;i<Number.EPSILON&&(n?i=0:i=a),!0!==this.aClockwise||n||(i===a?i=-a:i-=a);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),c=s-this.aX,u=l-this.aY;s=c*d-u*p+this.aX,l=c*p+u*d+this.aY}return r.set(s,l)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function ArcCurve(e,t,r,a,i,n){EllipseCurve.call(this,e,t,r,r,a,i,n),this.type="ArcCurve"}ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;function CubicPoly(){function e(e,t,o,s){r=e,a=o,i=-3*e+3*t-2*o-s,n=2*e-2*t+o+s}var r=0,a=0,i=0,n=0;return{initCatmullRom:function(t,r,a,i,n){e(r,a,n*(a-t),n*(i-r))},initNonuniformCatmullRom:function(t,r,a,i,n,o,s){var l=(r-t)/n-(a-t)/(n+o)+(a-r)/o,d=(a-r)/o-(i-r)/(o+s)+(i-a)/s;l*=o,d*=o,e(r,a,l,d)},calc:function(e){var t=e*e;return r+a*e+i*t+n*(t*e)}}}var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(e,t,r,a){Curve.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=a||.5}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,a=this.points,i=a.length,n=(i-(this.closed?0:1))*e,o=Math.floor(n),s=n-o;this.closed?o+=0<o?0:(Math.floor(Math.abs(o)/i)+1)*i:0===s&&o===i-1&&(o=i-2,s=1);var l,d,p,c;if(this.closed||0<o?l=a[(o-1)%i]:(tmp.subVectors(a[0],a[1]).add(a[0]),l=tmp),d=a[o%i],p=a[(o+1)%i],this.closed||o+2<i?c=a[(o+2)%i]:(tmp.subVectors(a[i-1],a[i-2]).add(a[i-1]),c=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){var u="chordal"===this.curveType?.5:.25,m=Math.pow(l.distanceToSquared(d),u),g=Math.pow(d.distanceToSquared(p),u),f=Math.pow(p.distanceToSquared(c),u);1e-4>g&&(g=1),1e-4>m&&(m=g),1e-4>f&&(f=g),px.initNonuniformCatmullRom(l.x,d.x,p.x,c.x,m,g,f),py.initNonuniformCatmullRom(l.y,d.y,p.y,c.y,m,g,f),pz.initNonuniformCatmullRom(l.z,d.z,p.z,c.z,m,g,f)}else"catmullrom"===this.curveType&&(px.initCatmullRom(l.x,d.x,p.x,c.x,this.tension),py.initCatmullRom(l.y,d.y,p.y,c.y,this.tension),pz.initCatmullRom(l.z,d.z,p.z,c.z,this.tension));return r.set(px.calc(s),py.calc(s),pz.calc(s)),r},CatmullRomCurve3.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(a.clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length,a;t<r;t++)a=this.points[t],e.points.push(a.toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},CatmullRomCurve3.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(new Vector3().fromArray(a));return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function CatmullRom(e,t,r,a,i){var n=.5*(a-t),o=.5*(i-r),s=e*e;return(2*r-2*a+n+o)*(e*s)+(-3*r+3*a-2*n-o)*s+n*e+r}function QuadraticBezierP0(e,t){var r=1-e;return r*r*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,a){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,a)}function CubicBezierP0(e,t){var r=1-e;return r*r*r*t}function CubicBezierP1(e,t){var r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,a,i){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,a)+CubicBezierP3(e,i)}function CubicBezierCurve(e,t,r,a){Curve.call(this),this.type="CubicBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2,this.v3=a||new Vector2}CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(CubicBezier(e,a.x,i.x,n.x,o.x),CubicBezier(e,a.y,i.y,n.y,o.y)),r},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function CubicBezierCurve3(e,t,r,a){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3,this.v3=a||new Vector3}CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(CubicBezier(e,a.x,i.x,n.x,o.x),CubicBezier(e,a.y,i.y,n.y,o.y),CubicBezier(e,a.z,i.z,n.z,o.z)),r},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function LineCurve(e,t){Curve.call(this),this.type="LineCurve",this.v1=e||new Vector2,this.v2=t||new Vector2}LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t){var r=t||new Vector2;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize()},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function LineCurve3(e,t){Curve.call(this),this.type="LineCurve3",this.v1=e||new Vector3,this.v2=t||new Vector3}LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function QuadraticBezierCurve(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2}QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,a=this.v0,i=this.v1,n=this.v2;return r.set(QuadraticBezier(e,a.x,i.x,n.x),QuadraticBezier(e,a.y,i.y,n.y)),r},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function QuadraticBezierCurve3(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3}QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,a=this.v0,i=this.v1,n=this.v2;return r.set(QuadraticBezier(e,a.x,i.x,n.x),QuadraticBezier(e,a.y,i.y,n.y),QuadraticBezier(e,a.z,i.z,n.z)),r},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function SplineCurve(e){Curve.call(this),this.type="SplineCurve",this.points=e||[]}SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,a=this.points,i=(a.length-1)*e,n=Math.floor(i),o=i-n,s=a[0===n?n:n-1],l=a[n],d=a[n>a.length-2?a.length-1:n+1],p=a[n>a.length-3?a.length-1:n+2];return r.set(CatmullRom(o,s.x,l.x,d.x,p.x),CatmullRom(o,s.y,l.y,d.y,p.y)),r},SplineCurve.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(a.clone());return this},SplineCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length,a;t<r;t++)a=this.points[t],e.points.push(a.toArray());return e},SplineCurve.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(new Vector2().fromArray(a));return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))},getPoint:function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),a=0;a<r.length;){if(r[a]>=t){var n=r[a]-t,o=this.curves[a],s=o.getLength(),l=0===s?0:1-n/s;return o.getPointAt(l)}a++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,r=0,a=this.curves.length;r<a;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t=[],r=0,a=this.curves,n;r<a.length;r++)for(var o=a[r],s=o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,l=o.getPoints(s),d=0,p;d<l.length;d++)p=l[d],n&&n.equals(p)||(t.push(p),n=p);return this.autoClose&&1<t.length&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Curve.prototype.copy.call(this,e),this.curves=[];for(var t=0,r=e.curves.length,a;t<r;t++)a=e.curves[t],this.curves.push(a.clone());return this.autoClose=e.autoClose,this},toJSON:function(){var e=Curve.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,r=this.curves.length,a;t<r;t++)a=this.curves[t],e.curves.push(a.toJSON());return e},fromJSON:function(e){Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,r=e.curves.length,a;t<r;t++)a=e.curves[t],this.curves.push(new Curves[a.type]().fromJSON(a));return this}});function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){var r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,a){var i=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,a));return this.curves.push(i),this.currentPoint.set(r,a),this},bezierCurveTo:function(e,t,r,a,i,n){var o=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,a),new Vector2(i,n));return this.curves.push(o),this.currentPoint.set(i,n),this},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),r=new SplineCurve(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,a,i,n){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,a,i,n),this},absarc:function(e,t,r,a,i,n){return this.absellipse(e,t,r,r,a,i,n),this},ellipse:function(e,t,r,a,i,n,o,s){var l=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+l,t+d,r,a,i,n,o,s),this},absellipse:function(e,t,r,a,i,n,o,s){var l=new EllipseCurve(e,t,r,a,i,n,o,s);if(0<this.curves.length){var d=l.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(l);var p=l.getPoint(1);return this.currentPoint.copy(p),this},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function Shape(e){Path.call(this,e),this.uuid=MathUtils.generateUUID(),this.type="Shape",this.holes=[]}Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){for(var t=[],r=0,a=this.holes.length;r<a;r++)t[r]=this.holes[r].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Path.prototype.copy.call(this,e),this.holes=[];for(var t=0,r=e.holes.length,a;t<r;t++)a=e.holes[t],this.holes.push(a.clone());return this},toJSON:function(){var e=Path.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,r=this.holes.length,a;t<r;t++)a=this.holes[t],e.holes.push(a.toJSON());return e},fromJSON:function(e){Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,r=e.holes.length,a;t<r;t++)a=e.holes[t],this.holes.push(new Path().fromJSON(a));return this}});function Light(e,t){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=t===void 0?1:t,this.receiveShadow=void 0}Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}});function HemisphereLight(e,t,r){Light.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function LightShadow(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){var t=this.camera,r=this.matrix,a=this._projScreenMatrix,i=this._lookTarget,n=this._lightPositionWorld;n.setFromMatrixPosition(e.matrixWorld),t.position.copy(n),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),a.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(e){var t=this.camera,r=2*MathUtils.RAD2DEG*e.angle,a=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(r!==t.fov||a!==t.aspect||i!==t.far)&&(t.fov=r,t.aspect=a,t.far=i,t.updateProjectionMatrix()),LightShadow.prototype.updateMatrices.call(this,e)}});function SpotLight(e,t,r,a,i,n){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=r===void 0?0:r,this.angle=a===void 0?Math.PI/3:a,this.penumbra=i===void 0?0:i,this.decay=n===void 0?1:n,this.shadow=new SpotLightShadow}SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);var r=this.camera,a=this.matrix,i=this._lightPositionWorld,n=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),n.copy(r.position),n.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(n),r.updateMatrixWorld(),a.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function PointLight(e,t,r,a){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=r===void 0?0:r,this.decay=a===void 0?1:a,this.shadow=new PointLightShadow}PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function OrthographicCamera(e,t,r,a,i,n){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e===void 0?-1:e,this.right=t===void 0?1:t,this.top=r===void 0?1:r,this.bottom=a===void 0?-1:a,this.near=i===void 0?.1:i,this.far=n===void 0?2e3:n,this.updateProjectionMatrix()}OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,a,i,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2,i=r-e,n=r+e,o=a+t,s=a-t;if(null!==this.view&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=l*this.view.offsetX,n=i+l*this.view.width,o-=d*this.view.offsetY,s=o-d*this.view.height}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}});function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(e){LightShadow.prototype.updateMatrices.call(this,e)}});function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0});function RectAreaLight(e,t,r,a){Light.call(this,e,t),this.type="RectAreaLight",this.width=r===void 0?10:r,this.height=a===void 0?10:a}RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});function MaterialLoader(e){Loader.call(this,e),this.textures={}}MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(e,t,r,a){var i=this,n=new FileLoader(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function(e){function t(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}var r=this.textures,a=new Materials[e.type];if(void 0!==e.uuid&&(a.uuid=e.uuid),void 0!==e.name&&(a.name=e.name),void 0!==e.color&&a.color.setHex(e.color),void 0!==e.roughness&&(a.roughness=e.roughness),void 0!==e.metalness&&(a.metalness=e.metalness),void 0!==e.sheen&&(a.sheen=new Color().setHex(e.sheen)),void 0!==e.emissive&&a.emissive.setHex(e.emissive),void 0!==e.specular&&a.specular.setHex(e.specular),void 0!==e.shininess&&(a.shininess=e.shininess),void 0!==e.clearcoat&&(a.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(a.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(a.fog=e.fog),void 0!==e.flatShading&&(a.flatShading=e.flatShading),void 0!==e.blending&&(a.blending=e.blending),void 0!==e.combine&&(a.combine=e.combine),void 0!==e.side&&(a.side=e.side),void 0!==e.opacity&&(a.opacity=e.opacity),void 0!==e.transparent&&(a.transparent=e.transparent),void 0!==e.alphaTest&&(a.alphaTest=e.alphaTest),void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(a.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(a.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(a.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(a.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(a.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(a.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(a.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(a.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(a.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(a.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(a.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(a.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(a.rotation=e.rotation),1!==e.linewidth&&(a.linewidth=e.linewidth),void 0!==e.dashSize&&(a.dashSize=e.dashSize),void 0!==e.gapSize&&(a.gapSize=e.gapSize),void 0!==e.scale&&(a.scale=e.scale),void 0!==e.polygonOffset&&(a.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(a.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(a.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(a.skinning=e.skinning),void 0!==e.morphTargets&&(a.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(a.morphNormals=e.morphNormals),void 0!==e.dithering&&(a.dithering=e.dithering),void 0!==e.vertexTangents&&(a.vertexTangents=e.vertexTangents),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.toneMapped&&(a.toneMapped=e.toneMapped),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?a.vertexColors=!!(0<e.vertexColors):a.vertexColors=e.vertexColors),void 0!==e.uniforms)for(var i in e.uniforms){var n=e.uniforms[i];switch(a.uniforms[i]={},n.type){case"t":a.uniforms[i].value=t(n.value);break;case"c":a.uniforms[i].value=new Color().setHex(n.value);break;case"v2":a.uniforms[i].value=new Vector2().fromArray(n.value);break;case"v3":a.uniforms[i].value=new Vector3().fromArray(n.value);break;case"v4":a.uniforms[i].value=new Vector4().fromArray(n.value);break;case"m3":a.uniforms[i].value=new Matrix3().fromArray(n.value);case"m4":a.uniforms[i].value=new Matrix4().fromArray(n.value);break;default:a.uniforms[i].value=n.value;}}if(void 0!==e.defines&&(a.defines=e.defines),void 0!==e.vertexShader&&(a.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(a.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(var o in e.extensions)a.extensions[o]=e.extensions[o];if(void 0!==e.shading&&(a.flatShading=1===e.shading),void 0!==e.size&&(a.size=e.size),void 0!==e.sizeAttenuation&&(a.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(a.map=t(e.map)),void 0!==e.matcap&&(a.matcap=t(e.matcap)),void 0!==e.alphaMap&&(a.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(a.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(a.bumpScale=e.bumpScale),void 0!==e.normalMap&&(a.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(a.normalMapType=e.normalMapType),void 0!==e.normalScale){var s=e.normalScale;!1===Array.isArray(s)&&(s=[s,s]),a.normalScale=new Vector2().fromArray(s)}return void 0!==e.displacementMap&&(a.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(a.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(a.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(a.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(a.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(a.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(a.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(a.specularMap=t(e.specularMap)),void 0!==e.envMap&&(a.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(a.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(a.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(a.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(a.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(a.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(a.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(a.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(a.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(a.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(a.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(a.clearcoatNormalScale=new Vector2().fromArray(e.clearcoatNormalScale)),a},setTextures:function(e){return this.textures=e,this}});var LoaderUtils={decodeText:function(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);for(var t="",r=0,a=e.length;r<a;r++)t+=String.fromCharCode(e[r]);try{return decodeURIComponent(escape(t))}catch(r){return t}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var e=BufferGeometry.prototype.toJSON.call(this);return e.maxInstancedCount=this.maxInstancedCount,e.isInstancedBufferGeometry=!0,e}});function InstancedBufferAttribute(e,t,r,a){"number"==typeof r&&(a=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),BufferAttribute.call(this,e,t,r),this.meshPerAttribute=a||1}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){var e=BufferAttribute.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function BufferGeometryLoader(e){Loader.call(this,e)}BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(e,t,r,a){var i=this,n=new FileLoader(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function(e){var t=e.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,r=e.data.index;if(void 0!==r){var a=new TYPED_ARRAYS[r.type](r.array);t.setIndex(new BufferAttribute(a,1))}var o=e.data.attributes;for(var s in o){var l=o[s],a=new TYPED_ARRAYS[l.type](l.array),d=l.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute,p=new d(a,l.itemSize,l.normalized);void 0!==l.name&&(p.name=l.name),t.setAttribute(s,p)}var c=e.data.morphAttributes;if(c)for(var s in c){for(var u=c[s],m=[],g=0,f=u.length;g<f;g++){var l=u[g],a=new TYPED_ARRAYS[l.type](l.array),p=new BufferAttribute(a,l.itemSize,l.normalized);void 0!==l.name&&(p.name=l.name),m.push(p)}t.morphAttributes[s]=m}var h=e.data.morphTargetsRelative;h&&(t.morphTargetsRelative=!0);var y=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==y)for(var g=0,x=y.length,n;g!==x;++g)n=y[g],t.addGroup(n.start,n.count,n.materialIndex);var v=e.data.boundingSphere;if(void 0!==v){var _=new Vector3;void 0!==v.center&&_.fromArray(v.center),t.boundingSphere=new Sphere(_,v.radius)}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"==typeof Uint8ClampedArray?Uint8Array:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ObjectLoader(e){Loader.call(this,e)}ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(e,t,r,a){var i=this,n=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;var o=new FileLoader(i.manager);o.setPath(this.path),o.load(e,function(r){var n=null;try{n=JSON.parse(r)}catch(t){return void 0!==a&&a(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var o=n.metadata;return void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()?void console.error("THREE.ObjectLoader: Can't load "+e):void i.parse(n,t)},r,a)},parse:function(e,t){var r=this.parseShape(e.shapes),a=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),n=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,n),s=this.parseObject(e.object,a,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),(void 0===e.images||0===e.images.length)&&void 0!==t&&t(s),s},parseShape:function(e){var t={};if(e!==void 0)for(var r=0,a=e.length,n;r<a;r++)n=new Shape().fromJSON(e[r]),t[n.uuid]=n;return t},parseGeometries:function(e,t){var r={};if(e!==void 0)for(var a=new BufferGeometryLoader,n=0,o=e.length;n<o;n++){var s=e[n],l;switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new Geometries[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":l=new Geometries[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new Geometries[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new Geometries[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new Geometries[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new Geometries[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new Geometries[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new Geometries[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new Geometries[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new Geometries[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new Geometries[s.type](new Curves[s.path.type]().fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new Geometries[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new Geometries[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var d=[],p=0,c=s.shapes.length,u;p<c;p++)u=t[s.shapes[p]],d.push(u);l=new Geometries[s.type](d,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var d=[],p=0,c=s.shapes.length,u;p<c;p++)u=t[s.shapes[p]],d.push(u);var m=s.options.extrudePath;void 0!==m&&(s.options.extrudePath=new Curves[m.type]().fromJSON(m)),l=new Geometries[s.type](d,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=a.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.");break;default:console.warn("THREE.ObjectLoader: Unsupported geometry type \""+s.type+"\"");continue;}l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),!0===l.isBufferGeometry&&void 0!==s.userData&&(l.userData=s.userData),r[s.uuid]=l}return r},parseMaterials:function(e,t){var r={},a={};if(e!==void 0){var n=new MaterialLoader;n.setTextures(t);for(var o=0,s=e.length,l;o<s;o++)if(l=e[o],"MultiMaterial"===l.type){for(var d=[],p=0,c;p<l.materials.length;p++)c=l.materials[p],void 0===r[c.uuid]&&(r[c.uuid]=n.parse(c)),d.push(r[c.uuid]);a[l.uuid]=d}else void 0===r[l.uuid]&&(r[l.uuid]=n.parse(l)),a[l.uuid]=r[l.uuid]}return a},parseAnimations:function(e){for(var t=[],r=0;r<e.length;r++){var a=e[r],n=AnimationClip.parse(a);a.uuid!==void 0&&(n.uuid=a.uuid),t.push(n)}return t},parseImages:function(e,t){function r(e){return a.manager.itemStart(e),s.load(e,function(){a.manager.itemEnd(e)},void 0,function(){a.manager.itemError(e),a.manager.itemEnd(e)})}var a=this,n={};if(e!==void 0&&0<e.length){var o=new LoadingManager(t),s=new ImageLoader(o);s.setCrossOrigin(this.crossOrigin);for(var l=0,d=e.length;l<d;l++){var p=e[l],c=p.url;if(Array.isArray(c)){n[p.uuid]=[];for(var u=0,m=c.length;u<m;u++){var g=c[u],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(g)?g:a.resourcePath+g;n[p.uuid].push(r(f))}}else{var f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p.url)?p.url:a.resourcePath+p.url;n[p.uuid]=r(f)}}}return n},parseTextures:function(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var a={};if(e!==void 0)for(var n=0,o=e.length,s;n<o;n++){s=e[n],void 0===s.image&&console.warn("THREE.ObjectLoader: No \"image\" specified for",s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var l;l=Array.isArray(t[s.image])?new CubeTexture(t[s.image]):new Texture(t[s.image]),l.needsUpdate=!0,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=r(s.mapping,TEXTURE_MAPPING)),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=r(s.wrap[0],TEXTURE_WRAPPING),l.wrapT=r(s.wrap[1],TEXTURE_WRAPPING)),void 0!==s.format&&(l.format=s.format),void 0!==s.type&&(l.type=s.type),void 0!==s.encoding&&(l.encoding=s.encoding),void 0!==s.minFilter&&(l.minFilter=r(s.minFilter,TEXTURE_FILTER)),void 0!==s.magFilter&&(l.magFilter=r(s.magFilter,TEXTURE_FILTER)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),a[s.uuid]=l}return a},parseObject:function(e,t,r){function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function n(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],a=0,n=e.length,o;a<n;a++)o=e[a],void 0===r[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),t.push(r[o]);return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}var o;switch(e.type){case"Scene":o=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":o=new DirectionalLight(e.color,e.intensity);break;case"PointLight":o=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=a(e.geometry),d=n(e.material);o=new Mesh(s,d);break;case"InstancedMesh":var s=a(e.geometry),d=n(e.material),p=e.count,c=e.instanceMatrix;o=new InstancedMesh(s,d,p),o.instanceMatrix=new BufferAttribute(new Float32Array(c.array),16);break;case"LOD":o=new LOD;break;case"Line":o=new Line(a(e.geometry),n(e.material),e.mode);break;case"LineLoop":o=new LineLoop(a(e.geometry),n(e.material));break;case"LineSegments":o=new LineSegments(a(e.geometry),n(e.material));break;case"PointCloud":case"Points":o=new Points(a(e.geometry),n(e.material));break;case"Sprite":o=new Sprite(n(e.material));break;case"Group":o=new Group;break;default:o=new Object3D;}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0===e.matrix?(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)):(o.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.frustumCulled&&(o.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(o.renderOrder=e.renderOrder),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.layers&&(o.layers.mask=e.layers),void 0!==e.children)for(var u=e.children,m=0;m<u.length;m++)o.add(this.parseObject(u[m],t,r));if("LOD"===e.type){void 0!==e.autoUpdate&&(o.autoUpdate=e.autoUpdate);for(var g=e.levels,f=0;f<g.length;f++){var h=g[f],y=o.getObjectByProperty("uuid",h.object);void 0!==y&&o.addLevel(y,h.distance)}}return o}});var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};function ImageBitmapLoader(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Loader.call(this,e),this.options=void 0}ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,setOptions:function(e){return this.options=e,this},load:function(t,r,a,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,o=Cache.get(t);return void 0===o?void(fetch(t).then(function(e){return e.blob()}).then(function(e){return void 0===n.options?createImageBitmap(e):createImageBitmap(e,n.options)}).then(function(e){Cache.add(t,e),r&&r(e),n.manager.itemEnd(t)}).catch(function(r){i&&i(r),n.manager.itemError(t),n.manager.itemEnd(t)}),n.manager.itemStart(t)):(n.manager.itemStart(t),setTimeout(function(){r&&r(o),n.manager.itemEnd(t)},0),o)}});function ShapePath(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}Object.assign(ShapePath.prototype,{moveTo:function(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,a){return this.currentPath.quadraticCurveTo(e,t,r,a),this},bezierCurveTo:function(e,t,r,a,i,n){return this.currentPath.bezierCurveTo(e,t,r,a,i,n),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function r(e){for(var t=[],r=0,a=e.length;r<a;r++){var n=e[r],o=new Shape;o.curves=n.curves,t.push(o)}return t}function a(e,t){for(var r=t.length,a=!1,i=r-1,n=0;n<r;i=n++){var o=t[i],s=t[n],l=s.x-o.x,d=s.y-o.y;if(Math.abs(d)>Number.EPSILON){if(0>d&&(o=t[n],l=-l,s=t[i],d=-d),e.y<o.y||e.y>s.y)continue;if(e.y!==o.y){var c=d*(e.x-o.x)-l*(e.y-o.y);if(0==c)return!0;if(0>c)continue;a=!a}else if(e.x===o.x)return!0}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0}}return a}var n=ShapeUtils.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);var s=[],d,p,c;if(1===o.length)return p=o[0],c=new Shape,c.curves=p.curves,s.push(c),s;var u=!n(o[0].getPoints());u=e?!u:u;var m=[],g=[],f=[],h=0,y;g[h]=void 0,f[h]=[];for(var x=0,v=o.length;x<v;x++)p=o[x],y=p.getPoints(),d=n(y),d=e?!d:d,d?(!u&&g[h]&&h++,g[h]={s:new Shape,p:y},g[h].s.curves=p.curves,u&&h++,f[h]=[]):f[h].push({h:p,p:y[0]});if(!g[0])return r(o);if(1<g.length){for(var l=!1,_=[],b=0,M=g.length;b<M;b++)m[b]=[];for(var b=0,M=g.length,S;b<M;b++){S=f[b];for(var E=0;E<S.length;E++){for(var T=S[E],w=!0,L=0;L<g.length;L++)a(T.p,g[L].p)&&(b!==L&&_.push({froms:b,tos:L,hole:E}),w?(w=!1,m[L].push(T)):l=!0);w&&m[b].push(T)}}0<_.length&&!l&&(f=m)}for(var x=0,A=g.length,R;x<A;x++){c=g[x].s,s.push(c),R=f[x];for(var P=0,C=R.length;P<C;P++)c.holes.push(R[P].h)}return s}});function Font(e){this.type="Font",this.data=e}Object.assign(Font.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);for(var r=[],a=createPaths(e,t,this.data),i=0,n=a.length;i<n;i++)Array.prototype.push.apply(r,a[i].toShapes());return r}});function createPaths(e,t,r){for(var a=Array.from?Array.from(e):(e+"").split(""),n=t/r.resolution,o=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*n,s=[],l=0,d=0,p=0,c;p<a.length;p++)if(c=a[p],"\n"===c)l=0,d-=o;else{var u=createPath(c,n,l,d,r);l+=u.offsetX,s.push(u.path)}return s}function createPath(e,t,r,a,n){var o=n.glyphs[e]||n.glyphs["?"];if(!o)return void console.error("THREE.Font: character \""+e+"\" does not exists in font family "+n.familyName+".");var s=new ShapePath,d,p,c,u,m,g,f,h;if(o.o)for(var v=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),_=0,b=v.length,l;_<b;)l=v[_++],"m"===l?(d=v[_++]*t+r,p=v[_++]*t+a,s.moveTo(d,p)):"l"===l?(d=v[_++]*t+r,p=v[_++]*t+a,s.lineTo(d,p)):"q"===l?(c=v[_++]*t+r,u=v[_++]*t+a,m=v[_++]*t+r,g=v[_++]*t+a,s.quadraticCurveTo(m,g,c,u)):"b"===l?(c=v[_++]*t+r,u=v[_++]*t+a,m=v[_++]*t+r,g=v[_++]*t+a,f=v[_++]*t+r,h=v[_++]*t+a,s.bezierCurveTo(m,g,f,h,c,u)):void 0;return{offsetX:o.ha*t,path:s}}function FontLoader(e){Loader.call(this,e)}FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(e,t,r,a){var i=this,n=new FileLoader(this.manager);n.setPath(this.path),n.load(e,function(r){var a;try{a=JSON.parse(r)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(r.substring(65,r.length-2))}var n=i.parse(a);t&&t(n)},r,a)},parse:function(e){return new Font(e)}});var AudioContext={getContext:function(){return void 0===_context&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context},setContext:function(e){_context=e}},_context;function AudioLoader(e){Loader.call(this,e)}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(e,t,r,a){var i=new FileLoader(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(e){var r=e.slice(0),a=AudioContext.getContext();a.decodeAudioData(r,function(e){t(e)})},r,a)}});function SphericalHarmonics3(){this.coefficients=[];for(var e=0;9>e;e++)this.coefficients.push(new Vector3)}Object.assign(SphericalHarmonics3.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var t=0;9>t;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(var e=0;9>e;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){var r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*a),t.addScaledVector(n[2],.488603*i),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],1.092548*(r*a)),t.addScaledVector(n[5],1.092548*(a*i)),t.addScaledVector(n[6],.315392*(3*i*i-1)),t.addScaledVector(n[7],1.092548*(r*i)),t.addScaledVector(n[8],.546274*(r*r-a*a)),t},getIrradianceAt:function(e,t){var r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],.511664*2*a),t.addScaledVector(n[2],.511664*2*i),t.addScaledVector(n[3],.511664*2*r),t.addScaledVector(n[4],.429043*2*r*a),t.addScaledVector(n[5],.429043*2*a*i),t.addScaledVector(n[6],.743125*i*i-.247708),t.addScaledVector(n[7],.429043*2*r*i),t.addScaledVector(n[8],.429043*(r*r-a*a)),t},add:function(e){for(var t=0;9>t;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(var r=0;9>r;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this},scale:function(e){for(var t=0;9>t;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(var r=0;9>r;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this},equals:function(e){for(var t=0;9>t;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return new this.constructor().copy(this)},fromArray:function(e,t){t===void 0&&(t=0);for(var r=this.coefficients,a=0;9>a;a++)r[a].fromArray(e,t+3*a);return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);for(var r=this.coefficients,a=0;9>a;a++)r[a].toArray(e,t+3*a);return e}}),Object.assign(SphericalHarmonics3,{getBasisAt:function(e,t){var r=e.x,a=e.y,i=e.z;t[0]=.282095,t[1]=.488603*a,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*a,t[5]=1.092548*a*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-a*a)}});function LightProbe(e,t){Light.call(this,void 0,t),this.sh=e===void 0?new SphericalHarmonics3:e}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this},toJSON:function(e){var t=Light.prototype.toJSON.call(this,e);return t}});function HemisphereLightProbe(e,t,r){LightProbe.call(this,void 0,r);var a=new Color().set(e),i=new Color().set(t),n=new Vector3(a.r,a.g,a.b),o=new Vector3(i.r,i.g,i.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(n).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(n).sub(o).multiplyScalar(l)}HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){var t=LightProbe.prototype.toJSON.call(this,e);return t}});function AmbientLightProbe(e,t){LightProbe.call(this,void 0,t);var r=new Color().set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){var t=LightProbe.prototype.toJSON.call(this,e);return t}});var _eyeRight=new Matrix4,_eyeLeft=new Matrix4;function StereoCamera(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(StereoCamera.prototype,{update:function(e){var t=this._cache,r=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(r){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;var a=e.projectionMatrix.clone(),i=t.eyeSep/2,n=i*t.near/t.focus,o=t.near*Math.tan(.5*(MathUtils.DEG2RAD*t.fov))/t.zoom,s,l;_eyeLeft.elements[12]=-i,_eyeRight.elements[12]=i,s=-o*t.aspect+n,l=o*t.aspect+n,a.elements[0]=2*t.near/(l-s),a.elements[8]=(l+s)/(l-s),this.cameraL.projectionMatrix.copy(a),s=-o*t.aspect-n,l=o*t.aspect-n,a.elements[0]=2*t.near/(l-s),a.elements[8]=(l+s)/(l-s),this.cameraR.projectionMatrix.copy(a)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}});function Clock(e){this.autoStart=!(e!==void 0)||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(Clock.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});var _position$2=new Vector3,_quaternion$3=new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;function AudioListener(){Object3D.call(this),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null===this.filter?this.gain.disconnect(this.context.destination):(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e);var t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1),_orientation.set(0,0,-1).applyQuaternion(_quaternion$3),t.positionX){var a=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_position$2.x,a),t.positionY.linearRampToValueAtTime(_position$2.y,a),t.positionZ.linearRampToValueAtTime(_position$2.z,a),t.forwardX.linearRampToValueAtTime(_orientation.x,a),t.forwardY.linearRampToValueAtTime(_orientation.y,a),t.forwardZ.linearRampToValueAtTime(_orientation.z,a),t.upX.linearRampToValueAtTime(r.x,a),t.upY.linearRampToValueAtTime(r.y,a),t.upZ.linearRampToValueAtTime(r.z,a)}else t.setPosition(_position$2.x,_position$2.y,_position$2.z),t.setOrientation(_orientation.x,_orientation.y,_orientation.z,r.x,r.y,r.z)}});function Audio(e){Object3D.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(!0===this.isPlaying&&(this._pausedAt+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this)},stop:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this)},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});var _position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;function PositionalAudio(e){Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this},updateMatrixWorld:function(e){if(Object3D.prototype.updateMatrixWorld.call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);var t=this.panner;if(t.positionX){var r=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(_position$3.x,r),t.positionY.linearRampToValueAtTime(_position$3.y,r),t.positionZ.linearRampToValueAtTime(_position$3.z,r),t.orientationX.linearRampToValueAtTime(_orientation$1.x,r),t.orientationY.linearRampToValueAtTime(_orientation$1.y,r),t.orientationZ.linearRampToValueAtTime(_orientation$1.z,r)}else t.setPosition(_position$3.x,_position$3.y,_position$3.z),t.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z)}}});function AudioAnalyser(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t===void 0?2048:t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),r=0;r<t.length;r++)e+=t[r];return e/t.length}});function PropertyMixer(e,t,r){this.binding=e,this.valueSize=r;var a=Float64Array,i;"quaternion"===t?i=this._slerp:"string"===t||"bool"===t?(a=Array,i=this._select):i=this._lerp;this.buffer=new a(4*r),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(PropertyMixer.prototype,{accumulate:function(e,t){var r=this.buffer,a=this.valueSize,n=e*a+a,o=this.cumulativeWeight;if(0===o){for(var s=0;s!==a;++s)r[n+s]=r[s];o=t}else{o+=t;var l=t/o;this._mixBufferRegion(r,n,0,l,a)}this.cumulativeWeight=o},apply:function(e){var t=this.valueSize,r=this.buffer,a=e*t+t,n=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,1>n){this._mixBufferRegion(r,a,3*t,1-n,t)}for(var s=t;s!==t+t;++s)if(r[s]!==r[s+t]){o.setValue(r,a);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,r=this.valueSize,a=3*r;e.getValue(t,a);for(var n=r;n!==a;++n)t[n]=t[a+n%r];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,r,a,n,t){if(.5<=n)for(var o=0;o!==t;++o)e[r+o]=e[a+o]},_slerp:function(e,r,a,i){Quaternion.slerpFlat(e,r,e,r,e,a,i)},_lerp:function(e,r,a,n,t){for(var o=0,s;o!==t;++o)s=r+o,e[s]=e[s]*(1-n)+e[a+o]*n}});var _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=/[\[\]\.:\/]/g,_wordChar="[^\\[\\]\\.:\\/]",_wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];function Composite(e,t,r){var a=r||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,a)}Object.assign(Composite.prototype,{getValue:function(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,a=this._bindings[r];a!==void 0&&a.getValue(e,t)},setValue:function(e,t){for(var r=this._bindings,a=this._targetGroup.nCachedObjects_,o=r.length;a!==o;++a)r[a].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}});function PropertyBinding(e,t,r){this.path=t,this.parsedPath=r||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(PropertyBinding,{Composite:Composite,create:function(e,t,r){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,r):new PropertyBinding(e,t,r)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(e){var t=_trackRe.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(a!==void 0&&-1!==a){var i=r.nodeName.substring(a+1);-1!==_supportedObjectNames.indexOf(i)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=i)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){var a=function(e){for(var r=0,n;r<e.length;r++){if(n=e[r],n.name===t||n.uuid===t)return n;var o=a(n.children);if(o)return o}return null},i=a(e.children);if(i)return i}return null}}),Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)e[t++]=r[a]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++]},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,r=t.objectName,a=t.propertyName,n=t.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){var o=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(var s=0;s<e.length;s++)if(e[s].name===o){o=s;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r];}if(void 0!==o){if(void 0===e[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[o]}}var l=e[a];if(void 0===l){var d=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+a+" but it wasn't found.",e)}var p=this.Versioning.None;this.targetObject=e,void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(p=this.Versioning.MatrixWorldNeedsUpdate):p=this.Versioning.NeedsUpdate;var c=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===a){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(var s=0;s<this.node.geometry.morphAttributes.position.length;s++)if(e.geometry.morphAttributes.position[s].name===n){n=s;break}}else{if(!e.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var s=0;s<this.node.geometry.morphTargets.length;s++)if(e.geometry.morphTargets[s].name===n){n=s;break}}}c=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=n}else void 0!==l.fromArray&&void 0!==l.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(c=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=a;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][p]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var a=this;this.stats={objects:{get total(){return a._objects.length},get inUse(){return this.total-a.nCachedObjects_}},get bindingsPerObject(){return a._bindings.length}}}Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,a=this._indicesByUUID,o=this._paths,s=this._parsedPaths,l=this._bindings,d=l.length,p=void 0,c=0,u=arguments.length;c!==u;++c){var n=arguments[c],g=n.uuid,f=a[g];if(f===void 0){f=t++,a[g]=f,e.push(n);for(var h=0,y=d;h!==y;++h)l[h].push(new PropertyBinding(n,o[h],s[h]))}else if(f<r){p=e[f];var x=--r,v=e[x];a[v.uuid]=f,e[f]=v,a[g]=x,e[x]=n;for(var h=0,y=d;h!==y;++h){var _=l[h],b=_[x],M=_[f];_[f]=b,M===void 0&&(M=new PropertyBinding(n,o[h],s[h])),_[x]=M}}else e[f]!==p&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,r=this._indicesByUUID,a=this._bindings,o=a.length,s=0,l=arguments.length;s!==l;++s){var n=arguments[s],d=n.uuid,p=r[d];if(p!==void 0&&p>=t){var c=t++,u=e[c];r[u.uuid]=p,e[p]=u,r[d]=c,e[c]=n;for(var m=0;m!==o;++m){var g=a[m],f=g[c],h=g[p];g[p]=f,g[c]=h}}}this.nCachedObjects_=t},uncache:function(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,a=this._indicesByUUID,o=this._bindings,s=o.length,l=0,d=arguments.length;l!==d;++l){var n=arguments[l],p=n.uuid,c=a[p];if(void 0!==c)if(delete a[p],c<r){var u=--r,g=e[u],f=--t,h=e[f];a[g.uuid]=c,e[c]=g,a[h.uuid]=u,e[u]=h,e.pop();for(var y=0,x=s;y!==x;++y){var v=o[y],_=v[u],b=v[f];v[c]=_,v[u]=b,v.pop()}}else{var f=--t,h=e[f];a[h.uuid]=c,e[c]=h,e.pop();for(var y=0,x=s,v;y!==x;++y)v=o[y],v[c]=v[f],v.pop()}}this.nCachedObjects_=r},subscribe_:function(e,t){var r=this._bindingsIndicesByPath,a=r[e],o=this._bindings;if(a!==void 0)return o[a];var s=this._paths,l=this._parsedPaths,d=this._objects,p=d.length,c=this.nCachedObjects_,u=Array(p);a=o.length,r[e]=a,s.push(e),l.push(t),o.push(u);for(var m=c,g=d.length,n;m!==g;++m)n=d[m],u[m]=new PropertyBinding(n,e,t);return u},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,r=t[e];if(r!==void 0){var a=this._paths,i=this._parsedPaths,n=this._bindings,o=n.length-1,s=n[o],l=e[o];t[l]=r,n[r]=s,n.pop(),i[r]=i[o],i.pop(),a[r]=a[o],a.pop()}}});function AnimationAction(e,t,r){this._mixer=e,this._clip=t,this._localRoot=r||null;for(var a=t.tracks,n=a.length,o=Array(n),s={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},l=0,d;l!==n;++l)d=a[l].createInterpolant(null),o[l]=d,d.settings=s;this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(AnimationAction.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){var a=this._clip.duration,i=e._clip.duration;e.warp(1,i/a,t),this.warp(a/i,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){var a=this._mixer,i=a.time,n=this._timeScaleInterpolant,o=this.timeScale;null===n&&(n=a._lendControlInterpolant(),this._timeScaleInterpolant=n);var s=n.parameterPositions,l=n.sampleValues;return s[0]=i,s[1]=i+r,l[0]=e/o,l[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,r,a){if(!this.enabled)return void this._updateWeight(e);var i=this._startTime;if(null!==i){var n=(e-i)*r;if(0>n||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);if(0<s)for(var l=this._interpolants,d=this._propertyBindings,p=0,c=l.length;p!==c;++p)l[p].evaluate(o),d[p].accumulate(a,s)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var r=this._weightInterpolant;if(null!==r){var a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopFading(),0===a&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var r=this._timeScaleInterpolant;if(null!==r){var a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e,r=this._clip.duration,a=this.loop,i=this._loopCount,n=a===LoopPingPong;if(0===e)return-1===i?t:n&&1==(1&i)?r-t:t;if(a===LoopOnce){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(t>=r)t=r;else if(0>t)t=0;else{this.time=t;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:0>e?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),t>=r||0>t){var o=Math.floor(t/r);t-=r*o,i+=Math.abs(o);var s=this.repetitions-i;if(0>=s)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=0<e?r:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1});else{if(1===s){var l=0>e;this._setEndings(l,!l,n)}else this._setEndings(!1,!1,n);this._loopCount=i,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=t;if(n&&1==(1&i))return r-t}return t},_setEndings:function(e,t,r){var a=this._interpolantSettings;r?(a.endingStart=ZeroSlopeEnding,a.endingEnd=ZeroSlopeEnding):(a.endingStart=e?this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding,a.endingEnd=t?this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding)},_scheduleFading:function(e,t,r){var a=this._mixer,i=a.time,n=this._weightInterpolant;null===n&&(n=a._lendControlInterpolant(),this._weightInterpolant=n);var o=n.parameterPositions,s=n.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=r,this}});function AnimationMixer(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(e,t){var r=e._localRoot||this._root,a=e._clip.tracks,n=a.length,o=e._propertyBindings,s=e._interpolants,l=r.uuid,d=this._bindingsByRootAndName,p=d[l];p===void 0&&(p={},d[l]=p);for(var c=0;c!==n;++c){var u=a[c],m=u.name,g=p[m];if(void 0!==g)o[c]=g;else{if(g=o[c],void 0!==g){null===g._cacheIndex&&(++g.referenceCount,this._addInactiveBinding(g,l,m));continue}var f=t&&t._propertyBindings[c].binding.parsedPath;g=new PropertyMixer(PropertyBinding.create(r,m,f),u.ValueTypeName,u.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,m),o[c]=g}s[c].resultBuffer=g.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,t)}for(var o=e._propertyBindings,s=0,l=o.length,n;s!==l;++s)n=o[s],0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState());this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,r=0,a=t.length,n;r!==a;++r)n=t[r],0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n));this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){var a=this._actions,i=this._actionsByClip,n=i[t];if(n===void 0)n={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=n;else{var o=n.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=a.length,a.push(e),n.actionByRoot[r]=e},_removeInactiveAction:function(e){var t=this._actions,r=t[t.length-1],a=e._cacheIndex;r._cacheIndex=a,t[a]=r,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,n=this._actionsByClip,o=n[i],s=o.knownActions,l=s[s.length-1],d=e._byClipCacheIndex;l._byClipCacheIndex=d,s[d]=l,s.pop(),e._byClipCacheIndex=null;var p=o.actionByRoot,c=(e._localRoot||this._root).uuid;delete p[c],0===s.length&&delete n[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,r=0,a=t.length,n;r!==a;++r)n=t[r],0==--n.referenceCount&&this._removeInactiveBinding(n)},_lendAction:function(e){var t=this._actions,r=e._cacheIndex,a=this._nActiveActions++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){var t=this._actions,r=e._cacheIndex,a=--this._nActiveActions,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){var a=this._bindingsByRootAndName,i=a[t],n=this._bindings;i===void 0&&(i={},a[t]=i),i[r]=e,e._cacheIndex=n.length,n.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,r=e.binding,a=r.rootNode.uuid,i=r.path,n=this._bindingsByRootAndName,o=n[a],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete n[a]},_lendBinding:function(e){var t=this._bindings,r=e._cacheIndex,a=this._nActiveBindings++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){var t=this._bindings,r=e._cacheIndex,a=--this._nActiveBindings,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,r=e[t];return void 0===r&&(r=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,r=e.__cacheIndex,a=--this._nActiveControlInterpolants,i=t[a];e.__cacheIndex=a,t[a]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var r=t||this._root,a=r.uuid,i="string"==typeof e?AnimationClip.findByName(r,e):e,n=null===i?e:i.uuid,o=this._actionsByClip[n],s=null;if(void 0!==o){var l=o.actionByRoot[a];if(void 0!==l)return l;s=o.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var d=new AnimationAction(this,i,t);return this._bindAction(d,s),this._addInactiveAction(d,n,a),d},existingAction:function(e,t){var r=t||this._root,a=r.uuid,i="string"==typeof e?AnimationClip.findByName(r,e):e,n=i?i.uuid:e,o=this._actionsByClip[n];return void 0===o?null:o.actionByRoot[a]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,r=this._bindings,a=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var n=0;n!==t;++n)e[n].reset();for(var n=0;n!==a;++n)r[n].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,r=this._nActiveActions,a=this.time+=e,n=Math.sign(e),o=this._accuIndex^=1,s=0,l;s!==r;++s)l=t[s],l._update(a,e,n,o);for(var d=this._bindings,p=this._nActiveBindings,s=0;s!==p;++s)d[s].apply(o);return this},setTime:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,r=e.uuid,a=this._actionsByClip,o=a[r];if(o!==void 0){for(var s=o.knownActions,l=0,d=s.length,n;l!==d;++l){n=s[l],this._deactivateAction(n);var p=n._cacheIndex,c=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,c._cacheIndex=p,t[p]=c,t.pop(),this._removeInactiveBindingsForAction(n)}delete a[r]}},uncacheRoot:function(e){var t=e.uuid,r=this._actionsByClip;for(var a in r){var i=r[a].actionByRoot,n=i[t];n!==void 0&&(this._deactivateAction(n),this._removeInactiveAction(n))}var o=this._bindingsByRootAndName,s=o[t];if(s!==void 0)for(var l in s){var d=s[l];d.restoreOriginalState(),this._removeInactiveBinding(d)}},uncacheAction:function(e,t){var r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}});function Uniform(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}Uniform.prototype.clone=function(){return new Uniform(this.value.clone===void 0?this.value:this.value.clone())};function InstancedInterleavedBuffer(e,t,r){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}});function Raycaster(e,t,r,a){this.ray=new Ray(e,t),this.near=r||0,this.far=a||1/0,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,t,r,a){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===a)for(var n=e.children,o=0,s=n.length;o<s;o++)intersectObject(n[o],t,r,!0)}Object.assign(Raycaster.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,r){var a=r||[];return intersectObject(e,this,a,t),a.sort(ascSort),a},intersectObjects:function(e,t,r){var a=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),a;for(var n=0,o=e.length;n<o;n++)intersectObject(e[n],this,a,t);return a.sort(ascSort),a}});function Spherical(e,t,r){return this.radius=void 0===e?1:e,this.phi=void 0===t?0:t,this.theta=void 0===r?0:r,this}Object.assign(Spherical.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(MathUtils.clamp(t/this.radius,-1,1))),this}});function Cylindrical(e,t,r){return this.radius=void 0===e?1:e,this.theta=void 0===t?0:t,this.y=void 0===r?0:r,this}Object.assign(Cylindrical.prototype,{set:function(e,t,r){return this.radius=e,this.theta=t,this.y=r,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}});var _vector$7=new Vector2;function Box2(e,t){this.min=e===void 0?new Vector2(+Infinity,+Infinity):e,this.max=t===void 0?new Vector2(-Infinity,-Infinity):t}Object.assign(Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var r=_vector$7.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=_vector$7.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var _startP=new Vector3,_startEnd=new Vector3;function Line3(e,t){this.start=e===void 0?new Vector3:e,this.end=t===void 0?new Vector3:t}Object.assign(Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,r){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);var a=_startEnd.dot(_startEnd),i=_startEnd.dot(_startP),n=i/a;return r&&(n=MathUtils.clamp(n,0,1)),n},closestPointToPoint:function(e,r,a){var i=this.closestPointToPointParameter(e,r);return void 0===a&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),a=new Vector3),this.delta(a).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}});function ImmediateRenderObject(e){Object3D.call(this),this.material=e,this.render=function(){}}ImmediateRenderObject.prototype=Object.create(Object3D.prototype),ImmediateRenderObject.prototype.constructor=ImmediateRenderObject,ImmediateRenderObject.prototype.isImmediateRenderObject=!0;var _vector$8=new Vector3;function SpotLightHelper(e,t){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var r=new BufferGeometry,a=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,o=1,s=32;n<s;n++,o++){var l=2*(n/s*Math.PI),d=2*(o/s*Math.PI);a.push(Math.cos(l),Math.sin(l),1,Math.cos(d),Math.sin(d),1)}r.setAttribute("position",new Float32BufferAttribute(a,3));var p=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(r,p),this.add(this.cone),this.update()}SpotLightHelper.prototype=Object.create(Object3D.prototype),SpotLightHelper.prototype.constructor=SpotLightHelper,SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},SpotLightHelper.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$8.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$8),this.color===void 0?this.cone.material.color.copy(this.light.color):this.cone.material.color.set(this.color)};var _vector$9=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;function getBoneList(e){var t=[];e&&e.isBone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,getBoneList(e.children[r]));return t}function SkeletonHelper(e){for(var t=getBoneList(e),r=new BufferGeometry,a=[],n=[],o=new Color(0,0,1),s=new Color(0,1,0),l=0,d;l<t.length;l++)d=t[l],d.parent&&d.parent.isBone&&(a.push(0,0,0),a.push(0,0,0),n.push(o.r,o.g,o.b),n.push(s.r,s.g,s.b));r.setAttribute("position",new Float32BufferAttribute(a,3)),r.setAttribute("color",new Float32BufferAttribute(n,3));var p=new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});LineSegments.call(this,r,p),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}SkeletonHelper.prototype=Object.create(LineSegments.prototype),SkeletonHelper.prototype.constructor=SkeletonHelper,SkeletonHelper.prototype.isSkeletonHelper=!0,SkeletonHelper.prototype.updateMatrixWorld=function(e){var t=this.bones,r=this.geometry,a=r.getAttribute("position");_matrixWorldInv.getInverse(this.root.matrixWorld);for(var n=0,o=0,s;n<t.length;n++)s=t[n],s.parent&&s.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,s.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),a.setXYZ(o,_vector$9.x,_vector$9.y,_vector$9.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,s.parent.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),a.setXYZ(o+1,_vector$9.x,_vector$9.y,_vector$9.z),o+=2);r.getAttribute("position").needsUpdate=!0,Object3D.prototype.updateMatrixWorld.call(this,e)};function PointLightHelper(e,t,r){this.light=e,this.light.updateMatrixWorld(),this.color=r;var a=new SphereBufferGeometry(t,4,2),i=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});Mesh.call(this,a,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}PointLightHelper.prototype=Object.create(Mesh.prototype),PointLightHelper.prototype.constructor=PointLightHelper,PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},PointLightHelper.prototype.update=function(){this.color===void 0?this.material.color.copy(this.light.color):this.material.color.set(this.color)};var _vector$a=new Vector3,_color1=new Color,_color2=new Color;function HemisphereLightHelper(e,t,r){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;var a=new OctahedronBufferGeometry(t);a.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);var i=a.getAttribute("position"),n=new Float32Array(3*i.count);a.setAttribute("color",new BufferAttribute(n,3)),this.add(new Mesh(a,this.material)),this.update()}HemisphereLightHelper.prototype=Object.create(Object3D.prototype),HemisphereLightHelper.prototype.constructor=HemisphereLightHelper,HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},HemisphereLightHelper.prototype.update=function(){var e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var t=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(var r=0,a=t.count,n;r<a;r++)n=r<a/2?_color1:_color2,t.setXYZ(r,n.r,n.g,n.b);t.needsUpdate=!0}e.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate())};function GridHelper(e,t,r,a){e=e||10,t=t||10,r=new Color(r===void 0?4473924:r),a=new Color(a===void 0?8947848:a);for(var n=t/2,o=e/t,s=e/2,l=[],d=[],p=0,c=0,u=-s;p<=t;p++,u+=o){l.push(-s,0,u,s,0,u),l.push(u,0,-s,u,0,s);var m=p===n?r:a;m.toArray(d,c),c+=3,m.toArray(d,c),c+=3,m.toArray(d,c),c+=3,m.toArray(d,c),c+=3}var g=new BufferGeometry;g.setAttribute("position",new Float32BufferAttribute(l,3)),g.setAttribute("color",new Float32BufferAttribute(d,3));var f=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,g,f)}GridHelper.prototype=Object.assign(Object.create(LineSegments.prototype),{constructor:GridHelper,copy:function(e){return LineSegments.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return new this.constructor().copy(this)}});function PolarGridHelper(e,t,a,n,o,s){e=e||10,t=t||16,a=a||8,n=n||64,o=new Color(o===void 0?4473924:o),s=new Color(s===void 0?8947848:s);var l=[],d=[],p,c,u,m,g,f,h;for(m=0;m<=t;m++)u=m/t*(2*Math.PI),p=Math.sin(u)*e,c=Math.cos(u)*e,l.push(0,0,0),l.push(p,0,c),h=1&m?o:s,d.push(h.r,h.g,h.b),d.push(h.r,h.g,h.b);for(m=0;m<=a;m++)for(h=1&m?o:s,f=e-e/a*m,g=0;g<n;g++)u=g/n*(2*Math.PI),p=Math.sin(u)*f,c=Math.cos(u)*f,l.push(p,0,c),d.push(h.r,h.g,h.b),u=(g+1)/n*(2*Math.PI),p=Math.sin(u)*f,c=Math.cos(u)*f,l.push(p,0,c),d.push(h.r,h.g,h.b);var y=new BufferGeometry;y.setAttribute("position",new Float32BufferAttribute(l,3)),y.setAttribute("color",new Float32BufferAttribute(d,3));var _=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,y,_)}PolarGridHelper.prototype=Object.create(LineSegments.prototype),PolarGridHelper.prototype.constructor=PolarGridHelper;var _v1$5=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;function DirectionalLightHelper(e,t,r){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,t===void 0&&(t=1);var a=new BufferGeometry;a.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(a,i),this.add(this.lightPlane),a=new BufferGeometry,a.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(a,i),this.add(this.targetLine),this.update()}DirectionalLightHelper.prototype=Object.create(Object3D.prototype),DirectionalLightHelper.prototype.constructor=DirectionalLightHelper,DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},DirectionalLightHelper.prototype.update=function(){_v1$5.setFromMatrixPosition(this.light.matrixWorld),_v2$3.setFromMatrixPosition(this.light.target.matrixWorld),_v3$1.subVectors(_v2$3,_v1$5),this.lightPlane.lookAt(_v2$3),this.color===void 0?(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)):(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)),this.targetLine.lookAt(_v2$3),this.targetLine.scale.z=_v3$1.length()};var _vector$b=new Vector3,_camera=new Camera;function CameraHelper(e){function t(e,t,a){r(e,a),r(t,a)}function r(e,t){n.push(0,0,0),o.push(t.r,t.g,t.b),s[e]===void 0&&(s[e]=[]),s[e].push(n.length/3-1)}var a=new BufferGeometry,i=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],o=[],s={},l=new Color(16755200),d=new Color(16711680),p=new Color(43775),c=new Color(16777215),u=new Color(3355443);t("n1","n2",l),t("n2","n4",l),t("n4","n3",l),t("n3","n1",l),t("f1","f2",l),t("f2","f4",l),t("f4","f3",l),t("f3","f1",l),t("n1","f1",l),t("n2","f2",l),t("n3","f3",l),t("n4","f4",l),t("p","n1",d),t("p","n2",d),t("p","n3",d),t("p","n4",d),t("u1","u2",p),t("u2","u3",p),t("u3","u1",p),t("c","t",c),t("p","c",u),t("cn1","cn2",u),t("cn3","cn4",u),t("cf1","cf2",u),t("cf3","cf4",u),a.setAttribute("position",new Float32BufferAttribute(n,3)),a.setAttribute("color",new Float32BufferAttribute(o,3)),LineSegments.call(this,a,i),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}CameraHelper.prototype=Object.create(LineSegments.prototype),CameraHelper.prototype.constructor=CameraHelper,CameraHelper.prototype.update=function(){var e=this.geometry,t=this.pointMap,r=1,a=1;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-r,-a,-1),setPoint("n2",t,e,_camera,r,-a,-1),setPoint("n3",t,e,_camera,-r,a,-1),setPoint("n4",t,e,_camera,r,a,-1),setPoint("f1",t,e,_camera,-r,-a,1),setPoint("f2",t,e,_camera,r,-a,1),setPoint("f3",t,e,_camera,-r,a,1),setPoint("f4",t,e,_camera,r,a,1),setPoint("u1",t,e,_camera,.7*r,1.1*a,-1),setPoint("u2",t,e,_camera,.7*-r,1.1*a,-1),setPoint("u3",t,e,_camera,0,2*a,-1),setPoint("cf1",t,e,_camera,-r,0,1),setPoint("cf2",t,e,_camera,r,0,1),setPoint("cf3",t,e,_camera,0,-a,1),setPoint("cf4",t,e,_camera,0,a,1),setPoint("cn1",t,e,_camera,-r,0,-1),setPoint("cn2",t,e,_camera,r,0,-1),setPoint("cn3",t,e,_camera,0,-a,-1),setPoint("cn4",t,e,_camera,0,a,-1),e.getAttribute("position").needsUpdate=!0};function setPoint(e,t,r,a,n,o,s){_vector$b.set(n,o,s).unproject(a);var d=t[e];if(d!==void 0)for(var p=r.getAttribute("position"),c=0,u=d.length;c<u;c++)p.setXYZ(d[c],_vector$b.x,_vector$b.y,_vector$b.z)}var _box$3=new Box3;function BoxHelper(e,t){this.object=e,t===void 0&&(t=16776960);var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new Float32Array(24),i=new BufferGeometry;i.setIndex(new BufferAttribute(r,1)),i.setAttribute("position",new BufferAttribute(a,3)),LineSegments.call(this,i,new LineBasicMaterial({color:t,toneMapped:!1})),this.matrixAutoUpdate=!1,this.update()}BoxHelper.prototype=Object.create(LineSegments.prototype),BoxHelper.prototype.constructor=BoxHelper,BoxHelper.prototype.update=function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box$3.setFromObject(this.object),!_box$3.isEmpty()){var t=_box$3.min,r=_box$3.max,a=this.geometry.attributes.position,i=a.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=t.x,i[4]=r.y,i[5]=r.z,i[6]=t.x,i[7]=t.y,i[8]=r.z,i[9]=r.x,i[10]=t.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=r.x,i[22]=t.y,i[23]=t.z,a.needsUpdate=!0,this.geometry.computeBoundingSphere()}},BoxHelper.prototype.setFromObject=function(e){return this.object=e,this.update(),this},BoxHelper.prototype.copy=function(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this},BoxHelper.prototype.clone=function(){return new this.constructor().copy(this)};function Box3Helper(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new BufferGeometry;a.setIndex(new BufferAttribute(r,1)),a.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),LineSegments.call(this,a,new LineBasicMaterial({color:t,toneMapped:!1})),this.geometry.computeBoundingSphere()}Box3Helper.prototype=Object.create(LineSegments.prototype),Box3Helper.prototype.constructor=Box3Helper,Box3Helper.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),Object3D.prototype.updateMatrixWorld.call(this,e))};function PlaneHelper(e,t,r){this.type="PlaneHelper",this.plane=e,this.size=t===void 0?1:t;var a=r===void 0?16776960:r,i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),Line.call(this,i,new LineBasicMaterial({color:a,toneMapped:!1}));var n=new BufferGeometry;n.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new Mesh(n,new MeshBasicMaterial({color:a,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}PlaneHelper.prototype=Object.create(Line.prototype),PlaneHelper.prototype.constructor=PlaneHelper,PlaneHelper.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=0>t?BackSide:FrontSide,this.lookAt(this.plane.normal),Object3D.prototype.updateMatrixWorld.call(this,e)};var _axis=new Vector3,_lineGeometry,_coneGeometry;function ArrowHelper(e,t,r,a,i,n){Object3D.call(this),e===void 0&&(e=new Vector3(0,0,1)),t===void 0&&(t=new Vector3(0,0,0)),r===void 0&&(r=1),a===void 0&&(a=16776960),i===void 0&&(i=.2*r),n===void 0&&(n=.2*i),_lineGeometry===void 0&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,n)}ArrowHelper.prototype=Object.create(Object3D.prototype),ArrowHelper.prototype.constructor=ArrowHelper,ArrowHelper.prototype.setDirection=function(e){if(.99999<e.y)this.quaternion.set(0,0,0,1);else if(-.99999>e.y)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();var t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}},ArrowHelper.prototype.setLength=function(e,t,r){t===void 0&&(t=.2*e),r===void 0&&(r=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},ArrowHelper.prototype.copy=function(e){return Object3D.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},ArrowHelper.prototype.clone=function(){return new this.constructor().copy(this)};function AxesHelper(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new BufferGeometry;r.setAttribute("position",new Float32BufferAttribute(t,3)),r.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var a=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,r,a)}AxesHelper.prototype=Object.create(LineSegments.prototype),AxesHelper.prototype.constructor=AxesHelper;var LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,LOD_MAX),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=LOD_MAX-4+1+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6},_flatCamera=new OrthographicCamera,_blurMaterial=_getBlurShader(MAX_SAMPLES),_equirectShader=null,_cubemapShader=null,{_lodPlanes,_sizeLods,_sigmas}=_createPlanes(),_pingPongRenderTarget=null,_renderer=null,_oldTarget=null,PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];function PMREMGenerator(e){_renderer=e,_compileMaterial(_blurMaterial)}PMREMGenerator.prototype={constructor:PMREMGenerator,fromScene:function(e,t=0,r=.1,a=100){_oldTarget=_renderer.getRenderTarget();var i=_allocateTargets();return _sceneToCubeUV(e,r,a,i),0<t&&_blur(i,0,0,t),_applyPMREM(i),_cleanup(i),i},fromEquirectangular:function(e){return e.magFilter=NearestFilter,e.minFilter=NearestFilter,e.generateMipmaps=!1,this.fromCubemap(e)},fromCubemap:function(e){_oldTarget=_renderer.getRenderTarget();var t=_allocateTargets(e);return _textureToCubeUV(e,t),_applyPMREM(t),_cleanup(t),t},compileCubemapShader:function(){null==_cubemapShader&&(_cubemapShader=_getCubemapShader(),_compileMaterial(_cubemapShader))},compileEquirectangularShader:function(){null==_equirectShader&&(_equirectShader=_getEquirectShader(),_compileMaterial(_equirectShader))},dispose:function(){_blurMaterial.dispose(),null!=_cubemapShader&&_cubemapShader.dispose(),null!=_equirectShader&&_equirectShader.dispose();for(var e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()}};function _createPlanes(){for(var e=[],t=[],r=[],a=LOD_MAX,n=0,o;n<TOTAL_LODS;n++){o=Math.pow(2,a),t.push(o);var s=1/o;n>LOD_MAX-LOD_MIN?s=EXTRA_LOD_SIGMA[n-LOD_MAX+LOD_MIN-1]:0==n&&(s=0),r.push(s);for(var l=1/(o-1),d=-l/2,p=1+l/2,c=[d,d,p,d,p,p,d,d,p,p,d,p],u=6,m=6,g=3,f=2,h=1,v=new Float32Array(g*m*u),_=new Float32Array(f*m*u),b=new Float32Array(h*m*u),M=0;M<u;M++){var S=2*(M%3)/3-1,x=2<M?0:-1;v.set([S,x,0,S+2/3,x,0,S+2/3,x+1,0,S,x,0,S+2/3,x+1,0,S,x+1,0],g*m*M),_.set(c,f*m*M);var y=[M,M,M,M,M,M];b.set(y,h*m*M)}var E=new BufferGeometry;E.setAttribute("position",new BufferAttribute(v,g)),E.setAttribute("uv",new BufferAttribute(_,f)),E.setAttribute("faceIndex",new BufferAttribute(b,h)),e.push(E),a>LOD_MIN&&a--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}function _allocateTargets(e){var t={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:!1,type:e?e.type:UnsignedByteType,format:e?e.format:RGBEFormat,encoding:e?e.encoding:RGBEEncoding,depthBuffer:!1,stencilBuffer:!1},r=_createRenderTarget(t);return r.depthBuffer=!e,_pingPongRenderTarget=_createRenderTarget(t),r}function _cleanup(e){_pingPongRenderTarget.dispose(),_renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,e.setSize(e.width,e.height)}function _sceneToCubeUV(e,t,r,a){var n=new PerspectiveCamera(90,1,t,r),o=[1,1,1,1,-1,1],s=[1,1,-1,-1,-1,1],l=_renderer.outputEncoding,d=_renderer.toneMapping,p=_renderer.toneMappingExposure,c=_renderer.getClearColor(),u=_renderer.getClearAlpha();_renderer.toneMapping=LinearToneMapping,_renderer.toneMappingExposure=1,_renderer.outputEncoding=LinearEncoding,e.scale.z*=-1;var m=e.background;if(m&&m.isColor){m.convertSRGBToLinear();var g=Math.max(m.r,m.g,m.b),f=Math.min(Math.max(Math.ceil(Math.log2(g)),-128),127);m=m.multiplyScalar(Math.pow(2,-f));_renderer.setClearColor(m,(f+128)/255),e.background=null}for(var h=0,y;6>h;h++)y=h%3,0==y?(n.up.set(0,o[h],0),n.lookAt(s[h],0,0)):1==y?(n.up.set(0,0,o[h]),n.lookAt(0,s[h],0)):(n.up.set(0,o[h],0),n.lookAt(0,0,s[h])),_setViewport(a,y*SIZE_MAX,2<h?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),_renderer.setRenderTarget(a),_renderer.render(e,n);_renderer.toneMapping=d,_renderer.toneMappingExposure=p,_renderer.outputEncoding=l,_renderer.setClearColor(c,u),e.scale.z*=-1}function _textureToCubeUV(e,t){var r=new Scene;e.isCubeTexture?null==_cubemapShader&&(_cubemapShader=_getCubemapShader()):null==_equirectShader&&(_equirectShader=_getEquirectShader());var a=e.isCubeTexture?_cubemapShader:_equirectShader;r.add(new Mesh(_lodPlanes[0],a));var i=a.uniforms;i.envMap.value=e,e.isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=ENCODINGS[e.encoding],i.outputEncoding.value=ENCODINGS[e.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),_renderer.setRenderTarget(t),_renderer.render(r,_flatCamera)}function _compileMaterial(e){var t=new Scene;t.add(new Mesh(_lodPlanes[0],e)),_renderer.compile(t,_flatCamera)}function _createRenderTarget(e){var t=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return t.texture.mapping=CubeUVReflectionMapping,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function _setViewport(e,t,r,a,i){e.viewport.set(t,r,a,i),e.scissor.set(t,r,a,i)}function _applyPMREM(e){var t=_renderer.autoClear;_renderer.autoClear=!1;for(var r=1;r<TOTAL_LODS;r++){var a=Math.sqrt(_sigmas[r]*_sigmas[r]-_sigmas[r-1]*_sigmas[r-1]),n=_axisDirections[(r-1)%_axisDirections.length];_blur(e,r-1,r,a,n)}_renderer.autoClear=t}function _blur(e,t,r,a,i){_halfBlur(e,_pingPongRenderTarget,t,r,a,"latitudinal",i),_halfBlur(_pingPongRenderTarget,e,r,r,a,"longitudinal",i)}function _halfBlur(e,t,r,a,n,o,s){"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");var l=new Scene;l.add(new Mesh(_lodPlanes[a],_blurMaterial));var d=_blurMaterial.uniforms,p=_sizeLods[r]-1,c=isFinite(n)?Math.PI/(2*p):2*Math.PI/(2*MAX_SAMPLES-1),u=n/c,m=isFinite(n)?1+Math.floor(3*u):MAX_SAMPLES;m>MAX_SAMPLES&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${MAX_SAMPLES}`);for(var g=[],f=0,h=0;h<MAX_SAMPLES;++h){var v=h/u,_=Math.exp(-v*v/2);g.push(_),0==h?f+=_:h<m&&(f+=2*_)}for(var h=0;h<g.length;h++)g[h]/=f;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value="latitudinal"===o,s&&(d.poleAxis.value=s),d.dTheta.value=c,d.mipInt.value=LOD_MAX-r,d.inputEncoding.value=ENCODINGS[e.texture.encoding],d.outputEncoding.value=ENCODINGS[e.texture.encoding];var b=_sizeLods[a],v=3*Math.max(0,SIZE_MAX-2*b),M=(0===a?0:2*SIZE_MAX)+2*b*(a>LOD_MAX-LOD_MIN?a-LOD_MAX+LOD_MIN:0);_setViewport(t,v,M,3*b,2*b),_renderer.setRenderTarget(t),_renderer.render(l,_flatCamera)}function _getBlurShader(e){var t=new Float32Array(e),r=new Vector3(0,1,0),a=new RawShaderMaterial({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${_getEncodings()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

vec3 getSample(float theta, vec3 axis) {
	float cosTheta = cos(theta);
	// Rodrigues' axis-angle rotation
	vec3 sampleDirection = vOutputDirection * cosTheta
		+ cross(axis, vOutputDirection) * sin(theta)
		+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
	return bilinearCubeUV(envMap, sampleDirection, mipInt);
}

void main() {
	vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
	if (all(equal(axis, vec3(0.0))))
		axis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);
	axis = normalize(axis);
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb += weights[0] * getSample(0.0, axis);
	for (int i = 1; i < n; i++) {
		if (i >= samples)
			break;
		float theta = dTheta * float(i);
		gl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);
		gl_FragColor.rgb += weights[i] * getSample(theta, axis);
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return a.type="SphericalGaussianBlur",a}function _getEquirectShader(){var e=new Vector2(1,1),t=new RawShaderMaterial({uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${_getEncodings()}

#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv;
	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;
	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return t.type="EquirectangularToCubeUV",t}function _getCubemapShader(){var e=new RawShaderMaterial({uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${_getEncodings()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e}function _getCommonVertexShader(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx;
		direction.z *= -1.0;
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.z *= -1.0;
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.x *= -1.0;
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.y *= -1.0;
	} else if (face == 5.0) {
		direction.xz *= -1.0;
	}
	return direction;
}
void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function _getEncodings(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}function Face4(e,t,r,a,i,n,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Face3(e,t,r,i,n,o)}var LineStrip=0,LinePieces=1,NoColors=0,FaceColors=1,VertexColors=2;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,r)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(DynamicDrawUsage)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(CurvePath.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new Geometry,r=0,a=e.length,n;r<a;r++)n=e[r],t.vertices.push(new Vector3(n.x,n.y,n.z||0));return t}}),Object.assign(Path.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});function ClosedSplineCurve3(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0}ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);function SplineCurve3(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);function Spline(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}Spline.prototype=Object.create(CatmullRomCurve3.prototype),Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:void 0===t?16777215:t}))}GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:void 0===t?16777215:t}))}Object.assign(Loader.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)}}),Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}Object.assign(ObjectLoader.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Box2.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Box3.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(MathUtils,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),MathUtils.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),MathUtils.ceilPowerOfTwo(e)}}),Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new Vector3().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,a,i,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,a,r,i,n)}}),Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Quaternion.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Triangle.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Triangle,{barycoordFromPoint:function(e,t,r,a,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,r,a,i)},normal:function(e,t,r,a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,r,a)}}),Object.assign(Shape.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)}}),Object.assign(Vector2.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector4.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),TrianglesDrawMode},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(DynamicDrawUsage)}}}),Object.assign(BufferAttribute.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){r!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(InterleavedBuffer.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===FlatShading}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(WebGLRenderer.prototype,{clearTarget:function(e,t,r,a){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,a)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?sRGBEncoding:LinearEncoding}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function WebGLRenderTargetCube(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,r)}Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(Audio.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,r=new AudioLoader;return r.load(e,function(e){t.setBuffer(e)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};var GeometryUtils={merge:function(e,t,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var a;t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),a=t.matrix,t=t.geometry),e.merge(t,a,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new TextureLoader;i.setCrossOrigin(this.crossOrigin);var n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},ImageUtils.loadTextureCube=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);var n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}var SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"115"}}));export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,ClosedSplineCurve3,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeBufferGeometry,ConeGeometry,CubeCamera,BoxGeometry as CubeGeometry,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DirectionalLightShadow,DiscreteInterpolant,DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeBufferGeometry,ExtrudeGeometry,Face3,Face4,FaceColors,FileLoader,FlatShading,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontFaceDirectionCCW,FrontFaceDirectionCW,FrontSide,Frustum,GammaEncoding,Geometry,GeometryUtils,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,LightShadow,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,SphericalReflectionMapping,Spline,SplineCurve,SplineCurve3,SpotLight,SpotLightHelper,SpotLightShadow,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronBufferGeometry,TetrahedronGeometry,TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusBufferGeometry,TorusGeometry,TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uncharted2ToneMapping,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGLCubeRenderTarget,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding};